
ffr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001d34  00001dc8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000044  00800106  00800106  00001dce  2**0
                  ALLOC
  3 .debug_aranges 00000080  00000000  00000000  00001dce  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001f1  00000000  00000000  00001e4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009c5  00000000  00000000  0000203f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000048f  00000000  00000000  00002a04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000085d  00000000  00000000  00002e93  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b0  00000000  00000000  000036f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000030f  00000000  00000000  000038a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000466  00000000  00000000  00003baf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__vector_7>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__vector_11>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1790>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1788>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e4 e3       	ldi	r30, 0x34	; 52
     17e:	fd e1       	ldi	r31, 0x1D	; 29
     180:	02 c0       	rjmp	.+4      	; 0x186 <.do_copy_data_start>

00000182 <.do_copy_data_loop>:
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0

00000186 <.do_copy_data_start>:
     186:	a6 30       	cpi	r26, 0x06	; 6
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <.do_copy_data_loop>

0000018c <__do_clear_bss>:
     18c:	11 e0       	ldi	r17, 0x01	; 1
     18e:	a6 e0       	ldi	r26, 0x06	; 6
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	aa 34       	cpi	r26, 0x4A	; 74
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 0e 01 	call	0x21c	; 0x21c <main>
     1a0:	0c 94 98 0e 	jmp	0x1d30	; 0x1d30 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <startTimer>:
}

void startTimer()
{
	//Refresh Loop Timer1  
	TCCR1B = (1 << WGM12) | (1 << CS10);//Set CTC & prescalar to 1
     1a8:	89 e0       	ldi	r24, 0x09	; 9
     1aa:	80 93 81 00 	sts	0x0081, r24
	OCR1A = 16000;//Compare Ticks 
     1ae:	80 e8       	ldi	r24, 0x80	; 128
     1b0:	9e e3       	ldi	r25, 0x3E	; 62
     1b2:	90 93 89 00 	sts	0x0089, r25
     1b6:	80 93 88 00 	sts	0x0088, r24
    TIMSK1 = (1 << OCIE1A);//Enable Timer Interrupts
     1ba:	82 e0       	ldi	r24, 0x02	; 2
     1bc:	80 93 6f 00 	sts	0x006F, r24
	milliseconds = 0;
     1c0:	10 92 06 01 	sts	0x0106, r1
     1c4:	10 92 07 01 	sts	0x0107, r1
     1c8:	10 92 08 01 	sts	0x0108, r1
     1cc:	10 92 09 01 	sts	0x0109, r1
}
     1d0:	08 95       	ret

000001d2 <__vector_11>:

ISR(TIMER1_COMPA_vect)
{
     1d2:	1f 92       	push	r1
     1d4:	0f 92       	push	r0
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	0f 92       	push	r0
     1da:	11 24       	eor	r1, r1
     1dc:	8f 93       	push	r24
     1de:	9f 93       	push	r25
     1e0:	af 93       	push	r26
     1e2:	bf 93       	push	r27
	milliseconds++;	
     1e4:	80 91 06 01 	lds	r24, 0x0106
     1e8:	90 91 07 01 	lds	r25, 0x0107
     1ec:	a0 91 08 01 	lds	r26, 0x0108
     1f0:	b0 91 09 01 	lds	r27, 0x0109
     1f4:	01 96       	adiw	r24, 0x01	; 1
     1f6:	a1 1d       	adc	r26, r1
     1f8:	b1 1d       	adc	r27, r1
     1fa:	80 93 06 01 	sts	0x0106, r24
     1fe:	90 93 07 01 	sts	0x0107, r25
     202:	a0 93 08 01 	sts	0x0108, r26
     206:	b0 93 09 01 	sts	0x0109, r27
}
     20a:	bf 91       	pop	r27
     20c:	af 91       	pop	r26
     20e:	9f 91       	pop	r25
     210:	8f 91       	pop	r24
     212:	0f 90       	pop	r0
     214:	0f be       	out	0x3f, r0	; 63
     216:	0f 90       	pop	r0
     218:	1f 90       	pop	r1
     21a:	18 95       	reti

0000021c <main>:
extern StepperMotor rightMotor;
volatile unsigned long milliseconds;
void startTimer(void);

int main(void)
{
     21c:	cf 92       	push	r12
     21e:	df 92       	push	r13
     220:	ef 92       	push	r14
     222:	ff 92       	push	r15
     224:	0f 93       	push	r16
     226:	1f 93       	push	r17
	setupStepperMotor();
     228:	0e 94 77 01 	call	0x2ee	; 0x2ee <setupStepperMotor>
}

void startTimer()
{
	//Refresh Loop Timer1  
	TCCR1B = (1 << WGM12) | (1 << CS10);//Set CTC & prescalar to 1
     22c:	89 e0       	ldi	r24, 0x09	; 9
     22e:	80 93 81 00 	sts	0x0081, r24
	OCR1A = 16000;//Compare Ticks 
     232:	80 e8       	ldi	r24, 0x80	; 128
     234:	9e e3       	ldi	r25, 0x3E	; 62
     236:	90 93 89 00 	sts	0x0089, r25
     23a:	80 93 88 00 	sts	0x0088, r24
    TIMSK1 = (1 << OCIE1A);//Enable Timer Interrupts
     23e:	82 e0       	ldi	r24, 0x02	; 2
     240:	80 93 6f 00 	sts	0x006F, r24
	milliseconds = 0;
     244:	10 92 06 01 	sts	0x0106, r1
     248:	10 92 07 01 	sts	0x0107, r1
     24c:	10 92 08 01 	sts	0x0108, r1
     250:	10 92 09 01 	sts	0x0109, r1

int main(void)
{
	setupStepperMotor();
	startTimer();
	USART_init();
     254:	0e 94 89 03 	call	0x712	; 0x712 <USART_init>
	
	turnOnTimers(1,1);
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	61 e0       	ldi	r22, 0x01	; 1
     25e:	70 e0       	ldi	r23, 0x00	; 0
     260:	0e 94 62 03 	call	0x6c4	; 0x6c4 <turnOnTimers>
	setDirection(1, 1);
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	61 e0       	ldi	r22, 0x01	; 1
     26a:	70 e0       	ldi	r23, 0x00	; 0
     26c:	0e 94 25 03 	call	0x64a	; 0x64a <setDirection>
	enableDrive(1, 1);
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	61 e0       	ldi	r22, 0x01	; 1
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	0e 94 65 01 	call	0x2ca	; 0x2ca <enableDrive>
	
	straight(1000, 0, 1000, 0, 1000, 3000);
     27c:	68 ee       	ldi	r22, 0xE8	; 232
     27e:	73 e0       	ldi	r23, 0x03	; 3
     280:	80 e0       	ldi	r24, 0x00	; 0
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	40 e0       	ldi	r20, 0x00	; 0
     286:	50 e0       	ldi	r21, 0x00	; 0
     288:	28 ee       	ldi	r18, 0xE8	; 232
     28a:	33 e0       	ldi	r19, 0x03	; 3
     28c:	00 e0       	ldi	r16, 0x00	; 0
     28e:	10 e0       	ldi	r17, 0x00	; 0
     290:	f8 ee       	ldi	r31, 0xE8	; 232
     292:	ef 2e       	mov	r14, r31
     294:	f3 e0       	ldi	r31, 0x03	; 3
     296:	ff 2e       	mov	r15, r31
     298:	e8 eb       	ldi	r30, 0xB8	; 184
     29a:	ce 2e       	mov	r12, r30
     29c:	eb e0       	ldi	r30, 0x0B	; 11
     29e:	de 2e       	mov	r13, r30
     2a0:	0e 94 73 05 	call	0xae6	; 0xae6 <straight>
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	90 e0       	ldi	r25, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2a8:	20 ea       	ldi	r18, 0xA0	; 160
     2aa:	3f e0       	ldi	r19, 0x0F	; 15
     2ac:	f9 01       	movw	r30, r18
     2ae:	31 97       	sbiw	r30, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <main+0x92>
	
	for(int i = 0; i < 250; i++)
     2b2:	01 96       	adiw	r24, 0x01	; 1
     2b4:	8a 3f       	cpi	r24, 0xFA	; 250
     2b6:	91 05       	cpc	r25, r1
     2b8:	c9 f7       	brne	.-14     	; 0x2ac <main+0x90>
	{
		
		_delay_ms(1);
	}
	
	PORTD |= (1 << PD3);
     2ba:	5b 9a       	sbi	0x0b, 3	; 11
	enableDrive(0, 0);
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	60 e0       	ldi	r22, 0x00	; 0
     2c2:	70 e0       	ldi	r23, 0x00	; 0
     2c4:	0e 94 65 01 	call	0x2ca	; 0x2ca <enableDrive>
     2c8:	ff cf       	rjmp	.-2      	; 0x2c8 <main+0xac>

000002ca <enableDrive>:
	enableDrive(0, 0);	
}

void enableDrive(int left, int right)
{
	if(left == 1)	
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	11 f4       	brne	.+4      	; 0x2d2 <enableDrive+0x8>
		PORTD &= ~(1 << PD6);	
     2ce:	5e 98       	cbi	0x0b, 6	; 11
     2d0:	05 c0       	rjmp	.+10     	; 0x2dc <enableDrive+0x12>
	else if(right == 0)
     2d2:	61 15       	cp	r22, r1
     2d4:	71 05       	cpc	r23, r1
     2d6:	11 f4       	brne	.+4      	; 0x2dc <enableDrive+0x12>
		PORTD |= (1 << PD6);
     2d8:	5e 9a       	sbi	0x0b, 6	; 11
     2da:	07 c0       	rjmp	.+14     	; 0x2ea <enableDrive+0x20>
	
	if(right == 1)	
     2dc:	61 30       	cpi	r22, 0x01	; 1
     2de:	71 05       	cpc	r23, r1
     2e0:	11 f4       	brne	.+4      	; 0x2e6 <enableDrive+0x1c>
		PORTD &= ~(1 << PD7);	
     2e2:	5f 98       	cbi	0x0b, 7	; 11
     2e4:	08 95       	ret
	else if(right == 0)	
     2e6:	67 2b       	or	r22, r23
     2e8:	09 f4       	brne	.+2      	; 0x2ec <enableDrive+0x22>
		PORTD |= (1 << PD7);	
     2ea:	5f 9a       	sbi	0x0b, 7	; 11
     2ec:	08 95       	ret

000002ee <setupStepperMotor>:
}

void setupStepperMotor()
{
	//Motor Pins are D2 and D4 on arduino nano
	DDRD |= (1 << PORTD2) | (1 << PORTD3) | (1 << PORTD4);
     2ee:	8a b1       	in	r24, 0x0a	; 10
     2f0:	8c 61       	ori	r24, 0x1C	; 28
     2f2:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << PORTB1) | (1 << PORTB0);
     2f4:	84 b1       	in	r24, 0x04	; 4
     2f6:	83 60       	ori	r24, 0x03	; 3
     2f8:	84 b9       	out	0x04, r24	; 4
	
	//Set to CTC
	TCCR0A = (1 << WGM01);
     2fa:	92 e0       	ldi	r25, 0x02	; 2
     2fc:	94 bd       	out	0x24, r25	; 36
	TCCR2A = (1 << WGM21);
     2fe:	90 93 b0 00 	sts	0x00B0, r25
	
	//Compare Ticks
	OCR0A = 1;
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	87 bd       	out	0x27, r24	; 39
	OCR2A = 1;
     306:	80 93 b3 00 	sts	0x00B3, r24
	
	//Enable Interrupts
	TIMSK0 = (1 << OCIE0A);
     30a:	90 93 6e 00 	sts	0x006E, r25
	TIMSK2 = (1 << OCIE2A);
     30e:	90 93 70 00 	sts	0x0070, r25
	
	//Set Prescalar to 0
	OCR0B = 0;
     312:	18 bc       	out	0x28, r1	; 40
	OCR2B = 0;
     314:	10 92 b4 00 	sts	0x00B4, r1
	
	//Enable Interrupts
	sei(); 
     318:	78 94       	sei
	
	enableDrive(0, 0);	
     31a:	80 e0       	ldi	r24, 0x00	; 0
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	60 e0       	ldi	r22, 0x00	; 0
     320:	70 e0       	ldi	r23, 0x00	; 0
     322:	0e 94 65 01 	call	0x2ca	; 0x2ca <enableDrive>
}
     326:	08 95       	ret

00000328 <pulseMotor>:
		PORTD |= (1 << PD7);	
}

/* Pulse port and pin for 10 microseconds */
void pulseMotor(volatile uint8_t *port, uint8_t pin)
{
     328:	fc 01       	movw	r30, r24
	//Send Pulse to Motor
	(*port) |= (1 << pin);
     32a:	20 81       	ld	r18, Z
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	02 c0       	rjmp	.+4      	; 0x336 <pulseMotor+0xe>
     332:	88 0f       	add	r24, r24
     334:	99 1f       	adc	r25, r25
     336:	6a 95       	dec	r22
     338:	e2 f7       	brpl	.-8      	; 0x332 <pulseMotor+0xa>
     33a:	28 2b       	or	r18, r24
     33c:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     33e:	9a e1       	ldi	r25, 0x1A	; 26
     340:	9a 95       	dec	r25
     342:	f1 f7       	brne	.-4      	; 0x340 <pulseMotor+0x18>
	_delay_us(5);
	(*port) &= ~(1 << pin);
     344:	20 81       	ld	r18, Z
     346:	80 95       	com	r24
     348:	82 23       	and	r24, r18
     34a:	80 83       	st	Z, r24
}
     34c:	08 95       	ret

0000034e <__vector_7>:
	}
}

/* RIGHT MOTOR CONTROL */
ISR(TIMER2_COMPA_vect)
{
     34e:	1f 92       	push	r1
     350:	0f 92       	push	r0
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	0f 92       	push	r0
     356:	11 24       	eor	r1, r1
     358:	2f 93       	push	r18
     35a:	3f 93       	push	r19
     35c:	4f 93       	push	r20
     35e:	5f 93       	push	r21
     360:	6f 93       	push	r22
     362:	7f 93       	push	r23
     364:	8f 93       	push	r24
     366:	9f 93       	push	r25
     368:	af 93       	push	r26
     36a:	bf 93       	push	r27
     36c:	ef 93       	push	r30
     36e:	ff 93       	push	r31
	//Set to max initially to prevent the next interrupt cycle from overwriting this one
	OCR2A = 255;
     370:	8f ef       	ldi	r24, 0xFF	; 255
     372:	80 93 b3 00 	sts	0x00B3, r24

	//If ready to update again
	if(rightMotor.delayCounter == 0)
     376:	60 91 12 01 	lds	r22, 0x0112
     37a:	70 91 13 01 	lds	r23, 0x0113
     37e:	80 91 14 01 	lds	r24, 0x0114
     382:	90 91 15 01 	lds	r25, 0x0115
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	50 e0       	ldi	r21, 0x00	; 0
     38e:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     392:	88 23       	and	r24, r24
     394:	41 f5       	brne	.+80     	; 0x3e6 <__vector_7+0x98>
	{
		//Pulse and increment motor
		pulseMotor(&PORTD, PD4);
     396:	8b e2       	ldi	r24, 0x2B	; 43
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	64 e0       	ldi	r22, 0x04	; 4
     39c:	0e 94 94 01 	call	0x328	; 0x328 <pulseMotor>
		rightMotor.stepCount++;
     3a0:	80 91 0a 01 	lds	r24, 0x010A
     3a4:	90 91 0b 01 	lds	r25, 0x010B
     3a8:	a0 91 0c 01 	lds	r26, 0x010C
     3ac:	b0 91 0d 01 	lds	r27, 0x010D
     3b0:	01 96       	adiw	r24, 0x01	; 1
     3b2:	a1 1d       	adc	r26, r1
     3b4:	b1 1d       	adc	r27, r1
     3b6:	80 93 0a 01 	sts	0x010A, r24
     3ba:	90 93 0b 01 	sts	0x010B, r25
     3be:	a0 93 0c 01 	sts	0x010C, r26
     3c2:	b0 93 0d 01 	sts	0x010D, r27
		
		rightMotor.delayCounter = rightMotor.currentStepDelay;
     3c6:	80 91 0e 01 	lds	r24, 0x010E
     3ca:	90 91 0f 01 	lds	r25, 0x010F
     3ce:	a0 91 10 01 	lds	r26, 0x0110
     3d2:	b0 91 11 01 	lds	r27, 0x0111
     3d6:	80 93 12 01 	sts	0x0112, r24
     3da:	90 93 13 01 	sts	0x0113, r25
     3de:	a0 93 14 01 	sts	0x0114, r26
     3e2:	b0 93 15 01 	sts	0x0115, r27
	}
	
	//8 Bit Fix
	if(rightMotor.delayCounter <= 255)
     3e6:	60 91 12 01 	lds	r22, 0x0112
     3ea:	70 91 13 01 	lds	r23, 0x0113
     3ee:	80 91 14 01 	lds	r24, 0x0114
     3f2:	90 91 15 01 	lds	r25, 0x0115
     3f6:	20 e0       	ldi	r18, 0x00	; 0
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	4f e7       	ldi	r20, 0x7F	; 127
     3fc:	53 e4       	ldi	r21, 0x43	; 67
     3fe:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     402:	18 16       	cp	r1, r24
     404:	cc f0       	brlt	.+50     	; 0x438 <__vector_7+0xea>
	{
		OCR2A = rightMotor.delayCounter;
     406:	60 91 12 01 	lds	r22, 0x0112
     40a:	70 91 13 01 	lds	r23, 0x0113
     40e:	80 91 14 01 	lds	r24, 0x0114
     412:	90 91 15 01 	lds	r25, 0x0115
     416:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     41a:	60 93 b3 00 	sts	0x00B3, r22
		rightMotor.delayCounter = 0;
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	a0 e0       	ldi	r26, 0x00	; 0
     424:	b0 e0       	ldi	r27, 0x00	; 0
     426:	80 93 12 01 	sts	0x0112, r24
     42a:	90 93 13 01 	sts	0x0113, r25
     42e:	a0 93 14 01 	sts	0x0114, r26
     432:	b0 93 15 01 	sts	0x0115, r27
     436:	3b c0       	rjmp	.+118    	; 0x4ae <__vector_7+0x160>
	}
	else
	{
		if((int)rightMotor.delayCounter % 255 < 20)
     438:	60 91 12 01 	lds	r22, 0x0112
     43c:	70 91 13 01 	lds	r23, 0x0113
     440:	80 91 14 01 	lds	r24, 0x0114
     444:	90 91 15 01 	lds	r25, 0x0115
     448:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__fixsfsi>
     44c:	dc 01       	movw	r26, r24
     44e:	cb 01       	movw	r24, r22
     450:	6f ef       	ldi	r22, 0xFF	; 255
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__divmodhi4>
     458:	44 97       	sbiw	r24, 0x14	; 20
     45a:	84 f4       	brge	.+32     	; 0x47c <__vector_7+0x12e>
		{
			OCR2A = 20;
     45c:	84 e1       	ldi	r24, 0x14	; 20
     45e:	80 93 b3 00 	sts	0x00B3, r24
			rightMotor.delayCounter -= 20;
     462:	60 91 12 01 	lds	r22, 0x0112
     466:	70 91 13 01 	lds	r23, 0x0113
     46a:	80 91 14 01 	lds	r24, 0x0114
     46e:	90 91 15 01 	lds	r25, 0x0115
     472:	20 e0       	ldi	r18, 0x00	; 0
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	40 ea       	ldi	r20, 0xA0	; 160
     478:	51 e4       	ldi	r21, 0x41	; 65
     47a:	0f c0       	rjmp	.+30     	; 0x49a <__vector_7+0x14c>
		}
		else
		{
			OCR2A = 255;
     47c:	8f ef       	ldi	r24, 0xFF	; 255
     47e:	80 93 b3 00 	sts	0x00B3, r24
			rightMotor.delayCounter -= 255;
     482:	60 91 12 01 	lds	r22, 0x0112
     486:	70 91 13 01 	lds	r23, 0x0113
     48a:	80 91 14 01 	lds	r24, 0x0114
     48e:	90 91 15 01 	lds	r25, 0x0115
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	4f e7       	ldi	r20, 0x7F	; 127
     498:	53 e4       	ldi	r21, 0x43	; 67
     49a:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <__subsf3>
     49e:	60 93 12 01 	sts	0x0112, r22
     4a2:	70 93 13 01 	sts	0x0113, r23
     4a6:	80 93 14 01 	sts	0x0114, r24
     4aa:	90 93 15 01 	sts	0x0115, r25
		}
	}
}
     4ae:	ff 91       	pop	r31
     4b0:	ef 91       	pop	r30
     4b2:	bf 91       	pop	r27
     4b4:	af 91       	pop	r26
     4b6:	9f 91       	pop	r25
     4b8:	8f 91       	pop	r24
     4ba:	7f 91       	pop	r23
     4bc:	6f 91       	pop	r22
     4be:	5f 91       	pop	r21
     4c0:	4f 91       	pop	r20
     4c2:	3f 91       	pop	r19
     4c4:	2f 91       	pop	r18
     4c6:	0f 90       	pop	r0
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	0f 90       	pop	r0
     4cc:	1f 90       	pop	r1
     4ce:	18 95       	reti

000004d0 <__vector_14>:



/* LEFT MOTOR CONTROL */
ISR(TIMER0_COMPA_vect)
{
     4d0:	1f 92       	push	r1
     4d2:	0f 92       	push	r0
     4d4:	0f b6       	in	r0, 0x3f	; 63
     4d6:	0f 92       	push	r0
     4d8:	11 24       	eor	r1, r1
     4da:	2f 93       	push	r18
     4dc:	3f 93       	push	r19
     4de:	4f 93       	push	r20
     4e0:	5f 93       	push	r21
     4e2:	6f 93       	push	r22
     4e4:	7f 93       	push	r23
     4e6:	8f 93       	push	r24
     4e8:	9f 93       	push	r25
     4ea:	af 93       	push	r26
     4ec:	bf 93       	push	r27
     4ee:	ef 93       	push	r30
     4f0:	ff 93       	push	r31
	//Set to max initially to prevent the next interrupt cycle from overwriting this one
	OCR0A = 255;
     4f2:	8f ef       	ldi	r24, 0xFF	; 255
     4f4:	87 bd       	out	0x27, r24	; 39
	
	//If ready to update again
	if(leftMotor.delayCounter == 0)
     4f6:	60 91 2a 01 	lds	r22, 0x012A
     4fa:	70 91 2b 01 	lds	r23, 0x012B
     4fe:	80 91 2c 01 	lds	r24, 0x012C
     502:	90 91 2d 01 	lds	r25, 0x012D
     506:	20 e0       	ldi	r18, 0x00	; 0
     508:	30 e0       	ldi	r19, 0x00	; 0
     50a:	40 e0       	ldi	r20, 0x00	; 0
     50c:	50 e0       	ldi	r21, 0x00	; 0
     50e:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     512:	88 23       	and	r24, r24
     514:	41 f5       	brne	.+80     	; 0x566 <__vector_14+0x96>
	{
		pulseMotor(&PORTD, PD2);
     516:	8b e2       	ldi	r24, 0x2B	; 43
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	62 e0       	ldi	r22, 0x02	; 2
     51c:	0e 94 94 01 	call	0x328	; 0x328 <pulseMotor>
		leftMotor.stepCount++;		
     520:	80 91 22 01 	lds	r24, 0x0122
     524:	90 91 23 01 	lds	r25, 0x0123
     528:	a0 91 24 01 	lds	r26, 0x0124
     52c:	b0 91 25 01 	lds	r27, 0x0125
     530:	01 96       	adiw	r24, 0x01	; 1
     532:	a1 1d       	adc	r26, r1
     534:	b1 1d       	adc	r27, r1
     536:	80 93 22 01 	sts	0x0122, r24
     53a:	90 93 23 01 	sts	0x0123, r25
     53e:	a0 93 24 01 	sts	0x0124, r26
     542:	b0 93 25 01 	sts	0x0125, r27
		
		leftMotor.delayCounter = leftMotor.currentStepDelay;
     546:	80 91 26 01 	lds	r24, 0x0126
     54a:	90 91 27 01 	lds	r25, 0x0127
     54e:	a0 91 28 01 	lds	r26, 0x0128
     552:	b0 91 29 01 	lds	r27, 0x0129
     556:	80 93 2a 01 	sts	0x012A, r24
     55a:	90 93 2b 01 	sts	0x012B, r25
     55e:	a0 93 2c 01 	sts	0x012C, r26
     562:	b0 93 2d 01 	sts	0x012D, r27
	}
	
	//8 Bit Fix
	if(leftMotor.delayCounter <= 255)
     566:	60 91 2a 01 	lds	r22, 0x012A
     56a:	70 91 2b 01 	lds	r23, 0x012B
     56e:	80 91 2c 01 	lds	r24, 0x012C
     572:	90 91 2d 01 	lds	r25, 0x012D
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	4f e7       	ldi	r20, 0x7F	; 127
     57c:	53 e4       	ldi	r21, 0x43	; 67
     57e:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     582:	18 16       	cp	r1, r24
     584:	c4 f0       	brlt	.+48     	; 0x5b6 <__vector_14+0xe6>
	{
		OCR0A = leftMotor.delayCounter;
     586:	60 91 2a 01 	lds	r22, 0x012A
     58a:	70 91 2b 01 	lds	r23, 0x012B
     58e:	80 91 2c 01 	lds	r24, 0x012C
     592:	90 91 2d 01 	lds	r25, 0x012D
     596:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     59a:	67 bd       	out	0x27, r22	; 39
		leftMotor.delayCounter = 0;
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	a0 e0       	ldi	r26, 0x00	; 0
     5a2:	b0 e0       	ldi	r27, 0x00	; 0
     5a4:	80 93 2a 01 	sts	0x012A, r24
     5a8:	90 93 2b 01 	sts	0x012B, r25
     5ac:	a0 93 2c 01 	sts	0x012C, r26
     5b0:	b0 93 2d 01 	sts	0x012D, r27
     5b4:	39 c0       	rjmp	.+114    	; 0x628 <__vector_14+0x158>
	}
	else
	{
		if((int)leftMotor.delayCounter % 255 < 20)
     5b6:	60 91 2a 01 	lds	r22, 0x012A
     5ba:	70 91 2b 01 	lds	r23, 0x012B
     5be:	80 91 2c 01 	lds	r24, 0x012C
     5c2:	90 91 2d 01 	lds	r25, 0x012D
     5c6:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__fixsfsi>
     5ca:	dc 01       	movw	r26, r24
     5cc:	cb 01       	movw	r24, r22
     5ce:	6f ef       	ldi	r22, 0xFF	; 255
     5d0:	70 e0       	ldi	r23, 0x00	; 0
     5d2:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__divmodhi4>
     5d6:	44 97       	sbiw	r24, 0x14	; 20
     5d8:	7c f4       	brge	.+30     	; 0x5f8 <__vector_14+0x128>
		{
			OCR0A = 20;
     5da:	84 e1       	ldi	r24, 0x14	; 20
     5dc:	87 bd       	out	0x27, r24	; 39
			leftMotor.delayCounter -= 20;
     5de:	60 91 2a 01 	lds	r22, 0x012A
     5e2:	70 91 2b 01 	lds	r23, 0x012B
     5e6:	80 91 2c 01 	lds	r24, 0x012C
     5ea:	90 91 2d 01 	lds	r25, 0x012D
     5ee:	20 e0       	ldi	r18, 0x00	; 0
     5f0:	30 e0       	ldi	r19, 0x00	; 0
     5f2:	40 ea       	ldi	r20, 0xA0	; 160
     5f4:	51 e4       	ldi	r21, 0x41	; 65
     5f6:	0e c0       	rjmp	.+28     	; 0x614 <__vector_14+0x144>
		}
		else
		{
			OCR0A = 255;
     5f8:	8f ef       	ldi	r24, 0xFF	; 255
     5fa:	87 bd       	out	0x27, r24	; 39
			leftMotor.delayCounter -= 255;
     5fc:	60 91 2a 01 	lds	r22, 0x012A
     600:	70 91 2b 01 	lds	r23, 0x012B
     604:	80 91 2c 01 	lds	r24, 0x012C
     608:	90 91 2d 01 	lds	r25, 0x012D
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	4f e7       	ldi	r20, 0x7F	; 127
     612:	53 e4       	ldi	r21, 0x43	; 67
     614:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <__subsf3>
     618:	60 93 2a 01 	sts	0x012A, r22
     61c:	70 93 2b 01 	sts	0x012B, r23
     620:	80 93 2c 01 	sts	0x012C, r24
     624:	90 93 2d 01 	sts	0x012D, r25
		}
	}
}
     628:	ff 91       	pop	r31
     62a:	ef 91       	pop	r30
     62c:	bf 91       	pop	r27
     62e:	af 91       	pop	r26
     630:	9f 91       	pop	r25
     632:	8f 91       	pop	r24
     634:	7f 91       	pop	r23
     636:	6f 91       	pop	r22
     638:	5f 91       	pop	r21
     63a:	4f 91       	pop	r20
     63c:	3f 91       	pop	r19
     63e:	2f 91       	pop	r18
     640:	0f 90       	pop	r0
     642:	0f be       	out	0x3f, r0	; 63
     644:	0f 90       	pop	r0
     646:	1f 90       	pop	r1
     648:	18 95       	reti

0000064a <setDirection>:
	(*port) &= ~(1 << pin);
}

void setDirection(int left, int right)
{
	if(left)
     64a:	89 2b       	or	r24, r25
     64c:	11 f0       	breq	.+4      	; 0x652 <setDirection+0x8>
		PORTB &= ~(1 << PB0);
     64e:	28 98       	cbi	0x05, 0	; 5
     650:	01 c0       	rjmp	.+2      	; 0x654 <setDirection+0xa>
	else
		PORTB |= (1 << PB0);
     652:	28 9a       	sbi	0x05, 0	; 5
		
	if(right)
     654:	67 2b       	or	r22, r23
     656:	11 f0       	breq	.+4      	; 0x65c <setDirection+0x12>
		PORTB |= (1 << PB1);
     658:	29 9a       	sbi	0x05, 1	; 5
     65a:	08 95       	ret
	else
		PORTB &= ~(1 << PB1);
     65c:	29 98       	cbi	0x05, 1	; 5
     65e:	08 95       	ret

00000660 <eightBitTimerFix>:
}


int eightBitTimerFix(struct StepperMotor *motor)
{
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	ec 01       	movw	r28, r24
	
	int returnNum;

	if(motor->delayCounter <= 255)
     666:	68 85       	ldd	r22, Y+8	; 0x08
     668:	79 85       	ldd	r23, Y+9	; 0x09
     66a:	8a 85       	ldd	r24, Y+10	; 0x0a
     66c:	9b 85       	ldd	r25, Y+11	; 0x0b
     66e:	20 e0       	ldi	r18, 0x00	; 0
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	4f e7       	ldi	r20, 0x7F	; 127
     674:	53 e4       	ldi	r21, 0x43	; 67
     676:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     67a:	18 16       	cp	r1, r24
     67c:	7c f0       	brlt	.+30     	; 0x69c <eightBitTimerFix+0x3c>
	{
		returnNum = motor->delayCounter;
     67e:	68 85       	ldd	r22, Y+8	; 0x08
     680:	79 85       	ldd	r23, Y+9	; 0x09
     682:	8a 85       	ldd	r24, Y+10	; 0x0a
     684:	9b 85       	ldd	r25, Y+11	; 0x0b
     686:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__fixsfsi>
		motor->delayCounter = 0;	
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	a0 e0       	ldi	r26, 0x00	; 0
     690:	b0 e0       	ldi	r27, 0x00	; 0
     692:	88 87       	std	Y+8, r24	; 0x08
     694:	99 87       	std	Y+9, r25	; 0x09
     696:	aa 87       	std	Y+10, r26	; 0x0a
     698:	bb 87       	std	Y+11, r27	; 0x0b
     69a:	10 c0       	rjmp	.+32     	; 0x6bc <eightBitTimerFix+0x5c>
	}
	else
	{
		motor->delayCounter -= 255;
     69c:	68 85       	ldd	r22, Y+8	; 0x08
     69e:	79 85       	ldd	r23, Y+9	; 0x09
     6a0:	8a 85       	ldd	r24, Y+10	; 0x0a
     6a2:	9b 85       	ldd	r25, Y+11	; 0x0b
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	4f e7       	ldi	r20, 0x7F	; 127
     6aa:	53 e4       	ldi	r21, 0x43	; 67
     6ac:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <__subsf3>
     6b0:	68 87       	std	Y+8, r22	; 0x08
     6b2:	79 87       	std	Y+9, r23	; 0x09
     6b4:	8a 87       	std	Y+10, r24	; 0x0a
     6b6:	9b 87       	std	Y+11, r25	; 0x0b
     6b8:	6f ef       	ldi	r22, 0xFF	; 255
     6ba:	70 e0       	ldi	r23, 0x00	; 0
		returnNum = 255;
	}
	return returnNum;
}
     6bc:	cb 01       	movw	r24, r22
     6be:	df 91       	pop	r29
     6c0:	cf 91       	pop	r28
     6c2:	08 95       	ret

000006c4 <turnOnTimers>:

void turnOnTimers(int one, int two)
{
	if(one)
     6c4:	89 2b       	or	r24, r25
     6c6:	19 f0       	breq	.+6      	; 0x6ce <turnOnTimers+0xa>
		TCCR0B |= (1 << CS01) | (1 << CS00);
     6c8:	85 b5       	in	r24, 0x25	; 37
     6ca:	83 60       	ori	r24, 0x03	; 3
     6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <turnOnTimers+0xe>
	else
		TCCR0B &= ~((1 << CS01) | (1 << CS00));
     6ce:	85 b5       	in	r24, 0x25	; 37
     6d0:	8c 7f       	andi	r24, 0xFC	; 252
     6d2:	85 bd       	out	0x25, r24	; 37
		
	if(two)
     6d4:	67 2b       	or	r22, r23
     6d6:	21 f0       	breq	.+8      	; 0x6e0 <turnOnTimers+0x1c>
		TCCR2B |= (1 << CS22);
     6d8:	80 91 b1 00 	lds	r24, 0x00B1
     6dc:	84 60       	ori	r24, 0x04	; 4
     6de:	03 c0       	rjmp	.+6      	; 0x6e6 <turnOnTimers+0x22>
	else	
		TCCR2B &= ~(1 << CS22);
     6e0:	80 91 b1 00 	lds	r24, 0x00B1
     6e4:	8b 7f       	andi	r24, 0xFB	; 251
     6e6:	80 93 b1 00 	sts	0x00B1, r24
     6ea:	08 95       	ret

000006ec <getDelayFromVelocity>:
}

int getDelayFromVelocity(int stepsPerSecond)
{
	if(stepsPerSecond < 10)
     6ec:	8a 30       	cpi	r24, 0x0A	; 10
     6ee:	91 05       	cpc	r25, r1
     6f0:	1c f4       	brge	.+6      	; 0x6f8 <getDelayFromVelocity+0xc>
     6f2:	28 ea       	ldi	r18, 0xA8	; 168
     6f4:	31 e6       	ldi	r19, 0x61	; 97
     6f6:	0b c0       	rjmp	.+22     	; 0x70e <getDelayFromVelocity+0x22>
		return 25000;
	else
		return TIMER_FREQUENCY / stepsPerSecond;
     6f8:	9c 01       	movw	r18, r24
     6fa:	44 27       	eor	r20, r20
     6fc:	37 fd       	sbrc	r19, 7
     6fe:	40 95       	com	r20
     700:	54 2f       	mov	r21, r20
     702:	60 e9       	ldi	r22, 0x90	; 144
     704:	70 ed       	ldi	r23, 0xD0	; 208
     706:	83 e0       	ldi	r24, 0x03	; 3
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__divmodsi4>
}
     70e:	c9 01       	movw	r24, r18
     710:	08 95       	ret

00000712 <USART_init>:
void USART_putstring(char* StringPtr);
 
 
void USART_init(void){
 
 UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     712:	10 92 c5 00 	sts	0x00C5, r1
 UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     716:	87 e6       	ldi	r24, 0x67	; 103
     718:	80 93 c4 00 	sts	0x00C4, r24
 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     71c:	88 e1       	ldi	r24, 0x18	; 24
     71e:	80 93 c1 00 	sts	0x00C1, r24
 UCSR0C = (3<<UCSZ00);
     722:	86 e0       	ldi	r24, 0x06	; 6
     724:	80 93 c2 00 	sts	0x00C2, r24
}
     728:	08 95       	ret

0000072a <USART_receive>:
 
unsigned char USART_receive(void){
 
 while(!(UCSR0A & (1<<RXC0)));
     72a:	80 91 c0 00 	lds	r24, 0x00C0
     72e:	87 ff       	sbrs	r24, 7
     730:	fc cf       	rjmp	.-8      	; 0x72a <USART_receive>
 return UDR0;
     732:	80 91 c6 00 	lds	r24, 0x00C6
 
}
     736:	08 95       	ret

00000738 <USART_send>:
 
void USART_send( unsigned char data){
     738:	98 2f       	mov	r25, r24
 
 while(!(UCSR0A & (1<<UDRE0)));
     73a:	80 91 c0 00 	lds	r24, 0x00C0
     73e:	85 ff       	sbrs	r24, 5
     740:	fc cf       	rjmp	.-8      	; 0x73a <USART_send+0x2>
 UDR0 = data;
     742:	90 93 c6 00 	sts	0x00C6, r25
 
}
     746:	08 95       	ret

00000748 <USART_putstring>:
 
void USART_putstring(char* StringPtr){
     748:	fc 01       	movw	r30, r24
     74a:	07 c0       	rjmp	.+14     	; 0x75a <USART_putstring+0x12>
 
}
 
void USART_send( unsigned char data){
 
 while(!(UCSR0A & (1<<UDRE0)));
     74c:	80 91 c0 00 	lds	r24, 0x00C0
     750:	85 ff       	sbrs	r24, 5
     752:	fc cf       	rjmp	.-8      	; 0x74c <USART_putstring+0x4>
 UDR0 = data;
     754:	90 93 c6 00 	sts	0x00C6, r25
 
void USART_putstring(char* StringPtr){
 
while(*StringPtr != 0x00){
 USART_send(*StringPtr);
 StringPtr++;}
     758:	31 96       	adiw	r30, 0x01	; 1
 
}
 
void USART_putstring(char* StringPtr){
 
while(*StringPtr != 0x00){
     75a:	90 81       	ld	r25, Z
     75c:	99 23       	and	r25, r25
     75e:	b1 f7       	brne	.-20     	; 0x74c <USART_putstring+0x4>
 USART_send(*StringPtr);
 StringPtr++;}
 
}
     760:	08 95       	ret

00000762 <print>:
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial
}

void print(char* string)
{
	USART_putstring(string);
     762:	0e 94 a4 03 	call	0x748	; 0x748 <USART_putstring>
     766:	08 95       	ret

00000768 <printNum>:
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial  
	USART_putstring("\n\r");
}

void printNum(float value)
{
     768:	0f 93       	push	r16
     76a:	1f 93       	push	r17
	sprintf(str,"%f",value);
     76c:	2d b7       	in	r18, 0x3d	; 61
     76e:	3e b7       	in	r19, 0x3e	; 62
     770:	28 50       	subi	r18, 0x08	; 8
     772:	30 40       	sbci	r19, 0x00	; 0
     774:	0f b6       	in	r0, 0x3f	; 63
     776:	f8 94       	cli
     778:	3e bf       	out	0x3e, r19	; 62
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	2d bf       	out	0x3d, r18	; 61
     77e:	ed b7       	in	r30, 0x3d	; 61
     780:	fe b7       	in	r31, 0x3e	; 62
     782:	31 96       	adiw	r30, 0x01	; 1
     784:	0a e3       	ldi	r16, 0x3A	; 58
     786:	11 e0       	ldi	r17, 0x01	; 1
     788:	ad b7       	in	r26, 0x3d	; 61
     78a:	be b7       	in	r27, 0x3e	; 62
     78c:	12 96       	adiw	r26, 0x02	; 2
     78e:	1c 93       	st	X, r17
     790:	0e 93       	st	-X, r16
     792:	11 97       	sbiw	r26, 0x01	; 1
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	31 e0       	ldi	r19, 0x01	; 1
     798:	33 83       	std	Z+3, r19	; 0x03
     79a:	22 83       	std	Z+2, r18	; 0x02
     79c:	64 83       	std	Z+4, r22	; 0x04
     79e:	75 83       	std	Z+5, r23	; 0x05
     7a0:	86 83       	std	Z+6, r24	; 0x06
     7a2:	97 83       	std	Z+7, r25	; 0x07
     7a4:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <sprintf>
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial
     7a8:	2d b7       	in	r18, 0x3d	; 61
     7aa:	3e b7       	in	r19, 0x3e	; 62
     7ac:	28 5f       	subi	r18, 0xF8	; 248
     7ae:	3f 4f       	sbci	r19, 0xFF	; 255
     7b0:	0f b6       	in	r0, 0x3f	; 63
     7b2:	f8 94       	cli
     7b4:	3e bf       	out	0x3e, r19	; 62
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	2d bf       	out	0x3d, r18	; 61
     7ba:	c8 01       	movw	r24, r16
     7bc:	0e 94 a4 03 	call	0x748	; 0x748 <USART_putstring>
}
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	08 95       	ret

000007c6 <printlnNum>:
 
}

char str[16];
void printlnNum(double value)
{
     7c6:	0f 93       	push	r16
     7c8:	1f 93       	push	r17
	sprintf(str,"%f",value);
     7ca:	2d b7       	in	r18, 0x3d	; 61
     7cc:	3e b7       	in	r19, 0x3e	; 62
     7ce:	28 50       	subi	r18, 0x08	; 8
     7d0:	30 40       	sbci	r19, 0x00	; 0
     7d2:	0f b6       	in	r0, 0x3f	; 63
     7d4:	f8 94       	cli
     7d6:	3e bf       	out	0x3e, r19	; 62
     7d8:	0f be       	out	0x3f, r0	; 63
     7da:	2d bf       	out	0x3d, r18	; 61
     7dc:	ed b7       	in	r30, 0x3d	; 61
     7de:	fe b7       	in	r31, 0x3e	; 62
     7e0:	31 96       	adiw	r30, 0x01	; 1
     7e2:	0a e3       	ldi	r16, 0x3A	; 58
     7e4:	11 e0       	ldi	r17, 0x01	; 1
     7e6:	ad b7       	in	r26, 0x3d	; 61
     7e8:	be b7       	in	r27, 0x3e	; 62
     7ea:	12 96       	adiw	r26, 0x02	; 2
     7ec:	1c 93       	st	X, r17
     7ee:	0e 93       	st	-X, r16
     7f0:	11 97       	sbiw	r26, 0x01	; 1
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	31 e0       	ldi	r19, 0x01	; 1
     7f6:	33 83       	std	Z+3, r19	; 0x03
     7f8:	22 83       	std	Z+2, r18	; 0x02
     7fa:	64 83       	std	Z+4, r22	; 0x04
     7fc:	75 83       	std	Z+5, r23	; 0x05
     7fe:	86 83       	std	Z+6, r24	; 0x06
     800:	97 83       	std	Z+7, r25	; 0x07
     802:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <sprintf>
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial  
     806:	2d b7       	in	r18, 0x3d	; 61
     808:	3e b7       	in	r19, 0x3e	; 62
     80a:	28 5f       	subi	r18, 0xF8	; 248
     80c:	3f 4f       	sbci	r19, 0xFF	; 255
     80e:	0f b6       	in	r0, 0x3f	; 63
     810:	f8 94       	cli
     812:	3e bf       	out	0x3e, r19	; 62
     814:	0f be       	out	0x3f, r0	; 63
     816:	2d bf       	out	0x3d, r18	; 61
     818:	c8 01       	movw	r24, r16
     81a:	0e 94 a4 03 	call	0x748	; 0x748 <USART_putstring>
	USART_putstring("\n\r");
     81e:	83 e0       	ldi	r24, 0x03	; 3
     820:	91 e0       	ldi	r25, 0x01	; 1
     822:	0e 94 a4 03 	call	0x748	; 0x748 <USART_putstring>
}
     826:	1f 91       	pop	r17
     828:	0f 91       	pop	r16
     82a:	08 95       	ret

0000082c <setDecel>:
		motor->currentStepDelay -= (float)(2.0 * motor->currentStepDelay) / (float)(4.0 * 	motor->tempCount + 1);
	}	
}		

void setDecel(struct StepperMotor *motor, int maxSpeed, int exitSpeed, int decel)
{
     82c:	cf 92       	push	r12
     82e:	df 92       	push	r13
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	ec 01       	movw	r28, r24
     83e:	8b 01       	movw	r16, r22
     840:	ca 01       	movw	r24, r20
     842:	69 01       	movw	r12, r18
	if(exitSpeed < 10)
     844:	4a 30       	cpi	r20, 0x0A	; 10
     846:	51 05       	cpc	r21, r1
     848:	4c f4       	brge	.+18     	; 0x85c <setDecel+0x30>
		motor->targetDelay = 7500;
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	90 e6       	ldi	r25, 0x60	; 96
     84e:	aa ee       	ldi	r26, 0xEA	; 234
     850:	b5 e4       	ldi	r27, 0x45	; 69
     852:	88 8b       	std	Y+16, r24	; 0x10
     854:	99 8b       	std	Y+17, r25	; 0x11
     856:	aa 8b       	std	Y+18, r26	; 0x12
     858:	bb 8b       	std	Y+19, r27	; 0x13
     85a:	13 c0       	rjmp	.+38     	; 0x882 <setDecel+0x56>
	else
		motor->targetDelay = TIMER_FREQUENCY / exitSpeed;
     85c:	9c 01       	movw	r18, r24
     85e:	44 27       	eor	r20, r20
     860:	37 fd       	sbrc	r19, 7
     862:	40 95       	com	r20
     864:	54 2f       	mov	r21, r20
     866:	60 e9       	ldi	r22, 0x90	; 144
     868:	70 ed       	ldi	r23, 0xD0	; 208
     86a:	83 e0       	ldi	r24, 0x03	; 3
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__divmodsi4>
     872:	ca 01       	movw	r24, r20
     874:	b9 01       	movw	r22, r18
     876:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     87a:	68 8b       	std	Y+16, r22	; 0x10
     87c:	79 8b       	std	Y+17, r23	; 0x11
     87e:	8a 8b       	std	Y+18, r24	; 0x12
     880:	9b 8b       	std	Y+19, r25	; 0x13
		
	motor->stepAccel = 0;
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	a0 e0       	ldi	r26, 0x00	; 0
     888:	b0 e0       	ldi	r27, 0x00	; 0
     88a:	8c 87       	std	Y+12, r24	; 0x0c
     88c:	9d 87       	std	Y+13, r25	; 0x0d
     88e:	ae 87       	std	Y+14, r26	; 0x0e
     890:	bf 87       	std	Y+15, r27	; 0x0f
	motor->tempCount = (float)maxSpeed * (float)maxSpeed / (2.0 * decel);
     892:	b8 01       	movw	r22, r16
     894:	88 27       	eor	r24, r24
     896:	77 fd       	sbrc	r23, 7
     898:	80 95       	com	r24
     89a:	98 2f       	mov	r25, r24
     89c:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     8a0:	9b 01       	movw	r18, r22
     8a2:	ac 01       	movw	r20, r24
     8a4:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     8a8:	7b 01       	movw	r14, r22
     8aa:	8c 01       	movw	r16, r24
     8ac:	b6 01       	movw	r22, r12
     8ae:	88 27       	eor	r24, r24
     8b0:	77 fd       	sbrc	r23, 7
     8b2:	80 95       	com	r24
     8b4:	98 2f       	mov	r25, r24
     8b6:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     8ba:	9b 01       	movw	r18, r22
     8bc:	ac 01       	movw	r20, r24
     8be:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__addsf3>
     8c2:	9b 01       	movw	r18, r22
     8c4:	ac 01       	movw	r20, r24
     8c6:	c8 01       	movw	r24, r16
     8c8:	b7 01       	movw	r22, r14
     8ca:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     8ce:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__fixsfsi>
     8d2:	6c 8b       	std	Y+20, r22	; 0x14
     8d4:	7d 8b       	std	Y+21, r23	; 0x15
     8d6:	8e 8b       	std	Y+22, r24	; 0x16
     8d8:	9f 8b       	std	Y+23, r25	; 0x17
}
     8da:	df 91       	pop	r29
     8dc:	cf 91       	pop	r28
     8de:	1f 91       	pop	r17
     8e0:	0f 91       	pop	r16
     8e2:	ff 90       	pop	r15
     8e4:	ef 90       	pop	r14
     8e6:	df 90       	pop	r13
     8e8:	cf 90       	pop	r12
     8ea:	08 95       	ret

000008ec <motorStillRunning>:

int motorStillRunning(struct StepperMotor *motor)
{	
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	fc 01       	movw	r30, r24
	if(motor->stepAccel == 0)
     8f2:	64 85       	ldd	r22, Z+12	; 0x0c
     8f4:	75 85       	ldd	r23, Z+13	; 0x0d
     8f6:	86 85       	ldd	r24, Z+14	; 0x0e
     8f8:	97 85       	ldd	r25, Z+15	; 0x0f
     8fa:	c0 e0       	ldi	r28, 0x00	; 0
     8fc:	d0 e0       	ldi	r29, 0x00	; 0
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	40 e0       	ldi	r20, 0x00	; 0
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     90a:	88 23       	and	r24, r24
     90c:	11 f4       	brne	.+4      	; 0x912 <__stack+0x13>
     90e:	c1 e0       	ldi	r28, 0x01	; 1
     910:	d0 e0       	ldi	r29, 0x00	; 0
		return 1;
	else
		return 0;
}
     912:	ce 01       	movw	r24, r28
     914:	df 91       	pop	r29
     916:	cf 91       	pop	r28
     918:	08 95       	ret

0000091a <setAccel>:
	}	
	printlnNum((float)leftMotor.stepCount);
}

void setAccel(struct StepperMotor *motor, int inSpeed, int maxSpeed, int accel)
{
     91a:	2f 92       	push	r2
     91c:	3f 92       	push	r3
     91e:	4f 92       	push	r4
     920:	5f 92       	push	r5
     922:	6f 92       	push	r6
     924:	7f 92       	push	r7
     926:	8f 92       	push	r8
     928:	9f 92       	push	r9
     92a:	af 92       	push	r10
     92c:	bf 92       	push	r11
     92e:	cf 92       	push	r12
     930:	df 92       	push	r13
     932:	ef 92       	push	r14
     934:	ff 92       	push	r15
     936:	0f 93       	push	r16
     938:	1f 93       	push	r17
     93a:	df 93       	push	r29
     93c:	cf 93       	push	r28
     93e:	00 d0       	rcall	.+0      	; 0x940 <setAccel+0x26>
     940:	00 d0       	rcall	.+0      	; 0x942 <setAccel+0x28>
     942:	cd b7       	in	r28, 0x3d	; 61
     944:	de b7       	in	r29, 0x3e	; 62
     946:	1c 01       	movw	r2, r24
     948:	3b 01       	movw	r6, r22
     94a:	7a 01       	movw	r14, r20
     94c:	59 01       	movw	r10, r18
	motor->stepAccel = 0;
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	a0 e0       	ldi	r26, 0x00	; 0
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	f1 01       	movw	r30, r2
     958:	84 87       	std	Z+12, r24	; 0x0c
     95a:	95 87       	std	Z+13, r25	; 0x0d
     95c:	a6 87       	std	Z+14, r26	; 0x0e
     95e:	b7 87       	std	Z+15, r27	; 0x0f
	motor->targetDelay = TIMER_FREQUENCY / maxSpeed;	
     960:	00 27       	eor	r16, r16
     962:	f7 fc       	sbrc	r15, 7
     964:	00 95       	com	r16
     966:	10 2f       	mov	r17, r16
     968:	60 e9       	ldi	r22, 0x90	; 144
     96a:	70 ed       	ldi	r23, 0xD0	; 208
     96c:	83 e0       	ldi	r24, 0x03	; 3
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	a8 01       	movw	r20, r16
     972:	97 01       	movw	r18, r14
     974:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__divmodsi4>
     978:	ca 01       	movw	r24, r20
     97a:	b9 01       	movw	r22, r18
     97c:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     980:	f1 01       	movw	r30, r2
     982:	60 8b       	std	Z+16, r22	; 0x10
     984:	71 8b       	std	Z+17, r23	; 0x11
     986:	82 8b       	std	Z+18, r24	; 0x12
     988:	93 8b       	std	Z+19, r25	; 0x13
	motor->tempCount = 0;
     98a:	14 8a       	std	Z+20, r1	; 0x14
     98c:	15 8a       	std	Z+21, r1	; 0x15
     98e:	16 8a       	std	Z+22, r1	; 0x16
     990:	17 8a       	std	Z+23, r1	; 0x17
	motor->currentStepDelay = 0.676 * TIMER_FREQUENCY * sqrt(2.0 / (float)accel);
     992:	cc 24       	eor	r12, r12
     994:	b7 fc       	sbrc	r11, 7
     996:	c0 94       	com	r12
     998:	dc 2c       	mov	r13, r12
     99a:	c6 01       	movw	r24, r12
     99c:	b5 01       	movw	r22, r10
     99e:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     9a2:	5b 01       	movw	r10, r22
     9a4:	6c 01       	movw	r12, r24
     9a6:	60 e0       	ldi	r22, 0x00	; 0
     9a8:	70 e0       	ldi	r23, 0x00	; 0
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	90 e4       	ldi	r25, 0x40	; 64
     9ae:	a6 01       	movw	r20, r12
     9b0:	95 01       	movw	r18, r10
     9b2:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     9b6:	0e 94 0e 0c 	call	0x181c	; 0x181c <sqrt>
     9ba:	20 e0       	ldi	r18, 0x00	; 0
     9bc:	3a e0       	ldi	r19, 0x0A	; 10
     9be:	45 e2       	ldi	r20, 0x25	; 37
     9c0:	58 e4       	ldi	r21, 0x48	; 72
     9c2:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     9c6:	f1 01       	movw	r30, r2
     9c8:	64 83       	std	Z+4, r22	; 0x04
     9ca:	75 83       	std	Z+5, r23	; 0x05
     9cc:	86 83       	std	Z+6, r24	; 0x06
     9ce:	97 83       	std	Z+7, r25	; 0x07
	
	for(int i = 0; i < (float)inSpeed * (float)inSpeed / (2.0 * (float)accel); i++)
     9d0:	88 24       	eor	r8, r8
     9d2:	77 fc       	sbrc	r7, 7
     9d4:	80 94       	com	r8
     9d6:	98 2c       	mov	r9, r8
     9d8:	c4 01       	movw	r24, r8
     9da:	b3 01       	movw	r22, r6
     9dc:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     9e0:	9b 01       	movw	r18, r22
     9e2:	ac 01       	movw	r20, r24
     9e4:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     9e8:	7b 01       	movw	r14, r22
     9ea:	8c 01       	movw	r16, r24
     9ec:	c6 01       	movw	r24, r12
     9ee:	b5 01       	movw	r22, r10
     9f0:	a6 01       	movw	r20, r12
     9f2:	95 01       	movw	r18, r10
     9f4:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__addsf3>
     9f8:	9b 01       	movw	r18, r22
     9fa:	ac 01       	movw	r20, r24
     9fc:	c8 01       	movw	r24, r16
     9fe:	b7 01       	movw	r22, r14
     a00:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     a04:	69 83       	std	Y+1, r22	; 0x01
     a06:	7a 83       	std	Y+2, r23	; 0x02
     a08:	8b 83       	std	Y+3, r24	; 0x03
     a0a:	9c 83       	std	Y+4, r25	; 0x04
     a0c:	44 24       	eor	r4, r4
     a0e:	55 24       	eor	r5, r5
     a10:	44 c0       	rjmp	.+136    	; 0xa9a <setAccel+0x180>
	{
		motor->tempCount++;
     a12:	f1 01       	movw	r30, r2
     a14:	84 89       	ldd	r24, Z+20	; 0x14
     a16:	95 89       	ldd	r25, Z+21	; 0x15
     a18:	a6 89       	ldd	r26, Z+22	; 0x16
     a1a:	b7 89       	ldd	r27, Z+23	; 0x17
     a1c:	01 96       	adiw	r24, 0x01	; 1
     a1e:	a1 1d       	adc	r26, r1
     a20:	b1 1d       	adc	r27, r1
     a22:	84 8b       	std	Z+20, r24	; 0x14
     a24:	95 8b       	std	Z+21, r25	; 0x15
     a26:	a6 8b       	std	Z+22, r26	; 0x16
     a28:	b7 8b       	std	Z+23, r27	; 0x17
		motor->currentStepDelay -= (float)(2.0 * motor->currentStepDelay) / (float)(4.0 * 	motor->tempCount + 1);
     a2a:	64 80       	ldd	r6, Z+4	; 0x04
     a2c:	75 80       	ldd	r7, Z+5	; 0x05
     a2e:	86 80       	ldd	r8, Z+6	; 0x06
     a30:	97 80       	ldd	r9, Z+7	; 0x07
     a32:	64 81       	ldd	r22, Z+4	; 0x04
     a34:	75 81       	ldd	r23, Z+5	; 0x05
     a36:	86 81       	ldd	r24, Z+6	; 0x06
     a38:	97 81       	ldd	r25, Z+7	; 0x07
     a3a:	e4 88       	ldd	r14, Z+20	; 0x14
     a3c:	f5 88       	ldd	r15, Z+21	; 0x15
     a3e:	06 89       	ldd	r16, Z+22	; 0x16
     a40:	17 89       	ldd	r17, Z+23	; 0x17
     a42:	20 e0       	ldi	r18, 0x00	; 0
     a44:	30 e0       	ldi	r19, 0x00	; 0
     a46:	40 e0       	ldi	r20, 0x00	; 0
     a48:	50 ec       	ldi	r21, 0xC0	; 192
     a4a:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     a4e:	5b 01       	movw	r10, r22
     a50:	6c 01       	movw	r12, r24
     a52:	c8 01       	movw	r24, r16
     a54:	b7 01       	movw	r22, r14
     a56:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     a5a:	20 e0       	ldi	r18, 0x00	; 0
     a5c:	30 e0       	ldi	r19, 0x00	; 0
     a5e:	40 e8       	ldi	r20, 0x80	; 128
     a60:	50 e4       	ldi	r21, 0x40	; 64
     a62:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     a66:	20 e0       	ldi	r18, 0x00	; 0
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	40 e8       	ldi	r20, 0x80	; 128
     a6c:	5f e3       	ldi	r21, 0x3F	; 63
     a6e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__addsf3>
     a72:	9b 01       	movw	r18, r22
     a74:	ac 01       	movw	r20, r24
     a76:	c6 01       	movw	r24, r12
     a78:	b5 01       	movw	r22, r10
     a7a:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     a7e:	9b 01       	movw	r18, r22
     a80:	ac 01       	movw	r20, r24
     a82:	c4 01       	movw	r24, r8
     a84:	b3 01       	movw	r22, r6
     a86:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__addsf3>
     a8a:	f1 01       	movw	r30, r2
     a8c:	64 83       	std	Z+4, r22	; 0x04
     a8e:	75 83       	std	Z+5, r23	; 0x05
     a90:	86 83       	std	Z+6, r24	; 0x06
     a92:	97 83       	std	Z+7, r25	; 0x07
	motor->stepAccel = 0;
	motor->targetDelay = TIMER_FREQUENCY / maxSpeed;	
	motor->tempCount = 0;
	motor->currentStepDelay = 0.676 * TIMER_FREQUENCY * sqrt(2.0 / (float)accel);
	
	for(int i = 0; i < (float)inSpeed * (float)inSpeed / (2.0 * (float)accel); i++)
     a94:	08 94       	sec
     a96:	41 1c       	adc	r4, r1
     a98:	51 1c       	adc	r5, r1
     a9a:	b2 01       	movw	r22, r4
     a9c:	88 27       	eor	r24, r24
     a9e:	77 fd       	sbrc	r23, 7
     aa0:	80 95       	com	r24
     aa2:	98 2f       	mov	r25, r24
     aa4:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     aa8:	29 81       	ldd	r18, Y+1	; 0x01
     aaa:	3a 81       	ldd	r19, Y+2	; 0x02
     aac:	4b 81       	ldd	r20, Y+3	; 0x03
     aae:	5c 81       	ldd	r21, Y+4	; 0x04
     ab0:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     ab4:	87 fd       	sbrc	r24, 7
     ab6:	ad cf       	rjmp	.-166    	; 0xa12 <setAccel+0xf8>
	{
		motor->tempCount++;
		motor->currentStepDelay -= (float)(2.0 * motor->currentStepDelay) / (float)(4.0 * 	motor->tempCount + 1);
	}	
}		
     ab8:	0f 90       	pop	r0
     aba:	0f 90       	pop	r0
     abc:	0f 90       	pop	r0
     abe:	0f 90       	pop	r0
     ac0:	cf 91       	pop	r28
     ac2:	df 91       	pop	r29
     ac4:	1f 91       	pop	r17
     ac6:	0f 91       	pop	r16
     ac8:	ff 90       	pop	r15
     aca:	ef 90       	pop	r14
     acc:	df 90       	pop	r13
     ace:	cf 90       	pop	r12
     ad0:	bf 90       	pop	r11
     ad2:	af 90       	pop	r10
     ad4:	9f 90       	pop	r9
     ad6:	8f 90       	pop	r8
     ad8:	7f 90       	pop	r7
     ada:	6f 90       	pop	r6
     adc:	5f 90       	pop	r5
     ade:	4f 90       	pop	r4
     ae0:	3f 90       	pop	r3
     ae2:	2f 90       	pop	r2
     ae4:	08 95       	ret

00000ae6 <straight>:
extern StepperMotor leftMotor;
extern StepperMotor rightMotor;
extern volatile unsigned long milliseconds;

void straight(long stepTarget, int inSpeed, int maxSpeed, int exitSpeed, int accel, int decel)
{	
     ae6:	2f 92       	push	r2
     ae8:	3f 92       	push	r3
     aea:	4f 92       	push	r4
     aec:	5f 92       	push	r5
     aee:	6f 92       	push	r6
     af0:	7f 92       	push	r7
     af2:	8f 92       	push	r8
     af4:	9f 92       	push	r9
     af6:	af 92       	push	r10
     af8:	bf 92       	push	r11
     afa:	cf 92       	push	r12
     afc:	df 92       	push	r13
     afe:	ef 92       	push	r14
     b00:	ff 92       	push	r15
     b02:	0f 93       	push	r16
     b04:	1f 93       	push	r17
     b06:	df 93       	push	r29
     b08:	cf 93       	push	r28
     b0a:	cd b7       	in	r28, 0x3d	; 61
     b0c:	de b7       	in	r29, 0x3e	; 62
     b0e:	28 97       	sbiw	r28, 0x08	; 8
     b10:	0f b6       	in	r0, 0x3f	; 63
     b12:	f8 94       	cli
     b14:	de bf       	out	0x3e, r29	; 62
     b16:	0f be       	out	0x3f, r0	; 63
     b18:	cd bf       	out	0x3d, r28	; 61
	while(inSpeed + accel*(float)(milliseconds/1000.0) < maxSpeed)
     b1a:	ca 01       	movw	r24, r20
     b1c:	aa 27       	eor	r26, r26
     b1e:	97 fd       	sbrc	r25, 7
     b20:	a0 95       	com	r26
     b22:	ba 2f       	mov	r27, r26
     b24:	89 83       	std	Y+1, r24	; 0x01
     b26:	9a 83       	std	Y+2, r25	; 0x02
     b28:	ab 83       	std	Y+3, r26	; 0x03
     b2a:	bc 83       	std	Y+4, r27	; 0x04
     b2c:	c7 01       	movw	r24, r14
     b2e:	aa 27       	eor	r26, r26
     b30:	97 fd       	sbrc	r25, 7
     b32:	a0 95       	com	r26
     b34:	ba 2f       	mov	r27, r26
     b36:	8d 83       	std	Y+5, r24	; 0x05
     b38:	9e 83       	std	Y+6, r25	; 0x06
     b3a:	af 83       	std	Y+7, r26	; 0x07
     b3c:	b8 87       	std	Y+8, r27	; 0x08
     b3e:	19 01       	movw	r2, r18
     b40:	44 24       	eor	r4, r4
     b42:	37 fc       	sbrc	r3, 7
     b44:	40 94       	com	r4
     b46:	54 2c       	mov	r5, r4
     b48:	68 c0       	rjmp	.+208    	; 0xc1a <straight+0x134>
	{
		leftMotor.currentStepDelay = getDelayFromVelocity(inSpeed + accel*(float)(milliseconds/1000.0));
     b4a:	60 91 06 01 	lds	r22, 0x0106
     b4e:	70 91 07 01 	lds	r23, 0x0107
     b52:	80 91 08 01 	lds	r24, 0x0108
     b56:	90 91 09 01 	lds	r25, 0x0109
     b5a:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__floatunsisf>
     b5e:	20 e0       	ldi	r18, 0x00	; 0
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	4a e7       	ldi	r20, 0x7A	; 122
     b64:	54 e4       	ldi	r21, 0x44	; 68
     b66:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     b6a:	9b 01       	movw	r18, r22
     b6c:	ac 01       	movw	r20, r24
     b6e:	c6 01       	movw	r24, r12
     b70:	b5 01       	movw	r22, r10
     b72:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     b76:	9b 01       	movw	r18, r22
     b78:	ac 01       	movw	r20, r24
     b7a:	c4 01       	movw	r24, r8
     b7c:	b3 01       	movw	r22, r6
     b7e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__addsf3>
     b82:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__fixsfsi>
     b86:	dc 01       	movw	r26, r24
     b88:	cb 01       	movw	r24, r22
     b8a:	0e 94 76 03 	call	0x6ec	; 0x6ec <getDelayFromVelocity>
     b8e:	aa 27       	eor	r26, r26
     b90:	97 fd       	sbrc	r25, 7
     b92:	a0 95       	com	r26
     b94:	ba 2f       	mov	r27, r26
     b96:	bc 01       	movw	r22, r24
     b98:	cd 01       	movw	r24, r26
     b9a:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     b9e:	60 93 26 01 	sts	0x0126, r22
     ba2:	70 93 27 01 	sts	0x0127, r23
     ba6:	80 93 28 01 	sts	0x0128, r24
     baa:	90 93 29 01 	sts	0x0129, r25
		rightMotor.currentStepDelay = getDelayFromVelocity(inSpeed + accel*(float)(milliseconds/1000.0));
     bae:	60 91 06 01 	lds	r22, 0x0106
     bb2:	70 91 07 01 	lds	r23, 0x0107
     bb6:	80 91 08 01 	lds	r24, 0x0108
     bba:	90 91 09 01 	lds	r25, 0x0109
     bbe:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__floatunsisf>
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	4a e7       	ldi	r20, 0x7A	; 122
     bc8:	54 e4       	ldi	r21, 0x44	; 68
     bca:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     bce:	9b 01       	movw	r18, r22
     bd0:	ac 01       	movw	r20, r24
     bd2:	c6 01       	movw	r24, r12
     bd4:	b5 01       	movw	r22, r10
     bd6:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     bda:	9b 01       	movw	r18, r22
     bdc:	ac 01       	movw	r20, r24
     bde:	c4 01       	movw	r24, r8
     be0:	b3 01       	movw	r22, r6
     be2:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__addsf3>
     be6:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__fixsfsi>
     bea:	dc 01       	movw	r26, r24
     bec:	cb 01       	movw	r24, r22
     bee:	0e 94 76 03 	call	0x6ec	; 0x6ec <getDelayFromVelocity>
     bf2:	aa 27       	eor	r26, r26
     bf4:	97 fd       	sbrc	r25, 7
     bf6:	a0 95       	com	r26
     bf8:	ba 2f       	mov	r27, r26
     bfa:	bc 01       	movw	r22, r24
     bfc:	cd 01       	movw	r24, r26
     bfe:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     c02:	60 93 0e 01 	sts	0x010E, r22
     c06:	70 93 0f 01 	sts	0x010F, r23
     c0a:	80 93 10 01 	sts	0x0110, r24
     c0e:	90 93 11 01 	sts	0x0111, r25
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c12:	80 ea       	ldi	r24, 0xA0	; 160
     c14:	9f e0       	ldi	r25, 0x0F	; 15
     c16:	01 97       	sbiw	r24, 0x01	; 1
     c18:	f1 f7       	brne	.-4      	; 0xc16 <straight+0x130>
extern StepperMotor rightMotor;
extern volatile unsigned long milliseconds;

void straight(long stepTarget, int inSpeed, int maxSpeed, int exitSpeed, int accel, int decel)
{	
	while(inSpeed + accel*(float)(milliseconds/1000.0) < maxSpeed)
     c1a:	69 81       	ldd	r22, Y+1	; 0x01
     c1c:	7a 81       	ldd	r23, Y+2	; 0x02
     c1e:	8b 81       	ldd	r24, Y+3	; 0x03
     c20:	9c 81       	ldd	r25, Y+4	; 0x04
     c22:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     c26:	3b 01       	movw	r6, r22
     c28:	4c 01       	movw	r8, r24
     c2a:	6d 81       	ldd	r22, Y+5	; 0x05
     c2c:	7e 81       	ldd	r23, Y+6	; 0x06
     c2e:	8f 81       	ldd	r24, Y+7	; 0x07
     c30:	98 85       	ldd	r25, Y+8	; 0x08
     c32:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     c36:	5b 01       	movw	r10, r22
     c38:	6c 01       	movw	r12, r24
     c3a:	60 91 06 01 	lds	r22, 0x0106
     c3e:	70 91 07 01 	lds	r23, 0x0107
     c42:	80 91 08 01 	lds	r24, 0x0108
     c46:	90 91 09 01 	lds	r25, 0x0109
     c4a:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__floatunsisf>
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	4a e7       	ldi	r20, 0x7A	; 122
     c54:	54 e4       	ldi	r21, 0x44	; 68
     c56:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     c5a:	9b 01       	movw	r18, r22
     c5c:	ac 01       	movw	r20, r24
     c5e:	c6 01       	movw	r24, r12
     c60:	b5 01       	movw	r22, r10
     c62:	0e 94 a7 0b 	call	0x174e	; 0x174e <__mulsf3>
     c66:	9b 01       	movw	r18, r22
     c68:	ac 01       	movw	r20, r24
     c6a:	c4 01       	movw	r24, r8
     c6c:	b3 01       	movw	r22, r6
     c6e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__addsf3>
     c72:	7b 01       	movw	r14, r22
     c74:	8c 01       	movw	r16, r24
     c76:	c2 01       	movw	r24, r4
     c78:	b1 01       	movw	r22, r2
     c7a:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     c7e:	9b 01       	movw	r18, r22
     c80:	ac 01       	movw	r20, r24
     c82:	c8 01       	movw	r24, r16
     c84:	b7 01       	movw	r22, r14
     c86:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__cmpsf2>
     c8a:	87 fd       	sbrc	r24, 7
     c8c:	5e cf       	rjmp	.-324    	; 0xb4a <straight+0x64>
	{
		leftMotor.currentStepDelay = getDelayFromVelocity(inSpeed + accel*(float)(milliseconds/1000.0));
		rightMotor.currentStepDelay = getDelayFromVelocity(inSpeed + accel*(float)(milliseconds/1000.0));
		_delay_ms(1);
	}	
	printlnNum((float)leftMotor.stepCount);
     c8e:	60 91 22 01 	lds	r22, 0x0122
     c92:	70 91 23 01 	lds	r23, 0x0123
     c96:	80 91 24 01 	lds	r24, 0x0124
     c9a:	90 91 25 01 	lds	r25, 0x0125
     c9e:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__floatsisf>
     ca2:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <printlnNum>
}
     ca6:	28 96       	adiw	r28, 0x08	; 8
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	cf 91       	pop	r28
     cb4:	df 91       	pop	r29
     cb6:	1f 91       	pop	r17
     cb8:	0f 91       	pop	r16
     cba:	ff 90       	pop	r15
     cbc:	ef 90       	pop	r14
     cbe:	df 90       	pop	r13
     cc0:	cf 90       	pop	r12
     cc2:	bf 90       	pop	r11
     cc4:	af 90       	pop	r10
     cc6:	9f 90       	pop	r9
     cc8:	8f 90       	pop	r8
     cca:	7f 90       	pop	r7
     ccc:	6f 90       	pop	r6
     cce:	5f 90       	pop	r5
     cd0:	4f 90       	pop	r4
     cd2:	3f 90       	pop	r3
     cd4:	2f 90       	pop	r2
     cd6:	08 95       	ret

00000cd8 <vfprintf>:
     cd8:	a1 e1       	ldi	r26, 0x11	; 17
     cda:	b0 e0       	ldi	r27, 0x00	; 0
     cdc:	e2 e7       	ldi	r30, 0x72	; 114
     cde:	f6 e0       	ldi	r31, 0x06	; 6
     ce0:	0c 94 8f 0c 	jmp	0x191e	; 0x191e <__prologue_saves__>
     ce4:	3c 01       	movw	r6, r24
     ce6:	7f 87       	std	Y+15, r23	; 0x0f
     ce8:	6e 87       	std	Y+14, r22	; 0x0e
     cea:	6a 01       	movw	r12, r20
     cec:	fc 01       	movw	r30, r24
     cee:	17 82       	std	Z+7, r1	; 0x07
     cf0:	16 82       	std	Z+6, r1	; 0x06
     cf2:	83 81       	ldd	r24, Z+3	; 0x03
     cf4:	81 fd       	sbrc	r24, 1
     cf6:	03 c0       	rjmp	.+6      	; 0xcfe <vfprintf+0x26>
     cf8:	6f ef       	ldi	r22, 0xFF	; 255
     cfa:	7f ef       	ldi	r23, 0xFF	; 255
     cfc:	6f c3       	rjmp	.+1758   	; 0x13dc <vfprintf+0x704>
     cfe:	9e 01       	movw	r18, r28
     d00:	2f 5f       	subi	r18, 0xFF	; 255
     d02:	3f 4f       	sbci	r19, 0xFF	; 255
     d04:	39 8b       	std	Y+17, r19	; 0x11
     d06:	28 8b       	std	Y+16, r18	; 0x10
     d08:	f3 01       	movw	r30, r6
     d0a:	23 81       	ldd	r18, Z+3	; 0x03
     d0c:	ee 85       	ldd	r30, Y+14	; 0x0e
     d0e:	ff 85       	ldd	r31, Y+15	; 0x0f
     d10:	23 fd       	sbrc	r18, 3
     d12:	85 91       	lpm	r24, Z+
     d14:	23 ff       	sbrs	r18, 3
     d16:	81 91       	ld	r24, Z+
     d18:	ff 87       	std	Y+15, r31	; 0x0f
     d1a:	ee 87       	std	Y+14, r30	; 0x0e
     d1c:	88 23       	and	r24, r24
     d1e:	09 f4       	brne	.+2      	; 0xd22 <vfprintf+0x4a>
     d20:	5a c3       	rjmp	.+1716   	; 0x13d6 <vfprintf+0x6fe>
     d22:	85 32       	cpi	r24, 0x25	; 37
     d24:	51 f4       	brne	.+20     	; 0xd3a <vfprintf+0x62>
     d26:	ee 85       	ldd	r30, Y+14	; 0x0e
     d28:	ff 85       	ldd	r31, Y+15	; 0x0f
     d2a:	23 fd       	sbrc	r18, 3
     d2c:	85 91       	lpm	r24, Z+
     d2e:	23 ff       	sbrs	r18, 3
     d30:	81 91       	ld	r24, Z+
     d32:	ff 87       	std	Y+15, r31	; 0x0f
     d34:	ee 87       	std	Y+14, r30	; 0x0e
     d36:	85 32       	cpi	r24, 0x25	; 37
     d38:	29 f4       	brne	.+10     	; 0xd44 <vfprintf+0x6c>
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	b3 01       	movw	r22, r6
     d3e:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
     d42:	e2 cf       	rjmp	.-60     	; 0xd08 <vfprintf+0x30>
     d44:	98 2f       	mov	r25, r24
     d46:	10 e0       	ldi	r17, 0x00	; 0
     d48:	88 24       	eor	r8, r8
     d4a:	99 24       	eor	r9, r9
     d4c:	10 32       	cpi	r17, 0x20	; 32
     d4e:	b0 f4       	brcc	.+44     	; 0xd7c <vfprintf+0xa4>
     d50:	9b 32       	cpi	r25, 0x2B	; 43
     d52:	69 f0       	breq	.+26     	; 0xd6e <vfprintf+0x96>
     d54:	9c 32       	cpi	r25, 0x2C	; 44
     d56:	28 f4       	brcc	.+10     	; 0xd62 <vfprintf+0x8a>
     d58:	90 32       	cpi	r25, 0x20	; 32
     d5a:	51 f0       	breq	.+20     	; 0xd70 <vfprintf+0x98>
     d5c:	93 32       	cpi	r25, 0x23	; 35
     d5e:	71 f4       	brne	.+28     	; 0xd7c <vfprintf+0xa4>
     d60:	0b c0       	rjmp	.+22     	; 0xd78 <vfprintf+0xa0>
     d62:	9d 32       	cpi	r25, 0x2D	; 45
     d64:	39 f0       	breq	.+14     	; 0xd74 <vfprintf+0x9c>
     d66:	90 33       	cpi	r25, 0x30	; 48
     d68:	49 f4       	brne	.+18     	; 0xd7c <vfprintf+0xa4>
     d6a:	11 60       	ori	r17, 0x01	; 1
     d6c:	28 c0       	rjmp	.+80     	; 0xdbe <vfprintf+0xe6>
     d6e:	12 60       	ori	r17, 0x02	; 2
     d70:	14 60       	ori	r17, 0x04	; 4
     d72:	25 c0       	rjmp	.+74     	; 0xdbe <vfprintf+0xe6>
     d74:	18 60       	ori	r17, 0x08	; 8
     d76:	23 c0       	rjmp	.+70     	; 0xdbe <vfprintf+0xe6>
     d78:	10 61       	ori	r17, 0x10	; 16
     d7a:	21 c0       	rjmp	.+66     	; 0xdbe <vfprintf+0xe6>
     d7c:	17 fd       	sbrc	r17, 7
     d7e:	2a c0       	rjmp	.+84     	; 0xdd4 <vfprintf+0xfc>
     d80:	89 2f       	mov	r24, r25
     d82:	80 53       	subi	r24, 0x30	; 48
     d84:	8a 30       	cpi	r24, 0x0A	; 10
     d86:	78 f4       	brcc	.+30     	; 0xda6 <vfprintf+0xce>
     d88:	16 ff       	sbrs	r17, 6
     d8a:	06 c0       	rjmp	.+12     	; 0xd98 <vfprintf+0xc0>
     d8c:	fa e0       	ldi	r31, 0x0A	; 10
     d8e:	9f 9e       	mul	r9, r31
     d90:	90 2c       	mov	r9, r0
     d92:	11 24       	eor	r1, r1
     d94:	98 0e       	add	r9, r24
     d96:	13 c0       	rjmp	.+38     	; 0xdbe <vfprintf+0xe6>
     d98:	3a e0       	ldi	r19, 0x0A	; 10
     d9a:	83 9e       	mul	r8, r19
     d9c:	80 2c       	mov	r8, r0
     d9e:	11 24       	eor	r1, r1
     da0:	88 0e       	add	r8, r24
     da2:	10 62       	ori	r17, 0x20	; 32
     da4:	0c c0       	rjmp	.+24     	; 0xdbe <vfprintf+0xe6>
     da6:	9e 32       	cpi	r25, 0x2E	; 46
     da8:	21 f4       	brne	.+8      	; 0xdb2 <vfprintf+0xda>
     daa:	16 fd       	sbrc	r17, 6
     dac:	14 c3       	rjmp	.+1576   	; 0x13d6 <vfprintf+0x6fe>
     dae:	10 64       	ori	r17, 0x40	; 64
     db0:	06 c0       	rjmp	.+12     	; 0xdbe <vfprintf+0xe6>
     db2:	9c 36       	cpi	r25, 0x6C	; 108
     db4:	11 f4       	brne	.+4      	; 0xdba <vfprintf+0xe2>
     db6:	10 68       	ori	r17, 0x80	; 128
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <vfprintf+0xe6>
     dba:	98 36       	cpi	r25, 0x68	; 104
     dbc:	59 f4       	brne	.+22     	; 0xdd4 <vfprintf+0xfc>
     dbe:	ee 85       	ldd	r30, Y+14	; 0x0e
     dc0:	ff 85       	ldd	r31, Y+15	; 0x0f
     dc2:	23 fd       	sbrc	r18, 3
     dc4:	95 91       	lpm	r25, Z+
     dc6:	23 ff       	sbrs	r18, 3
     dc8:	91 91       	ld	r25, Z+
     dca:	ff 87       	std	Y+15, r31	; 0x0f
     dcc:	ee 87       	std	Y+14, r30	; 0x0e
     dce:	99 23       	and	r25, r25
     dd0:	09 f0       	breq	.+2      	; 0xdd4 <vfprintf+0xfc>
     dd2:	bc cf       	rjmp	.-136    	; 0xd4c <vfprintf+0x74>
     dd4:	89 2f       	mov	r24, r25
     dd6:	85 54       	subi	r24, 0x45	; 69
     dd8:	83 30       	cpi	r24, 0x03	; 3
     dda:	20 f4       	brcc	.+8      	; 0xde4 <vfprintf+0x10c>
     ddc:	81 2f       	mov	r24, r17
     dde:	80 61       	ori	r24, 0x10	; 16
     de0:	90 5e       	subi	r25, 0xE0	; 224
     de2:	07 c0       	rjmp	.+14     	; 0xdf2 <vfprintf+0x11a>
     de4:	89 2f       	mov	r24, r25
     de6:	85 56       	subi	r24, 0x65	; 101
     de8:	83 30       	cpi	r24, 0x03	; 3
     dea:	08 f0       	brcs	.+2      	; 0xdee <vfprintf+0x116>
     dec:	9f c1       	rjmp	.+830    	; 0x112c <vfprintf+0x454>
     dee:	81 2f       	mov	r24, r17
     df0:	8f 7e       	andi	r24, 0xEF	; 239
     df2:	86 fd       	sbrc	r24, 6
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <vfprintf+0x122>
     df6:	76 e0       	ldi	r23, 0x06	; 6
     df8:	97 2e       	mov	r9, r23
     dfa:	6f e3       	ldi	r22, 0x3F	; 63
     dfc:	f6 2e       	mov	r15, r22
     dfe:	f8 22       	and	r15, r24
     e00:	95 36       	cpi	r25, 0x65	; 101
     e02:	19 f4       	brne	.+6      	; 0xe0a <vfprintf+0x132>
     e04:	f0 e4       	ldi	r31, 0x40	; 64
     e06:	ff 2a       	or	r15, r31
     e08:	07 c0       	rjmp	.+14     	; 0xe18 <vfprintf+0x140>
     e0a:	96 36       	cpi	r25, 0x66	; 102
     e0c:	19 f4       	brne	.+6      	; 0xe14 <vfprintf+0x13c>
     e0e:	20 e8       	ldi	r18, 0x80	; 128
     e10:	f2 2a       	or	r15, r18
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <vfprintf+0x140>
     e14:	91 10       	cpse	r9, r1
     e16:	9a 94       	dec	r9
     e18:	f7 fe       	sbrs	r15, 7
     e1a:	0a c0       	rjmp	.+20     	; 0xe30 <vfprintf+0x158>
     e1c:	3b e3       	ldi	r19, 0x3B	; 59
     e1e:	39 15       	cp	r19, r9
     e20:	18 f4       	brcc	.+6      	; 0xe28 <vfprintf+0x150>
     e22:	5c e3       	ldi	r21, 0x3C	; 60
     e24:	b5 2e       	mov	r11, r21
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <vfprintf+0x154>
     e28:	b9 2c       	mov	r11, r9
     e2a:	b3 94       	inc	r11
     e2c:	27 e0       	ldi	r18, 0x07	; 7
     e2e:	09 c0       	rjmp	.+18     	; 0xe42 <vfprintf+0x16a>
     e30:	47 e0       	ldi	r20, 0x07	; 7
     e32:	49 15       	cp	r20, r9
     e34:	20 f4       	brcc	.+8      	; 0xe3e <vfprintf+0x166>
     e36:	bb 24       	eor	r11, r11
     e38:	47 e0       	ldi	r20, 0x07	; 7
     e3a:	94 2e       	mov	r9, r20
     e3c:	f7 cf       	rjmp	.-18     	; 0xe2c <vfprintf+0x154>
     e3e:	29 2d       	mov	r18, r9
     e40:	bb 24       	eor	r11, r11
     e42:	c6 01       	movw	r24, r12
     e44:	04 96       	adiw	r24, 0x04	; 4
     e46:	9d 87       	std	Y+13, r25	; 0x0d
     e48:	8c 87       	std	Y+12, r24	; 0x0c
     e4a:	f6 01       	movw	r30, r12
     e4c:	60 81       	ld	r22, Z
     e4e:	71 81       	ldd	r23, Z+1	; 0x01
     e50:	82 81       	ldd	r24, Z+2	; 0x02
     e52:	93 81       	ldd	r25, Z+3	; 0x03
     e54:	ae 01       	movw	r20, r28
     e56:	4f 5f       	subi	r20, 0xFF	; 255
     e58:	5f 4f       	sbci	r21, 0xFF	; 255
     e5a:	0b 2d       	mov	r16, r11
     e5c:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <__ftoa_engine>
     e60:	6c 01       	movw	r12, r24
     e62:	09 81       	ldd	r16, Y+1	; 0x01
     e64:	20 2e       	mov	r2, r16
     e66:	33 24       	eor	r3, r3
     e68:	00 ff       	sbrs	r16, 0
     e6a:	04 c0       	rjmp	.+8      	; 0xe74 <vfprintf+0x19c>
     e6c:	03 fd       	sbrc	r16, 3
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <vfprintf+0x19c>
     e70:	1d e2       	ldi	r17, 0x2D	; 45
     e72:	09 c0       	rjmp	.+18     	; 0xe86 <vfprintf+0x1ae>
     e74:	f1 fe       	sbrs	r15, 1
     e76:	02 c0       	rjmp	.+4      	; 0xe7c <vfprintf+0x1a4>
     e78:	1b e2       	ldi	r17, 0x2B	; 43
     e7a:	05 c0       	rjmp	.+10     	; 0xe86 <vfprintf+0x1ae>
     e7c:	f2 fc       	sbrc	r15, 2
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <vfprintf+0x1ac>
     e80:	10 e0       	ldi	r17, 0x00	; 0
     e82:	01 c0       	rjmp	.+2      	; 0xe86 <vfprintf+0x1ae>
     e84:	10 e2       	ldi	r17, 0x20	; 32
     e86:	c1 01       	movw	r24, r2
     e88:	8c 70       	andi	r24, 0x0C	; 12
     e8a:	90 70       	andi	r25, 0x00	; 0
     e8c:	89 2b       	or	r24, r25
     e8e:	b9 f1       	breq	.+110    	; 0xefe <vfprintf+0x226>
     e90:	11 23       	and	r17, r17
     e92:	11 f4       	brne	.+4      	; 0xe98 <vfprintf+0x1c0>
     e94:	83 e0       	ldi	r24, 0x03	; 3
     e96:	01 c0       	rjmp	.+2      	; 0xe9a <vfprintf+0x1c2>
     e98:	84 e0       	ldi	r24, 0x04	; 4
     e9a:	88 15       	cp	r24, r8
     e9c:	10 f0       	brcs	.+4      	; 0xea2 <vfprintf+0x1ca>
     e9e:	88 24       	eor	r8, r8
     ea0:	0a c0       	rjmp	.+20     	; 0xeb6 <vfprintf+0x1de>
     ea2:	88 1a       	sub	r8, r24
     ea4:	f3 fc       	sbrc	r15, 3
     ea6:	07 c0       	rjmp	.+14     	; 0xeb6 <vfprintf+0x1de>
     ea8:	80 e2       	ldi	r24, 0x20	; 32
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	b3 01       	movw	r22, r6
     eae:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
     eb2:	8a 94       	dec	r8
     eb4:	c9 f7       	brne	.-14     	; 0xea8 <vfprintf+0x1d0>
     eb6:	11 23       	and	r17, r17
     eb8:	29 f0       	breq	.+10     	; 0xec4 <vfprintf+0x1ec>
     eba:	81 2f       	mov	r24, r17
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	b3 01       	movw	r22, r6
     ec0:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
     ec4:	23 fe       	sbrs	r2, 3
     ec6:	03 c0       	rjmp	.+6      	; 0xece <vfprintf+0x1f6>
     ec8:	08 e6       	ldi	r16, 0x68	; 104
     eca:	10 e0       	ldi	r17, 0x00	; 0
     ecc:	0e c0       	rjmp	.+28     	; 0xeea <vfprintf+0x212>
     ece:	0c e6       	ldi	r16, 0x6C	; 108
     ed0:	10 e0       	ldi	r17, 0x00	; 0
     ed2:	0b c0       	rjmp	.+22     	; 0xeea <vfprintf+0x212>
     ed4:	e1 14       	cp	r14, r1
     ed6:	f1 04       	cpc	r15, r1
     ed8:	09 f0       	breq	.+2      	; 0xedc <vfprintf+0x204>
     eda:	80 52       	subi	r24, 0x20	; 32
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	b3 01       	movw	r22, r6
     ee0:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
     ee4:	0f 5f       	subi	r16, 0xFF	; 255
     ee6:	1f 4f       	sbci	r17, 0xFF	; 255
     ee8:	05 c0       	rjmp	.+10     	; 0xef4 <vfprintf+0x21c>
     eea:	ef 2c       	mov	r14, r15
     eec:	ff 24       	eor	r15, r15
     eee:	f0 e1       	ldi	r31, 0x10	; 16
     ef0:	ef 22       	and	r14, r31
     ef2:	ff 24       	eor	r15, r15
     ef4:	f8 01       	movw	r30, r16
     ef6:	84 91       	lpm	r24, Z+
     ef8:	88 23       	and	r24, r24
     efa:	61 f7       	brne	.-40     	; 0xed4 <vfprintf+0x1fc>
     efc:	14 c1       	rjmp	.+552    	; 0x1126 <vfprintf+0x44e>
     efe:	f7 fe       	sbrs	r15, 7
     f00:	12 c0       	rjmp	.+36     	; 0xf26 <vfprintf+0x24e>
     f02:	bc 0c       	add	r11, r12
     f04:	24 fe       	sbrs	r2, 4
     f06:	04 c0       	rjmp	.+8      	; 0xf10 <vfprintf+0x238>
     f08:	8a 81       	ldd	r24, Y+2	; 0x02
     f0a:	81 33       	cpi	r24, 0x31	; 49
     f0c:	09 f4       	brne	.+2      	; 0xf10 <vfprintf+0x238>
     f0e:	ba 94       	dec	r11
     f10:	1b 14       	cp	r1, r11
     f12:	1c f0       	brlt	.+6      	; 0xf1a <vfprintf+0x242>
     f14:	bb 24       	eor	r11, r11
     f16:	b3 94       	inc	r11
     f18:	2d c0       	rjmp	.+90     	; 0xf74 <vfprintf+0x29c>
     f1a:	f8 e0       	ldi	r31, 0x08	; 8
     f1c:	fb 15       	cp	r31, r11
     f1e:	50 f5       	brcc	.+84     	; 0xf74 <vfprintf+0x29c>
     f20:	38 e0       	ldi	r19, 0x08	; 8
     f22:	b3 2e       	mov	r11, r19
     f24:	27 c0       	rjmp	.+78     	; 0xf74 <vfprintf+0x29c>
     f26:	f6 fc       	sbrc	r15, 6
     f28:	25 c0       	rjmp	.+74     	; 0xf74 <vfprintf+0x29c>
     f2a:	89 2d       	mov	r24, r9
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	8c 15       	cp	r24, r12
     f30:	9d 05       	cpc	r25, r13
     f32:	4c f0       	brlt	.+18     	; 0xf46 <vfprintf+0x26e>
     f34:	2c ef       	ldi	r18, 0xFC	; 252
     f36:	c2 16       	cp	r12, r18
     f38:	2f ef       	ldi	r18, 0xFF	; 255
     f3a:	d2 06       	cpc	r13, r18
     f3c:	24 f0       	brlt	.+8      	; 0xf46 <vfprintf+0x26e>
     f3e:	30 e8       	ldi	r19, 0x80	; 128
     f40:	f3 2a       	or	r15, r19
     f42:	01 c0       	rjmp	.+2      	; 0xf46 <vfprintf+0x26e>
     f44:	9a 94       	dec	r9
     f46:	99 20       	and	r9, r9
     f48:	49 f0       	breq	.+18     	; 0xf5c <vfprintf+0x284>
     f4a:	e2 e0       	ldi	r30, 0x02	; 2
     f4c:	f0 e0       	ldi	r31, 0x00	; 0
     f4e:	ec 0f       	add	r30, r28
     f50:	fd 1f       	adc	r31, r29
     f52:	e9 0d       	add	r30, r9
     f54:	f1 1d       	adc	r31, r1
     f56:	80 81       	ld	r24, Z
     f58:	80 33       	cpi	r24, 0x30	; 48
     f5a:	a1 f3       	breq	.-24     	; 0xf44 <vfprintf+0x26c>
     f5c:	f7 fe       	sbrs	r15, 7
     f5e:	0a c0       	rjmp	.+20     	; 0xf74 <vfprintf+0x29c>
     f60:	b9 2c       	mov	r11, r9
     f62:	b3 94       	inc	r11
     f64:	89 2d       	mov	r24, r9
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	c8 16       	cp	r12, r24
     f6a:	d9 06       	cpc	r13, r25
     f6c:	14 f0       	brlt	.+4      	; 0xf72 <vfprintf+0x29a>
     f6e:	99 24       	eor	r9, r9
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <vfprintf+0x29c>
     f72:	9c 18       	sub	r9, r12
     f74:	f7 fc       	sbrc	r15, 7
     f76:	03 c0       	rjmp	.+6      	; 0xf7e <vfprintf+0x2a6>
     f78:	25 e0       	ldi	r18, 0x05	; 5
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	09 c0       	rjmp	.+18     	; 0xf90 <vfprintf+0x2b8>
     f7e:	1c 14       	cp	r1, r12
     f80:	1d 04       	cpc	r1, r13
     f82:	1c f0       	brlt	.+6      	; 0xf8a <vfprintf+0x2b2>
     f84:	21 e0       	ldi	r18, 0x01	; 1
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	03 c0       	rjmp	.+6      	; 0xf90 <vfprintf+0x2b8>
     f8a:	96 01       	movw	r18, r12
     f8c:	2f 5f       	subi	r18, 0xFF	; 255
     f8e:	3f 4f       	sbci	r19, 0xFF	; 255
     f90:	11 23       	and	r17, r17
     f92:	11 f0       	breq	.+4      	; 0xf98 <vfprintf+0x2c0>
     f94:	2f 5f       	subi	r18, 0xFF	; 255
     f96:	3f 4f       	sbci	r19, 0xFF	; 255
     f98:	99 20       	and	r9, r9
     f9a:	29 f0       	breq	.+10     	; 0xfa6 <vfprintf+0x2ce>
     f9c:	89 2d       	mov	r24, r9
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	01 96       	adiw	r24, 0x01	; 1
     fa2:	28 0f       	add	r18, r24
     fa4:	39 1f       	adc	r19, r25
     fa6:	88 2d       	mov	r24, r8
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	28 17       	cp	r18, r24
     fac:	39 07       	cpc	r19, r25
     fae:	14 f0       	brlt	.+4      	; 0xfb4 <vfprintf+0x2dc>
     fb0:	88 24       	eor	r8, r8
     fb2:	01 c0       	rjmp	.+2      	; 0xfb6 <vfprintf+0x2de>
     fb4:	82 1a       	sub	r8, r18
     fb6:	4f 2c       	mov	r4, r15
     fb8:	55 24       	eor	r5, r5
     fba:	c2 01       	movw	r24, r4
     fbc:	89 70       	andi	r24, 0x09	; 9
     fbe:	90 70       	andi	r25, 0x00	; 0
     fc0:	89 2b       	or	r24, r25
     fc2:	39 f0       	breq	.+14     	; 0xfd2 <vfprintf+0x2fa>
     fc4:	08 c0       	rjmp	.+16     	; 0xfd6 <vfprintf+0x2fe>
     fc6:	80 e2       	ldi	r24, 0x20	; 32
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	b3 01       	movw	r22, r6
     fcc:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
     fd0:	8a 94       	dec	r8
     fd2:	88 20       	and	r8, r8
     fd4:	c1 f7       	brne	.-16     	; 0xfc6 <vfprintf+0x2ee>
     fd6:	11 23       	and	r17, r17
     fd8:	29 f0       	breq	.+10     	; 0xfe4 <vfprintf+0x30c>
     fda:	81 2f       	mov	r24, r17
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	b3 01       	movw	r22, r6
     fe0:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
     fe4:	43 fe       	sbrs	r4, 3
     fe6:	07 c0       	rjmp	.+14     	; 0xff6 <vfprintf+0x31e>
     fe8:	08 c0       	rjmp	.+16     	; 0xffa <vfprintf+0x322>
     fea:	80 e3       	ldi	r24, 0x30	; 48
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	b3 01       	movw	r22, r6
     ff0:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
     ff4:	8a 94       	dec	r8
     ff6:	88 20       	and	r8, r8
     ff8:	c1 f7       	brne	.-16     	; 0xfea <vfprintf+0x312>
     ffa:	f7 fe       	sbrs	r15, 7
     ffc:	46 c0       	rjmp	.+140    	; 0x108a <vfprintf+0x3b2>
     ffe:	86 01       	movw	r16, r12
    1000:	d7 fe       	sbrs	r13, 7
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <vfprintf+0x330>
    1004:	00 e0       	ldi	r16, 0x00	; 0
    1006:	10 e0       	ldi	r17, 0x00	; 0
    1008:	76 01       	movw	r14, r12
    100a:	08 94       	sec
    100c:	e1 1c       	adc	r14, r1
    100e:	f1 1c       	adc	r15, r1
    1010:	e0 1a       	sub	r14, r16
    1012:	f1 0a       	sbc	r15, r17
    1014:	41 e0       	ldi	r20, 0x01	; 1
    1016:	50 e0       	ldi	r21, 0x00	; 0
    1018:	4c 0f       	add	r20, r28
    101a:	5d 1f       	adc	r21, r29
    101c:	e4 0e       	add	r14, r20
    101e:	f5 1e       	adc	r15, r21
    1020:	26 01       	movw	r4, r12
    1022:	4b 18       	sub	r4, r11
    1024:	51 08       	sbc	r5, r1
    1026:	89 2d       	mov	r24, r9
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	aa 24       	eor	r10, r10
    102c:	bb 24       	eor	r11, r11
    102e:	a8 1a       	sub	r10, r24
    1030:	b9 0a       	sbc	r11, r25
    1032:	5f ef       	ldi	r21, 0xFF	; 255
    1034:	0f 3f       	cpi	r16, 0xFF	; 255
    1036:	15 07       	cpc	r17, r21
    1038:	29 f4       	brne	.+10     	; 0x1044 <vfprintf+0x36c>
    103a:	8e e2       	ldi	r24, 0x2E	; 46
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	b3 01       	movw	r22, r6
    1040:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    1044:	c0 16       	cp	r12, r16
    1046:	d1 06       	cpc	r13, r17
    1048:	34 f0       	brlt	.+12     	; 0x1056 <vfprintf+0x37e>
    104a:	40 16       	cp	r4, r16
    104c:	51 06       	cpc	r5, r17
    104e:	1c f4       	brge	.+6      	; 0x1056 <vfprintf+0x37e>
    1050:	f7 01       	movw	r30, r14
    1052:	80 81       	ld	r24, Z
    1054:	01 c0       	rjmp	.+2      	; 0x1058 <vfprintf+0x380>
    1056:	80 e3       	ldi	r24, 0x30	; 48
    1058:	01 50       	subi	r16, 0x01	; 1
    105a:	10 40       	sbci	r17, 0x00	; 0
    105c:	08 94       	sec
    105e:	e1 1c       	adc	r14, r1
    1060:	f1 1c       	adc	r15, r1
    1062:	0a 15       	cp	r16, r10
    1064:	1b 05       	cpc	r17, r11
    1066:	2c f0       	brlt	.+10     	; 0x1072 <vfprintf+0x39a>
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	b3 01       	movw	r22, r6
    106c:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    1070:	e0 cf       	rjmp	.-64     	; 0x1032 <vfprintf+0x35a>
    1072:	0c 15       	cp	r16, r12
    1074:	1d 05       	cpc	r17, r13
    1076:	39 f4       	brne	.+14     	; 0x1086 <vfprintf+0x3ae>
    1078:	9a 81       	ldd	r25, Y+2	; 0x02
    107a:	96 33       	cpi	r25, 0x36	; 54
    107c:	18 f4       	brcc	.+6      	; 0x1084 <vfprintf+0x3ac>
    107e:	95 33       	cpi	r25, 0x35	; 53
    1080:	11 f4       	brne	.+4      	; 0x1086 <vfprintf+0x3ae>
    1082:	24 fe       	sbrs	r2, 4
    1084:	81 e3       	ldi	r24, 0x31	; 49
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	4b c0       	rjmp	.+150    	; 0x1120 <vfprintf+0x448>
    108a:	8a 81       	ldd	r24, Y+2	; 0x02
    108c:	81 33       	cpi	r24, 0x31	; 49
    108e:	09 f0       	breq	.+2      	; 0x1092 <vfprintf+0x3ba>
    1090:	0f 7e       	andi	r16, 0xEF	; 239
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	b3 01       	movw	r22, r6
    1096:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    109a:	99 20       	and	r9, r9
    109c:	a1 f0       	breq	.+40     	; 0x10c6 <vfprintf+0x3ee>
    109e:	8e e2       	ldi	r24, 0x2E	; 46
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	b3 01       	movw	r22, r6
    10a4:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    10a8:	12 e0       	ldi	r17, 0x02	; 2
    10aa:	e1 e0       	ldi	r30, 0x01	; 1
    10ac:	f0 e0       	ldi	r31, 0x00	; 0
    10ae:	ec 0f       	add	r30, r28
    10b0:	fd 1f       	adc	r31, r29
    10b2:	e1 0f       	add	r30, r17
    10b4:	f1 1d       	adc	r31, r1
    10b6:	1f 5f       	subi	r17, 0xFF	; 255
    10b8:	80 81       	ld	r24, Z
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	b3 01       	movw	r22, r6
    10be:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    10c2:	9a 94       	dec	r9
    10c4:	91 f7       	brne	.-28     	; 0x10aa <vfprintf+0x3d2>
    10c6:	44 fc       	sbrc	r4, 4
    10c8:	03 c0       	rjmp	.+6      	; 0x10d0 <vfprintf+0x3f8>
    10ca:	85 e6       	ldi	r24, 0x65	; 101
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	02 c0       	rjmp	.+4      	; 0x10d4 <vfprintf+0x3fc>
    10d0:	85 e4       	ldi	r24, 0x45	; 69
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	b3 01       	movw	r22, r6
    10d6:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    10da:	d7 fc       	sbrc	r13, 7
    10dc:	05 c0       	rjmp	.+10     	; 0x10e8 <vfprintf+0x410>
    10de:	c1 14       	cp	r12, r1
    10e0:	d1 04       	cpc	r13, r1
    10e2:	41 f4       	brne	.+16     	; 0x10f4 <vfprintf+0x41c>
    10e4:	04 ff       	sbrs	r16, 4
    10e6:	06 c0       	rjmp	.+12     	; 0x10f4 <vfprintf+0x41c>
    10e8:	d0 94       	com	r13
    10ea:	c1 94       	neg	r12
    10ec:	d1 08       	sbc	r13, r1
    10ee:	d3 94       	inc	r13
    10f0:	8d e2       	ldi	r24, 0x2D	; 45
    10f2:	01 c0       	rjmp	.+2      	; 0x10f6 <vfprintf+0x41e>
    10f4:	8b e2       	ldi	r24, 0x2B	; 43
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	b3 01       	movw	r22, r6
    10fa:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    10fe:	80 e3       	ldi	r24, 0x30	; 48
    1100:	05 c0       	rjmp	.+10     	; 0x110c <vfprintf+0x434>
    1102:	8f 5f       	subi	r24, 0xFF	; 255
    1104:	26 ef       	ldi	r18, 0xF6	; 246
    1106:	3f ef       	ldi	r19, 0xFF	; 255
    1108:	c2 0e       	add	r12, r18
    110a:	d3 1e       	adc	r13, r19
    110c:	3a e0       	ldi	r19, 0x0A	; 10
    110e:	c3 16       	cp	r12, r19
    1110:	d1 04       	cpc	r13, r1
    1112:	bc f7       	brge	.-18     	; 0x1102 <vfprintf+0x42a>
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	b3 01       	movw	r22, r6
    1118:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    111c:	c6 01       	movw	r24, r12
    111e:	c0 96       	adiw	r24, 0x30	; 48
    1120:	b3 01       	movw	r22, r6
    1122:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    1126:	cc 84       	ldd	r12, Y+12	; 0x0c
    1128:	dd 84       	ldd	r13, Y+13	; 0x0d
    112a:	52 c1       	rjmp	.+676    	; 0x13d0 <vfprintf+0x6f8>
    112c:	93 36       	cpi	r25, 0x63	; 99
    112e:	31 f0       	breq	.+12     	; 0x113c <vfprintf+0x464>
    1130:	93 37       	cpi	r25, 0x73	; 115
    1132:	99 f0       	breq	.+38     	; 0x115a <vfprintf+0x482>
    1134:	93 35       	cpi	r25, 0x53	; 83
    1136:	09 f0       	breq	.+2      	; 0x113a <vfprintf+0x462>
    1138:	59 c0       	rjmp	.+178    	; 0x11ec <vfprintf+0x514>
    113a:	23 c0       	rjmp	.+70     	; 0x1182 <vfprintf+0x4aa>
    113c:	f6 01       	movw	r30, r12
    113e:	80 81       	ld	r24, Z
    1140:	89 83       	std	Y+1, r24	; 0x01
    1142:	5e 01       	movw	r10, r28
    1144:	08 94       	sec
    1146:	a1 1c       	adc	r10, r1
    1148:	b1 1c       	adc	r11, r1
    114a:	22 e0       	ldi	r18, 0x02	; 2
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	c2 0e       	add	r12, r18
    1150:	d3 1e       	adc	r13, r19
    1152:	21 e0       	ldi	r18, 0x01	; 1
    1154:	e2 2e       	mov	r14, r18
    1156:	f1 2c       	mov	r15, r1
    1158:	12 c0       	rjmp	.+36     	; 0x117e <vfprintf+0x4a6>
    115a:	f6 01       	movw	r30, r12
    115c:	a0 80       	ld	r10, Z
    115e:	b1 80       	ldd	r11, Z+1	; 0x01
    1160:	16 fd       	sbrc	r17, 6
    1162:	03 c0       	rjmp	.+6      	; 0x116a <vfprintf+0x492>
    1164:	6f ef       	ldi	r22, 0xFF	; 255
    1166:	7f ef       	ldi	r23, 0xFF	; 255
    1168:	02 c0       	rjmp	.+4      	; 0x116e <vfprintf+0x496>
    116a:	69 2d       	mov	r22, r9
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	22 e0       	ldi	r18, 0x02	; 2
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	c2 0e       	add	r12, r18
    1174:	d3 1e       	adc	r13, r19
    1176:	c5 01       	movw	r24, r10
    1178:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <strnlen>
    117c:	7c 01       	movw	r14, r24
    117e:	1f 77       	andi	r17, 0x7F	; 127
    1180:	13 c0       	rjmp	.+38     	; 0x11a8 <vfprintf+0x4d0>
    1182:	f6 01       	movw	r30, r12
    1184:	a0 80       	ld	r10, Z
    1186:	b1 80       	ldd	r11, Z+1	; 0x01
    1188:	16 fd       	sbrc	r17, 6
    118a:	03 c0       	rjmp	.+6      	; 0x1192 <vfprintf+0x4ba>
    118c:	6f ef       	ldi	r22, 0xFF	; 255
    118e:	7f ef       	ldi	r23, 0xFF	; 255
    1190:	02 c0       	rjmp	.+4      	; 0x1196 <vfprintf+0x4be>
    1192:	69 2d       	mov	r22, r9
    1194:	70 e0       	ldi	r23, 0x00	; 0
    1196:	22 e0       	ldi	r18, 0x02	; 2
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	c2 0e       	add	r12, r18
    119c:	d3 1e       	adc	r13, r19
    119e:	c5 01       	movw	r24, r10
    11a0:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <strnlen_P>
    11a4:	7c 01       	movw	r14, r24
    11a6:	10 68       	ori	r17, 0x80	; 128
    11a8:	13 ff       	sbrs	r17, 3
    11aa:	07 c0       	rjmp	.+14     	; 0x11ba <vfprintf+0x4e2>
    11ac:	1b c0       	rjmp	.+54     	; 0x11e4 <vfprintf+0x50c>
    11ae:	80 e2       	ldi	r24, 0x20	; 32
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	b3 01       	movw	r22, r6
    11b4:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    11b8:	8a 94       	dec	r8
    11ba:	88 2d       	mov	r24, r8
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	e8 16       	cp	r14, r24
    11c0:	f9 06       	cpc	r15, r25
    11c2:	a8 f3       	brcs	.-22     	; 0x11ae <vfprintf+0x4d6>
    11c4:	0f c0       	rjmp	.+30     	; 0x11e4 <vfprintf+0x50c>
    11c6:	f5 01       	movw	r30, r10
    11c8:	17 fd       	sbrc	r17, 7
    11ca:	85 91       	lpm	r24, Z+
    11cc:	17 ff       	sbrs	r17, 7
    11ce:	81 91       	ld	r24, Z+
    11d0:	5f 01       	movw	r10, r30
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	b3 01       	movw	r22, r6
    11d6:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    11da:	81 10       	cpse	r8, r1
    11dc:	8a 94       	dec	r8
    11de:	08 94       	sec
    11e0:	e1 08       	sbc	r14, r1
    11e2:	f1 08       	sbc	r15, r1
    11e4:	e1 14       	cp	r14, r1
    11e6:	f1 04       	cpc	r15, r1
    11e8:	71 f7       	brne	.-36     	; 0x11c6 <vfprintf+0x4ee>
    11ea:	f2 c0       	rjmp	.+484    	; 0x13d0 <vfprintf+0x6f8>
    11ec:	94 36       	cpi	r25, 0x64	; 100
    11ee:	11 f0       	breq	.+4      	; 0x11f4 <vfprintf+0x51c>
    11f0:	99 36       	cpi	r25, 0x69	; 105
    11f2:	89 f5       	brne	.+98     	; 0x1256 <vfprintf+0x57e>
    11f4:	17 ff       	sbrs	r17, 7
    11f6:	08 c0       	rjmp	.+16     	; 0x1208 <vfprintf+0x530>
    11f8:	f6 01       	movw	r30, r12
    11fa:	20 81       	ld	r18, Z
    11fc:	31 81       	ldd	r19, Z+1	; 0x01
    11fe:	42 81       	ldd	r20, Z+2	; 0x02
    1200:	53 81       	ldd	r21, Z+3	; 0x03
    1202:	84 e0       	ldi	r24, 0x04	; 4
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	0a c0       	rjmp	.+20     	; 0x121c <vfprintf+0x544>
    1208:	f6 01       	movw	r30, r12
    120a:	80 81       	ld	r24, Z
    120c:	91 81       	ldd	r25, Z+1	; 0x01
    120e:	9c 01       	movw	r18, r24
    1210:	44 27       	eor	r20, r20
    1212:	37 fd       	sbrc	r19, 7
    1214:	40 95       	com	r20
    1216:	54 2f       	mov	r21, r20
    1218:	82 e0       	ldi	r24, 0x02	; 2
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	c8 0e       	add	r12, r24
    121e:	d9 1e       	adc	r13, r25
    1220:	9f e6       	ldi	r25, 0x6F	; 111
    1222:	f9 2e       	mov	r15, r25
    1224:	f1 22       	and	r15, r17
    1226:	57 ff       	sbrs	r21, 7
    1228:	09 c0       	rjmp	.+18     	; 0x123c <vfprintf+0x564>
    122a:	50 95       	com	r21
    122c:	40 95       	com	r20
    122e:	30 95       	com	r19
    1230:	21 95       	neg	r18
    1232:	3f 4f       	sbci	r19, 0xFF	; 255
    1234:	4f 4f       	sbci	r20, 0xFF	; 255
    1236:	5f 4f       	sbci	r21, 0xFF	; 255
    1238:	90 e8       	ldi	r25, 0x80	; 128
    123a:	f9 2a       	or	r15, r25
    123c:	ca 01       	movw	r24, r20
    123e:	b9 01       	movw	r22, r18
    1240:	ae 01       	movw	r20, r28
    1242:	4f 5f       	subi	r20, 0xFF	; 255
    1244:	5f 4f       	sbci	r21, 0xFF	; 255
    1246:	2a e0       	ldi	r18, 0x0A	; 10
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__ultoa_invert>
    124e:	e8 2e       	mov	r14, r24
    1250:	e8 89       	ldd	r30, Y+16	; 0x10
    1252:	ee 1a       	sub	r14, r30
    1254:	41 c0       	rjmp	.+130    	; 0x12d8 <vfprintf+0x600>
    1256:	95 37       	cpi	r25, 0x75	; 117
    1258:	21 f4       	brne	.+8      	; 0x1262 <vfprintf+0x58a>
    125a:	1f 7e       	andi	r17, 0xEF	; 239
    125c:	2a e0       	ldi	r18, 0x0A	; 10
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	1c c0       	rjmp	.+56     	; 0x129a <vfprintf+0x5c2>
    1262:	19 7f       	andi	r17, 0xF9	; 249
    1264:	9f 36       	cpi	r25, 0x6F	; 111
    1266:	61 f0       	breq	.+24     	; 0x1280 <vfprintf+0x5a8>
    1268:	90 37       	cpi	r25, 0x70	; 112
    126a:	20 f4       	brcc	.+8      	; 0x1274 <vfprintf+0x59c>
    126c:	98 35       	cpi	r25, 0x58	; 88
    126e:	09 f0       	breq	.+2      	; 0x1272 <vfprintf+0x59a>
    1270:	b2 c0       	rjmp	.+356    	; 0x13d6 <vfprintf+0x6fe>
    1272:	0f c0       	rjmp	.+30     	; 0x1292 <vfprintf+0x5ba>
    1274:	90 37       	cpi	r25, 0x70	; 112
    1276:	39 f0       	breq	.+14     	; 0x1286 <vfprintf+0x5ae>
    1278:	98 37       	cpi	r25, 0x78	; 120
    127a:	09 f0       	breq	.+2      	; 0x127e <vfprintf+0x5a6>
    127c:	ac c0       	rjmp	.+344    	; 0x13d6 <vfprintf+0x6fe>
    127e:	04 c0       	rjmp	.+8      	; 0x1288 <vfprintf+0x5b0>
    1280:	28 e0       	ldi	r18, 0x08	; 8
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	0a c0       	rjmp	.+20     	; 0x129a <vfprintf+0x5c2>
    1286:	10 61       	ori	r17, 0x10	; 16
    1288:	14 fd       	sbrc	r17, 4
    128a:	14 60       	ori	r17, 0x04	; 4
    128c:	20 e1       	ldi	r18, 0x10	; 16
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	04 c0       	rjmp	.+8      	; 0x129a <vfprintf+0x5c2>
    1292:	14 fd       	sbrc	r17, 4
    1294:	16 60       	ori	r17, 0x06	; 6
    1296:	20 e1       	ldi	r18, 0x10	; 16
    1298:	32 e0       	ldi	r19, 0x02	; 2
    129a:	17 ff       	sbrs	r17, 7
    129c:	08 c0       	rjmp	.+16     	; 0x12ae <vfprintf+0x5d6>
    129e:	f6 01       	movw	r30, r12
    12a0:	60 81       	ld	r22, Z
    12a2:	71 81       	ldd	r23, Z+1	; 0x01
    12a4:	82 81       	ldd	r24, Z+2	; 0x02
    12a6:	93 81       	ldd	r25, Z+3	; 0x03
    12a8:	44 e0       	ldi	r20, 0x04	; 4
    12aa:	50 e0       	ldi	r21, 0x00	; 0
    12ac:	08 c0       	rjmp	.+16     	; 0x12be <vfprintf+0x5e6>
    12ae:	f6 01       	movw	r30, r12
    12b0:	80 81       	ld	r24, Z
    12b2:	91 81       	ldd	r25, Z+1	; 0x01
    12b4:	bc 01       	movw	r22, r24
    12b6:	80 e0       	ldi	r24, 0x00	; 0
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	42 e0       	ldi	r20, 0x02	; 2
    12bc:	50 e0       	ldi	r21, 0x00	; 0
    12be:	c4 0e       	add	r12, r20
    12c0:	d5 1e       	adc	r13, r21
    12c2:	ae 01       	movw	r20, r28
    12c4:	4f 5f       	subi	r20, 0xFF	; 255
    12c6:	5f 4f       	sbci	r21, 0xFF	; 255
    12c8:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__ultoa_invert>
    12cc:	e8 2e       	mov	r14, r24
    12ce:	58 89       	ldd	r21, Y+16	; 0x10
    12d0:	e5 1a       	sub	r14, r21
    12d2:	8f e7       	ldi	r24, 0x7F	; 127
    12d4:	f8 2e       	mov	r15, r24
    12d6:	f1 22       	and	r15, r17
    12d8:	f6 fe       	sbrs	r15, 6
    12da:	0b c0       	rjmp	.+22     	; 0x12f2 <vfprintf+0x61a>
    12dc:	8e ef       	ldi	r24, 0xFE	; 254
    12de:	f8 22       	and	r15, r24
    12e0:	e9 14       	cp	r14, r9
    12e2:	38 f4       	brcc	.+14     	; 0x12f2 <vfprintf+0x61a>
    12e4:	f4 fe       	sbrs	r15, 4
    12e6:	07 c0       	rjmp	.+14     	; 0x12f6 <vfprintf+0x61e>
    12e8:	f2 fc       	sbrc	r15, 2
    12ea:	05 c0       	rjmp	.+10     	; 0x12f6 <vfprintf+0x61e>
    12ec:	9f ee       	ldi	r25, 0xEF	; 239
    12ee:	f9 22       	and	r15, r25
    12f0:	02 c0       	rjmp	.+4      	; 0x12f6 <vfprintf+0x61e>
    12f2:	1e 2d       	mov	r17, r14
    12f4:	01 c0       	rjmp	.+2      	; 0x12f8 <vfprintf+0x620>
    12f6:	19 2d       	mov	r17, r9
    12f8:	f4 fe       	sbrs	r15, 4
    12fa:	0d c0       	rjmp	.+26     	; 0x1316 <vfprintf+0x63e>
    12fc:	fe 01       	movw	r30, r28
    12fe:	ee 0d       	add	r30, r14
    1300:	f1 1d       	adc	r31, r1
    1302:	80 81       	ld	r24, Z
    1304:	80 33       	cpi	r24, 0x30	; 48
    1306:	19 f4       	brne	.+6      	; 0x130e <vfprintf+0x636>
    1308:	e9 ee       	ldi	r30, 0xE9	; 233
    130a:	fe 22       	and	r15, r30
    130c:	08 c0       	rjmp	.+16     	; 0x131e <vfprintf+0x646>
    130e:	1f 5f       	subi	r17, 0xFF	; 255
    1310:	f2 fe       	sbrs	r15, 2
    1312:	05 c0       	rjmp	.+10     	; 0x131e <vfprintf+0x646>
    1314:	03 c0       	rjmp	.+6      	; 0x131c <vfprintf+0x644>
    1316:	8f 2d       	mov	r24, r15
    1318:	86 78       	andi	r24, 0x86	; 134
    131a:	09 f0       	breq	.+2      	; 0x131e <vfprintf+0x646>
    131c:	1f 5f       	subi	r17, 0xFF	; 255
    131e:	0f 2d       	mov	r16, r15
    1320:	f3 fc       	sbrc	r15, 3
    1322:	14 c0       	rjmp	.+40     	; 0x134c <vfprintf+0x674>
    1324:	f0 fe       	sbrs	r15, 0
    1326:	0f c0       	rjmp	.+30     	; 0x1346 <vfprintf+0x66e>
    1328:	18 15       	cp	r17, r8
    132a:	10 f0       	brcs	.+4      	; 0x1330 <vfprintf+0x658>
    132c:	9e 2c       	mov	r9, r14
    132e:	0b c0       	rjmp	.+22     	; 0x1346 <vfprintf+0x66e>
    1330:	9e 2c       	mov	r9, r14
    1332:	98 0c       	add	r9, r8
    1334:	91 1a       	sub	r9, r17
    1336:	18 2d       	mov	r17, r8
    1338:	06 c0       	rjmp	.+12     	; 0x1346 <vfprintf+0x66e>
    133a:	80 e2       	ldi	r24, 0x20	; 32
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	b3 01       	movw	r22, r6
    1340:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    1344:	1f 5f       	subi	r17, 0xFF	; 255
    1346:	18 15       	cp	r17, r8
    1348:	c0 f3       	brcs	.-16     	; 0x133a <vfprintf+0x662>
    134a:	04 c0       	rjmp	.+8      	; 0x1354 <vfprintf+0x67c>
    134c:	18 15       	cp	r17, r8
    134e:	10 f4       	brcc	.+4      	; 0x1354 <vfprintf+0x67c>
    1350:	81 1a       	sub	r8, r17
    1352:	01 c0       	rjmp	.+2      	; 0x1356 <vfprintf+0x67e>
    1354:	88 24       	eor	r8, r8
    1356:	04 ff       	sbrs	r16, 4
    1358:	0f c0       	rjmp	.+30     	; 0x1378 <vfprintf+0x6a0>
    135a:	80 e3       	ldi	r24, 0x30	; 48
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	b3 01       	movw	r22, r6
    1360:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    1364:	02 ff       	sbrs	r16, 2
    1366:	1d c0       	rjmp	.+58     	; 0x13a2 <vfprintf+0x6ca>
    1368:	01 fd       	sbrc	r16, 1
    136a:	03 c0       	rjmp	.+6      	; 0x1372 <vfprintf+0x69a>
    136c:	88 e7       	ldi	r24, 0x78	; 120
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	0e c0       	rjmp	.+28     	; 0x138e <vfprintf+0x6b6>
    1372:	88 e5       	ldi	r24, 0x58	; 88
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	0b c0       	rjmp	.+22     	; 0x138e <vfprintf+0x6b6>
    1378:	80 2f       	mov	r24, r16
    137a:	86 78       	andi	r24, 0x86	; 134
    137c:	91 f0       	breq	.+36     	; 0x13a2 <vfprintf+0x6ca>
    137e:	01 ff       	sbrs	r16, 1
    1380:	02 c0       	rjmp	.+4      	; 0x1386 <vfprintf+0x6ae>
    1382:	8b e2       	ldi	r24, 0x2B	; 43
    1384:	01 c0       	rjmp	.+2      	; 0x1388 <vfprintf+0x6b0>
    1386:	80 e2       	ldi	r24, 0x20	; 32
    1388:	f7 fc       	sbrc	r15, 7
    138a:	8d e2       	ldi	r24, 0x2D	; 45
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	b3 01       	movw	r22, r6
    1390:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    1394:	06 c0       	rjmp	.+12     	; 0x13a2 <vfprintf+0x6ca>
    1396:	80 e3       	ldi	r24, 0x30	; 48
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	b3 01       	movw	r22, r6
    139c:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    13a0:	9a 94       	dec	r9
    13a2:	e9 14       	cp	r14, r9
    13a4:	c0 f3       	brcs	.-16     	; 0x1396 <vfprintf+0x6be>
    13a6:	ea 94       	dec	r14
    13a8:	e1 e0       	ldi	r30, 0x01	; 1
    13aa:	f0 e0       	ldi	r31, 0x00	; 0
    13ac:	ec 0f       	add	r30, r28
    13ae:	fd 1f       	adc	r31, r29
    13b0:	ee 0d       	add	r30, r14
    13b2:	f1 1d       	adc	r31, r1
    13b4:	80 81       	ld	r24, Z
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	b3 01       	movw	r22, r6
    13ba:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    13be:	ee 20       	and	r14, r14
    13c0:	91 f7       	brne	.-28     	; 0x13a6 <vfprintf+0x6ce>
    13c2:	06 c0       	rjmp	.+12     	; 0x13d0 <vfprintf+0x6f8>
    13c4:	80 e2       	ldi	r24, 0x20	; 32
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	b3 01       	movw	r22, r6
    13ca:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <fputc>
    13ce:	8a 94       	dec	r8
    13d0:	88 20       	and	r8, r8
    13d2:	c1 f7       	brne	.-16     	; 0x13c4 <vfprintf+0x6ec>
    13d4:	99 cc       	rjmp	.-1742   	; 0xd08 <vfprintf+0x30>
    13d6:	f3 01       	movw	r30, r6
    13d8:	66 81       	ldd	r22, Z+6	; 0x06
    13da:	77 81       	ldd	r23, Z+7	; 0x07
    13dc:	cb 01       	movw	r24, r22
    13de:	61 96       	adiw	r28, 0x11	; 17
    13e0:	e2 e1       	ldi	r30, 0x12	; 18
    13e2:	0c 94 ab 0c 	jmp	0x1956	; 0x1956 <__epilogue_restores__>

000013e6 <__subsf3>:
    13e6:	50 58       	subi	r21, 0x80	; 128

000013e8 <__addsf3>:
    13e8:	bb 27       	eor	r27, r27
    13ea:	aa 27       	eor	r26, r26
    13ec:	0e d0       	rcall	.+28     	; 0x140a <__addsf3x>
    13ee:	75 c1       	rjmp	.+746    	; 0x16da <__fp_round>
    13f0:	66 d1       	rcall	.+716    	; 0x16be <__fp_pscA>
    13f2:	30 f0       	brcs	.+12     	; 0x1400 <__addsf3+0x18>
    13f4:	6b d1       	rcall	.+726    	; 0x16cc <__fp_pscB>
    13f6:	20 f0       	brcs	.+8      	; 0x1400 <__addsf3+0x18>
    13f8:	31 f4       	brne	.+12     	; 0x1406 <__addsf3+0x1e>
    13fa:	9f 3f       	cpi	r25, 0xFF	; 255
    13fc:	11 f4       	brne	.+4      	; 0x1402 <__addsf3+0x1a>
    13fe:	1e f4       	brtc	.+6      	; 0x1406 <__addsf3+0x1e>
    1400:	5b c1       	rjmp	.+694    	; 0x16b8 <__fp_nan>
    1402:	0e f4       	brtc	.+2      	; 0x1406 <__addsf3+0x1e>
    1404:	e0 95       	com	r30
    1406:	e7 fb       	bst	r30, 7
    1408:	51 c1       	rjmp	.+674    	; 0x16ac <__fp_inf>

0000140a <__addsf3x>:
    140a:	e9 2f       	mov	r30, r25
    140c:	77 d1       	rcall	.+750    	; 0x16fc <__fp_split3>
    140e:	80 f3       	brcs	.-32     	; 0x13f0 <__addsf3+0x8>
    1410:	ba 17       	cp	r27, r26
    1412:	62 07       	cpc	r22, r18
    1414:	73 07       	cpc	r23, r19
    1416:	84 07       	cpc	r24, r20
    1418:	95 07       	cpc	r25, r21
    141a:	18 f0       	brcs	.+6      	; 0x1422 <__addsf3x+0x18>
    141c:	71 f4       	brne	.+28     	; 0x143a <__addsf3x+0x30>
    141e:	9e f5       	brtc	.+102    	; 0x1486 <__addsf3x+0x7c>
    1420:	8f c1       	rjmp	.+798    	; 0x1740 <__fp_zero>
    1422:	0e f4       	brtc	.+2      	; 0x1426 <__addsf3x+0x1c>
    1424:	e0 95       	com	r30
    1426:	0b 2e       	mov	r0, r27
    1428:	ba 2f       	mov	r27, r26
    142a:	a0 2d       	mov	r26, r0
    142c:	0b 01       	movw	r0, r22
    142e:	b9 01       	movw	r22, r18
    1430:	90 01       	movw	r18, r0
    1432:	0c 01       	movw	r0, r24
    1434:	ca 01       	movw	r24, r20
    1436:	a0 01       	movw	r20, r0
    1438:	11 24       	eor	r1, r1
    143a:	ff 27       	eor	r31, r31
    143c:	59 1b       	sub	r21, r25
    143e:	99 f0       	breq	.+38     	; 0x1466 <__addsf3x+0x5c>
    1440:	59 3f       	cpi	r21, 0xF9	; 249
    1442:	50 f4       	brcc	.+20     	; 0x1458 <__addsf3x+0x4e>
    1444:	50 3e       	cpi	r21, 0xE0	; 224
    1446:	68 f1       	brcs	.+90     	; 0x14a2 <__addsf3x+0x98>
    1448:	1a 16       	cp	r1, r26
    144a:	f0 40       	sbci	r31, 0x00	; 0
    144c:	a2 2f       	mov	r26, r18
    144e:	23 2f       	mov	r18, r19
    1450:	34 2f       	mov	r19, r20
    1452:	44 27       	eor	r20, r20
    1454:	58 5f       	subi	r21, 0xF8	; 248
    1456:	f3 cf       	rjmp	.-26     	; 0x143e <__addsf3x+0x34>
    1458:	46 95       	lsr	r20
    145a:	37 95       	ror	r19
    145c:	27 95       	ror	r18
    145e:	a7 95       	ror	r26
    1460:	f0 40       	sbci	r31, 0x00	; 0
    1462:	53 95       	inc	r21
    1464:	c9 f7       	brne	.-14     	; 0x1458 <__addsf3x+0x4e>
    1466:	7e f4       	brtc	.+30     	; 0x1486 <__addsf3x+0x7c>
    1468:	1f 16       	cp	r1, r31
    146a:	ba 0b       	sbc	r27, r26
    146c:	62 0b       	sbc	r22, r18
    146e:	73 0b       	sbc	r23, r19
    1470:	84 0b       	sbc	r24, r20
    1472:	ba f0       	brmi	.+46     	; 0x14a2 <__addsf3x+0x98>
    1474:	91 50       	subi	r25, 0x01	; 1
    1476:	a1 f0       	breq	.+40     	; 0x14a0 <__addsf3x+0x96>
    1478:	ff 0f       	add	r31, r31
    147a:	bb 1f       	adc	r27, r27
    147c:	66 1f       	adc	r22, r22
    147e:	77 1f       	adc	r23, r23
    1480:	88 1f       	adc	r24, r24
    1482:	c2 f7       	brpl	.-16     	; 0x1474 <__addsf3x+0x6a>
    1484:	0e c0       	rjmp	.+28     	; 0x14a2 <__addsf3x+0x98>
    1486:	ba 0f       	add	r27, r26
    1488:	62 1f       	adc	r22, r18
    148a:	73 1f       	adc	r23, r19
    148c:	84 1f       	adc	r24, r20
    148e:	48 f4       	brcc	.+18     	; 0x14a2 <__addsf3x+0x98>
    1490:	87 95       	ror	r24
    1492:	77 95       	ror	r23
    1494:	67 95       	ror	r22
    1496:	b7 95       	ror	r27
    1498:	f7 95       	ror	r31
    149a:	9e 3f       	cpi	r25, 0xFE	; 254
    149c:	08 f0       	brcs	.+2      	; 0x14a0 <__addsf3x+0x96>
    149e:	b3 cf       	rjmp	.-154    	; 0x1406 <__addsf3+0x1e>
    14a0:	93 95       	inc	r25
    14a2:	88 0f       	add	r24, r24
    14a4:	08 f0       	brcs	.+2      	; 0x14a8 <__addsf3x+0x9e>
    14a6:	99 27       	eor	r25, r25
    14a8:	ee 0f       	add	r30, r30
    14aa:	97 95       	ror	r25
    14ac:	87 95       	ror	r24
    14ae:	08 95       	ret

000014b0 <__cmpsf2>:
    14b0:	d9 d0       	rcall	.+434    	; 0x1664 <__fp_cmp>
    14b2:	08 f4       	brcc	.+2      	; 0x14b6 <__cmpsf2+0x6>
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	08 95       	ret

000014b8 <__divsf3>:
    14b8:	0c d0       	rcall	.+24     	; 0x14d2 <__divsf3x>
    14ba:	0f c1       	rjmp	.+542    	; 0x16da <__fp_round>
    14bc:	07 d1       	rcall	.+526    	; 0x16cc <__fp_pscB>
    14be:	40 f0       	brcs	.+16     	; 0x14d0 <__divsf3+0x18>
    14c0:	fe d0       	rcall	.+508    	; 0x16be <__fp_pscA>
    14c2:	30 f0       	brcs	.+12     	; 0x14d0 <__divsf3+0x18>
    14c4:	21 f4       	brne	.+8      	; 0x14ce <__divsf3+0x16>
    14c6:	5f 3f       	cpi	r21, 0xFF	; 255
    14c8:	19 f0       	breq	.+6      	; 0x14d0 <__divsf3+0x18>
    14ca:	f0 c0       	rjmp	.+480    	; 0x16ac <__fp_inf>
    14cc:	51 11       	cpse	r21, r1
    14ce:	39 c1       	rjmp	.+626    	; 0x1742 <__fp_szero>
    14d0:	f3 c0       	rjmp	.+486    	; 0x16b8 <__fp_nan>

000014d2 <__divsf3x>:
    14d2:	14 d1       	rcall	.+552    	; 0x16fc <__fp_split3>
    14d4:	98 f3       	brcs	.-26     	; 0x14bc <__divsf3+0x4>

000014d6 <__divsf3_pse>:
    14d6:	99 23       	and	r25, r25
    14d8:	c9 f3       	breq	.-14     	; 0x14cc <__divsf3+0x14>
    14da:	55 23       	and	r21, r21
    14dc:	b1 f3       	breq	.-20     	; 0x14ca <__divsf3+0x12>
    14de:	95 1b       	sub	r25, r21
    14e0:	55 0b       	sbc	r21, r21
    14e2:	bb 27       	eor	r27, r27
    14e4:	aa 27       	eor	r26, r26
    14e6:	62 17       	cp	r22, r18
    14e8:	73 07       	cpc	r23, r19
    14ea:	84 07       	cpc	r24, r20
    14ec:	38 f0       	brcs	.+14     	; 0x14fc <__divsf3_pse+0x26>
    14ee:	9f 5f       	subi	r25, 0xFF	; 255
    14f0:	5f 4f       	sbci	r21, 0xFF	; 255
    14f2:	22 0f       	add	r18, r18
    14f4:	33 1f       	adc	r19, r19
    14f6:	44 1f       	adc	r20, r20
    14f8:	aa 1f       	adc	r26, r26
    14fa:	a9 f3       	breq	.-22     	; 0x14e6 <__divsf3_pse+0x10>
    14fc:	33 d0       	rcall	.+102    	; 0x1564 <__divsf3_pse+0x8e>
    14fe:	0e 2e       	mov	r0, r30
    1500:	3a f0       	brmi	.+14     	; 0x1510 <__divsf3_pse+0x3a>
    1502:	e0 e8       	ldi	r30, 0x80	; 128
    1504:	30 d0       	rcall	.+96     	; 0x1566 <__divsf3_pse+0x90>
    1506:	91 50       	subi	r25, 0x01	; 1
    1508:	50 40       	sbci	r21, 0x00	; 0
    150a:	e6 95       	lsr	r30
    150c:	00 1c       	adc	r0, r0
    150e:	ca f7       	brpl	.-14     	; 0x1502 <__divsf3_pse+0x2c>
    1510:	29 d0       	rcall	.+82     	; 0x1564 <__divsf3_pse+0x8e>
    1512:	fe 2f       	mov	r31, r30
    1514:	27 d0       	rcall	.+78     	; 0x1564 <__divsf3_pse+0x8e>
    1516:	66 0f       	add	r22, r22
    1518:	77 1f       	adc	r23, r23
    151a:	88 1f       	adc	r24, r24
    151c:	bb 1f       	adc	r27, r27
    151e:	26 17       	cp	r18, r22
    1520:	37 07       	cpc	r19, r23
    1522:	48 07       	cpc	r20, r24
    1524:	ab 07       	cpc	r26, r27
    1526:	b0 e8       	ldi	r27, 0x80	; 128
    1528:	09 f0       	breq	.+2      	; 0x152c <__divsf3_pse+0x56>
    152a:	bb 0b       	sbc	r27, r27
    152c:	80 2d       	mov	r24, r0
    152e:	bf 01       	movw	r22, r30
    1530:	ff 27       	eor	r31, r31
    1532:	93 58       	subi	r25, 0x83	; 131
    1534:	5f 4f       	sbci	r21, 0xFF	; 255
    1536:	2a f0       	brmi	.+10     	; 0x1542 <__divsf3_pse+0x6c>
    1538:	9e 3f       	cpi	r25, 0xFE	; 254
    153a:	51 05       	cpc	r21, r1
    153c:	68 f0       	brcs	.+26     	; 0x1558 <__divsf3_pse+0x82>
    153e:	b6 c0       	rjmp	.+364    	; 0x16ac <__fp_inf>
    1540:	00 c1       	rjmp	.+512    	; 0x1742 <__fp_szero>
    1542:	5f 3f       	cpi	r21, 0xFF	; 255
    1544:	ec f3       	brlt	.-6      	; 0x1540 <__divsf3_pse+0x6a>
    1546:	98 3e       	cpi	r25, 0xE8	; 232
    1548:	dc f3       	brlt	.-10     	; 0x1540 <__divsf3_pse+0x6a>
    154a:	86 95       	lsr	r24
    154c:	77 95       	ror	r23
    154e:	67 95       	ror	r22
    1550:	b7 95       	ror	r27
    1552:	f7 95       	ror	r31
    1554:	9f 5f       	subi	r25, 0xFF	; 255
    1556:	c9 f7       	brne	.-14     	; 0x154a <__divsf3_pse+0x74>
    1558:	88 0f       	add	r24, r24
    155a:	91 1d       	adc	r25, r1
    155c:	96 95       	lsr	r25
    155e:	87 95       	ror	r24
    1560:	97 f9       	bld	r25, 7
    1562:	08 95       	ret
    1564:	e1 e0       	ldi	r30, 0x01	; 1
    1566:	66 0f       	add	r22, r22
    1568:	77 1f       	adc	r23, r23
    156a:	88 1f       	adc	r24, r24
    156c:	bb 1f       	adc	r27, r27
    156e:	62 17       	cp	r22, r18
    1570:	73 07       	cpc	r23, r19
    1572:	84 07       	cpc	r24, r20
    1574:	ba 07       	cpc	r27, r26
    1576:	20 f0       	brcs	.+8      	; 0x1580 <__divsf3_pse+0xaa>
    1578:	62 1b       	sub	r22, r18
    157a:	73 0b       	sbc	r23, r19
    157c:	84 0b       	sbc	r24, r20
    157e:	ba 0b       	sbc	r27, r26
    1580:	ee 1f       	adc	r30, r30
    1582:	88 f7       	brcc	.-30     	; 0x1566 <__divsf3_pse+0x90>
    1584:	e0 95       	com	r30
    1586:	08 95       	ret

00001588 <__fixsfsi>:
    1588:	04 d0       	rcall	.+8      	; 0x1592 <__fixunssfsi>
    158a:	68 94       	set
    158c:	b1 11       	cpse	r27, r1
    158e:	d9 c0       	rjmp	.+434    	; 0x1742 <__fp_szero>
    1590:	08 95       	ret

00001592 <__fixunssfsi>:
    1592:	bc d0       	rcall	.+376    	; 0x170c <__fp_splitA>
    1594:	88 f0       	brcs	.+34     	; 0x15b8 <__fixunssfsi+0x26>
    1596:	9f 57       	subi	r25, 0x7F	; 127
    1598:	90 f0       	brcs	.+36     	; 0x15be <__fixunssfsi+0x2c>
    159a:	b9 2f       	mov	r27, r25
    159c:	99 27       	eor	r25, r25
    159e:	b7 51       	subi	r27, 0x17	; 23
    15a0:	a0 f0       	brcs	.+40     	; 0x15ca <__fixunssfsi+0x38>
    15a2:	d1 f0       	breq	.+52     	; 0x15d8 <__fixunssfsi+0x46>
    15a4:	66 0f       	add	r22, r22
    15a6:	77 1f       	adc	r23, r23
    15a8:	88 1f       	adc	r24, r24
    15aa:	99 1f       	adc	r25, r25
    15ac:	1a f0       	brmi	.+6      	; 0x15b4 <__fixunssfsi+0x22>
    15ae:	ba 95       	dec	r27
    15b0:	c9 f7       	brne	.-14     	; 0x15a4 <__fixunssfsi+0x12>
    15b2:	12 c0       	rjmp	.+36     	; 0x15d8 <__fixunssfsi+0x46>
    15b4:	b1 30       	cpi	r27, 0x01	; 1
    15b6:	81 f0       	breq	.+32     	; 0x15d8 <__fixunssfsi+0x46>
    15b8:	c3 d0       	rcall	.+390    	; 0x1740 <__fp_zero>
    15ba:	b1 e0       	ldi	r27, 0x01	; 1
    15bc:	08 95       	ret
    15be:	c0 c0       	rjmp	.+384    	; 0x1740 <__fp_zero>
    15c0:	67 2f       	mov	r22, r23
    15c2:	78 2f       	mov	r23, r24
    15c4:	88 27       	eor	r24, r24
    15c6:	b8 5f       	subi	r27, 0xF8	; 248
    15c8:	39 f0       	breq	.+14     	; 0x15d8 <__fixunssfsi+0x46>
    15ca:	b9 3f       	cpi	r27, 0xF9	; 249
    15cc:	cc f3       	brlt	.-14     	; 0x15c0 <__fixunssfsi+0x2e>
    15ce:	86 95       	lsr	r24
    15d0:	77 95       	ror	r23
    15d2:	67 95       	ror	r22
    15d4:	b3 95       	inc	r27
    15d6:	d9 f7       	brne	.-10     	; 0x15ce <__fixunssfsi+0x3c>
    15d8:	3e f4       	brtc	.+14     	; 0x15e8 <__fixunssfsi+0x56>
    15da:	90 95       	com	r25
    15dc:	80 95       	com	r24
    15de:	70 95       	com	r23
    15e0:	61 95       	neg	r22
    15e2:	7f 4f       	sbci	r23, 0xFF	; 255
    15e4:	8f 4f       	sbci	r24, 0xFF	; 255
    15e6:	9f 4f       	sbci	r25, 0xFF	; 255
    15e8:	08 95       	ret

000015ea <__floatunsisf>:
    15ea:	e8 94       	clt
    15ec:	09 c0       	rjmp	.+18     	; 0x1600 <__floatsisf+0x12>

000015ee <__floatsisf>:
    15ee:	97 fb       	bst	r25, 7
    15f0:	3e f4       	brtc	.+14     	; 0x1600 <__floatsisf+0x12>
    15f2:	90 95       	com	r25
    15f4:	80 95       	com	r24
    15f6:	70 95       	com	r23
    15f8:	61 95       	neg	r22
    15fa:	7f 4f       	sbci	r23, 0xFF	; 255
    15fc:	8f 4f       	sbci	r24, 0xFF	; 255
    15fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1600:	99 23       	and	r25, r25
    1602:	a9 f0       	breq	.+42     	; 0x162e <__floatsisf+0x40>
    1604:	f9 2f       	mov	r31, r25
    1606:	96 e9       	ldi	r25, 0x96	; 150
    1608:	bb 27       	eor	r27, r27
    160a:	93 95       	inc	r25
    160c:	f6 95       	lsr	r31
    160e:	87 95       	ror	r24
    1610:	77 95       	ror	r23
    1612:	67 95       	ror	r22
    1614:	b7 95       	ror	r27
    1616:	f1 11       	cpse	r31, r1
    1618:	f8 cf       	rjmp	.-16     	; 0x160a <__floatsisf+0x1c>
    161a:	fa f4       	brpl	.+62     	; 0x165a <__floatsisf+0x6c>
    161c:	bb 0f       	add	r27, r27
    161e:	11 f4       	brne	.+4      	; 0x1624 <__floatsisf+0x36>
    1620:	60 ff       	sbrs	r22, 0
    1622:	1b c0       	rjmp	.+54     	; 0x165a <__floatsisf+0x6c>
    1624:	6f 5f       	subi	r22, 0xFF	; 255
    1626:	7f 4f       	sbci	r23, 0xFF	; 255
    1628:	8f 4f       	sbci	r24, 0xFF	; 255
    162a:	9f 4f       	sbci	r25, 0xFF	; 255
    162c:	16 c0       	rjmp	.+44     	; 0x165a <__floatsisf+0x6c>
    162e:	88 23       	and	r24, r24
    1630:	11 f0       	breq	.+4      	; 0x1636 <__floatsisf+0x48>
    1632:	96 e9       	ldi	r25, 0x96	; 150
    1634:	11 c0       	rjmp	.+34     	; 0x1658 <__floatsisf+0x6a>
    1636:	77 23       	and	r23, r23
    1638:	21 f0       	breq	.+8      	; 0x1642 <__floatsisf+0x54>
    163a:	9e e8       	ldi	r25, 0x8E	; 142
    163c:	87 2f       	mov	r24, r23
    163e:	76 2f       	mov	r23, r22
    1640:	05 c0       	rjmp	.+10     	; 0x164c <__floatsisf+0x5e>
    1642:	66 23       	and	r22, r22
    1644:	71 f0       	breq	.+28     	; 0x1662 <__floatsisf+0x74>
    1646:	96 e8       	ldi	r25, 0x86	; 134
    1648:	86 2f       	mov	r24, r22
    164a:	70 e0       	ldi	r23, 0x00	; 0
    164c:	60 e0       	ldi	r22, 0x00	; 0
    164e:	2a f0       	brmi	.+10     	; 0x165a <__floatsisf+0x6c>
    1650:	9a 95       	dec	r25
    1652:	66 0f       	add	r22, r22
    1654:	77 1f       	adc	r23, r23
    1656:	88 1f       	adc	r24, r24
    1658:	da f7       	brpl	.-10     	; 0x1650 <__floatsisf+0x62>
    165a:	88 0f       	add	r24, r24
    165c:	96 95       	lsr	r25
    165e:	87 95       	ror	r24
    1660:	97 f9       	bld	r25, 7
    1662:	08 95       	ret

00001664 <__fp_cmp>:
    1664:	99 0f       	add	r25, r25
    1666:	00 08       	sbc	r0, r0
    1668:	55 0f       	add	r21, r21
    166a:	aa 0b       	sbc	r26, r26
    166c:	e0 e8       	ldi	r30, 0x80	; 128
    166e:	fe ef       	ldi	r31, 0xFE	; 254
    1670:	16 16       	cp	r1, r22
    1672:	17 06       	cpc	r1, r23
    1674:	e8 07       	cpc	r30, r24
    1676:	f9 07       	cpc	r31, r25
    1678:	c0 f0       	brcs	.+48     	; 0x16aa <__fp_cmp+0x46>
    167a:	12 16       	cp	r1, r18
    167c:	13 06       	cpc	r1, r19
    167e:	e4 07       	cpc	r30, r20
    1680:	f5 07       	cpc	r31, r21
    1682:	98 f0       	brcs	.+38     	; 0x16aa <__fp_cmp+0x46>
    1684:	62 1b       	sub	r22, r18
    1686:	73 0b       	sbc	r23, r19
    1688:	84 0b       	sbc	r24, r20
    168a:	95 0b       	sbc	r25, r21
    168c:	39 f4       	brne	.+14     	; 0x169c <__fp_cmp+0x38>
    168e:	0a 26       	eor	r0, r26
    1690:	61 f0       	breq	.+24     	; 0x16aa <__fp_cmp+0x46>
    1692:	23 2b       	or	r18, r19
    1694:	24 2b       	or	r18, r20
    1696:	25 2b       	or	r18, r21
    1698:	21 f4       	brne	.+8      	; 0x16a2 <__fp_cmp+0x3e>
    169a:	08 95       	ret
    169c:	0a 26       	eor	r0, r26
    169e:	09 f4       	brne	.+2      	; 0x16a2 <__fp_cmp+0x3e>
    16a0:	a1 40       	sbci	r26, 0x01	; 1
    16a2:	a6 95       	lsr	r26
    16a4:	8f ef       	ldi	r24, 0xFF	; 255
    16a6:	81 1d       	adc	r24, r1
    16a8:	81 1d       	adc	r24, r1
    16aa:	08 95       	ret

000016ac <__fp_inf>:
    16ac:	97 f9       	bld	r25, 7
    16ae:	9f 67       	ori	r25, 0x7F	; 127
    16b0:	80 e8       	ldi	r24, 0x80	; 128
    16b2:	70 e0       	ldi	r23, 0x00	; 0
    16b4:	60 e0       	ldi	r22, 0x00	; 0
    16b6:	08 95       	ret

000016b8 <__fp_nan>:
    16b8:	9f ef       	ldi	r25, 0xFF	; 255
    16ba:	80 ec       	ldi	r24, 0xC0	; 192
    16bc:	08 95       	ret

000016be <__fp_pscA>:
    16be:	00 24       	eor	r0, r0
    16c0:	0a 94       	dec	r0
    16c2:	16 16       	cp	r1, r22
    16c4:	17 06       	cpc	r1, r23
    16c6:	18 06       	cpc	r1, r24
    16c8:	09 06       	cpc	r0, r25
    16ca:	08 95       	ret

000016cc <__fp_pscB>:
    16cc:	00 24       	eor	r0, r0
    16ce:	0a 94       	dec	r0
    16d0:	12 16       	cp	r1, r18
    16d2:	13 06       	cpc	r1, r19
    16d4:	14 06       	cpc	r1, r20
    16d6:	05 06       	cpc	r0, r21
    16d8:	08 95       	ret

000016da <__fp_round>:
    16da:	09 2e       	mov	r0, r25
    16dc:	03 94       	inc	r0
    16de:	00 0c       	add	r0, r0
    16e0:	11 f4       	brne	.+4      	; 0x16e6 <__fp_round+0xc>
    16e2:	88 23       	and	r24, r24
    16e4:	52 f0       	brmi	.+20     	; 0x16fa <__fp_round+0x20>
    16e6:	bb 0f       	add	r27, r27
    16e8:	40 f4       	brcc	.+16     	; 0x16fa <__fp_round+0x20>
    16ea:	bf 2b       	or	r27, r31
    16ec:	11 f4       	brne	.+4      	; 0x16f2 <__fp_round+0x18>
    16ee:	60 ff       	sbrs	r22, 0
    16f0:	04 c0       	rjmp	.+8      	; 0x16fa <__fp_round+0x20>
    16f2:	6f 5f       	subi	r22, 0xFF	; 255
    16f4:	7f 4f       	sbci	r23, 0xFF	; 255
    16f6:	8f 4f       	sbci	r24, 0xFF	; 255
    16f8:	9f 4f       	sbci	r25, 0xFF	; 255
    16fa:	08 95       	ret

000016fc <__fp_split3>:
    16fc:	57 fd       	sbrc	r21, 7
    16fe:	90 58       	subi	r25, 0x80	; 128
    1700:	44 0f       	add	r20, r20
    1702:	55 1f       	adc	r21, r21
    1704:	59 f0       	breq	.+22     	; 0x171c <__fp_splitA+0x10>
    1706:	5f 3f       	cpi	r21, 0xFF	; 255
    1708:	71 f0       	breq	.+28     	; 0x1726 <__fp_splitA+0x1a>
    170a:	47 95       	ror	r20

0000170c <__fp_splitA>:
    170c:	88 0f       	add	r24, r24
    170e:	97 fb       	bst	r25, 7
    1710:	99 1f       	adc	r25, r25
    1712:	61 f0       	breq	.+24     	; 0x172c <__fp_splitA+0x20>
    1714:	9f 3f       	cpi	r25, 0xFF	; 255
    1716:	79 f0       	breq	.+30     	; 0x1736 <__fp_splitA+0x2a>
    1718:	87 95       	ror	r24
    171a:	08 95       	ret
    171c:	12 16       	cp	r1, r18
    171e:	13 06       	cpc	r1, r19
    1720:	14 06       	cpc	r1, r20
    1722:	55 1f       	adc	r21, r21
    1724:	f2 cf       	rjmp	.-28     	; 0x170a <__fp_split3+0xe>
    1726:	46 95       	lsr	r20
    1728:	f1 df       	rcall	.-30     	; 0x170c <__fp_splitA>
    172a:	08 c0       	rjmp	.+16     	; 0x173c <__fp_splitA+0x30>
    172c:	16 16       	cp	r1, r22
    172e:	17 06       	cpc	r1, r23
    1730:	18 06       	cpc	r1, r24
    1732:	99 1f       	adc	r25, r25
    1734:	f1 cf       	rjmp	.-30     	; 0x1718 <__fp_splitA+0xc>
    1736:	86 95       	lsr	r24
    1738:	71 05       	cpc	r23, r1
    173a:	61 05       	cpc	r22, r1
    173c:	08 94       	sec
    173e:	08 95       	ret

00001740 <__fp_zero>:
    1740:	e8 94       	clt

00001742 <__fp_szero>:
    1742:	bb 27       	eor	r27, r27
    1744:	66 27       	eor	r22, r22
    1746:	77 27       	eor	r23, r23
    1748:	cb 01       	movw	r24, r22
    174a:	97 f9       	bld	r25, 7
    174c:	08 95       	ret

0000174e <__mulsf3>:
    174e:	0b d0       	rcall	.+22     	; 0x1766 <__mulsf3x>
    1750:	c4 cf       	rjmp	.-120    	; 0x16da <__fp_round>
    1752:	b5 df       	rcall	.-150    	; 0x16be <__fp_pscA>
    1754:	28 f0       	brcs	.+10     	; 0x1760 <__mulsf3+0x12>
    1756:	ba df       	rcall	.-140    	; 0x16cc <__fp_pscB>
    1758:	18 f0       	brcs	.+6      	; 0x1760 <__mulsf3+0x12>
    175a:	95 23       	and	r25, r21
    175c:	09 f0       	breq	.+2      	; 0x1760 <__mulsf3+0x12>
    175e:	a6 cf       	rjmp	.-180    	; 0x16ac <__fp_inf>
    1760:	ab cf       	rjmp	.-170    	; 0x16b8 <__fp_nan>
    1762:	11 24       	eor	r1, r1
    1764:	ee cf       	rjmp	.-36     	; 0x1742 <__fp_szero>

00001766 <__mulsf3x>:
    1766:	ca df       	rcall	.-108    	; 0x16fc <__fp_split3>
    1768:	a0 f3       	brcs	.-24     	; 0x1752 <__mulsf3+0x4>

0000176a <__mulsf3_pse>:
    176a:	95 9f       	mul	r25, r21
    176c:	d1 f3       	breq	.-12     	; 0x1762 <__mulsf3+0x14>
    176e:	95 0f       	add	r25, r21
    1770:	50 e0       	ldi	r21, 0x00	; 0
    1772:	55 1f       	adc	r21, r21
    1774:	62 9f       	mul	r22, r18
    1776:	f0 01       	movw	r30, r0
    1778:	72 9f       	mul	r23, r18
    177a:	bb 27       	eor	r27, r27
    177c:	f0 0d       	add	r31, r0
    177e:	b1 1d       	adc	r27, r1
    1780:	63 9f       	mul	r22, r19
    1782:	aa 27       	eor	r26, r26
    1784:	f0 0d       	add	r31, r0
    1786:	b1 1d       	adc	r27, r1
    1788:	aa 1f       	adc	r26, r26
    178a:	64 9f       	mul	r22, r20
    178c:	66 27       	eor	r22, r22
    178e:	b0 0d       	add	r27, r0
    1790:	a1 1d       	adc	r26, r1
    1792:	66 1f       	adc	r22, r22
    1794:	82 9f       	mul	r24, r18
    1796:	22 27       	eor	r18, r18
    1798:	b0 0d       	add	r27, r0
    179a:	a1 1d       	adc	r26, r1
    179c:	62 1f       	adc	r22, r18
    179e:	73 9f       	mul	r23, r19
    17a0:	b0 0d       	add	r27, r0
    17a2:	a1 1d       	adc	r26, r1
    17a4:	62 1f       	adc	r22, r18
    17a6:	83 9f       	mul	r24, r19
    17a8:	a0 0d       	add	r26, r0
    17aa:	61 1d       	adc	r22, r1
    17ac:	22 1f       	adc	r18, r18
    17ae:	74 9f       	mul	r23, r20
    17b0:	33 27       	eor	r19, r19
    17b2:	a0 0d       	add	r26, r0
    17b4:	61 1d       	adc	r22, r1
    17b6:	23 1f       	adc	r18, r19
    17b8:	84 9f       	mul	r24, r20
    17ba:	60 0d       	add	r22, r0
    17bc:	21 1d       	adc	r18, r1
    17be:	82 2f       	mov	r24, r18
    17c0:	76 2f       	mov	r23, r22
    17c2:	6a 2f       	mov	r22, r26
    17c4:	11 24       	eor	r1, r1
    17c6:	9f 57       	subi	r25, 0x7F	; 127
    17c8:	50 40       	sbci	r21, 0x00	; 0
    17ca:	8a f0       	brmi	.+34     	; 0x17ee <__mulsf3_pse+0x84>
    17cc:	e1 f0       	breq	.+56     	; 0x1806 <__mulsf3_pse+0x9c>
    17ce:	88 23       	and	r24, r24
    17d0:	4a f0       	brmi	.+18     	; 0x17e4 <__mulsf3_pse+0x7a>
    17d2:	ee 0f       	add	r30, r30
    17d4:	ff 1f       	adc	r31, r31
    17d6:	bb 1f       	adc	r27, r27
    17d8:	66 1f       	adc	r22, r22
    17da:	77 1f       	adc	r23, r23
    17dc:	88 1f       	adc	r24, r24
    17de:	91 50       	subi	r25, 0x01	; 1
    17e0:	50 40       	sbci	r21, 0x00	; 0
    17e2:	a9 f7       	brne	.-22     	; 0x17ce <__mulsf3_pse+0x64>
    17e4:	9e 3f       	cpi	r25, 0xFE	; 254
    17e6:	51 05       	cpc	r21, r1
    17e8:	70 f0       	brcs	.+28     	; 0x1806 <__mulsf3_pse+0x9c>
    17ea:	60 cf       	rjmp	.-320    	; 0x16ac <__fp_inf>
    17ec:	aa cf       	rjmp	.-172    	; 0x1742 <__fp_szero>
    17ee:	5f 3f       	cpi	r21, 0xFF	; 255
    17f0:	ec f3       	brlt	.-6      	; 0x17ec <__mulsf3_pse+0x82>
    17f2:	98 3e       	cpi	r25, 0xE8	; 232
    17f4:	dc f3       	brlt	.-10     	; 0x17ec <__mulsf3_pse+0x82>
    17f6:	86 95       	lsr	r24
    17f8:	77 95       	ror	r23
    17fa:	67 95       	ror	r22
    17fc:	b7 95       	ror	r27
    17fe:	f7 95       	ror	r31
    1800:	e7 95       	ror	r30
    1802:	9f 5f       	subi	r25, 0xFF	; 255
    1804:	c1 f7       	brne	.-16     	; 0x17f6 <__mulsf3_pse+0x8c>
    1806:	fe 2b       	or	r31, r30
    1808:	88 0f       	add	r24, r24
    180a:	91 1d       	adc	r25, r1
    180c:	96 95       	lsr	r25
    180e:	87 95       	ror	r24
    1810:	97 f9       	bld	r25, 7
    1812:	08 95       	ret
    1814:	11 f4       	brne	.+4      	; 0x181a <__mulsf3_pse+0xb0>
    1816:	0e f4       	brtc	.+2      	; 0x181a <__mulsf3_pse+0xb0>
    1818:	4f cf       	rjmp	.-354    	; 0x16b8 <__fp_nan>
    181a:	3e c0       	rjmp	.+124    	; 0x1898 <__fp_mpack>

0000181c <sqrt>:
    181c:	77 df       	rcall	.-274    	; 0x170c <__fp_splitA>
    181e:	d0 f3       	brcs	.-12     	; 0x1814 <__mulsf3_pse+0xaa>
    1820:	99 23       	and	r25, r25
    1822:	d9 f3       	breq	.-10     	; 0x181a <__mulsf3_pse+0xb0>
    1824:	ce f3       	brts	.-14     	; 0x1818 <__mulsf3_pse+0xae>
    1826:	9f 57       	subi	r25, 0x7F	; 127
    1828:	55 0b       	sbc	r21, r21
    182a:	87 ff       	sbrs	r24, 7
    182c:	43 d0       	rcall	.+134    	; 0x18b4 <__fp_norm2>
    182e:	00 24       	eor	r0, r0
    1830:	a0 e6       	ldi	r26, 0x60	; 96
    1832:	40 ea       	ldi	r20, 0xA0	; 160
    1834:	90 01       	movw	r18, r0
    1836:	80 58       	subi	r24, 0x80	; 128
    1838:	56 95       	lsr	r21
    183a:	97 95       	ror	r25
    183c:	28 f4       	brcc	.+10     	; 0x1848 <sqrt+0x2c>
    183e:	80 5c       	subi	r24, 0xC0	; 192
    1840:	66 0f       	add	r22, r22
    1842:	77 1f       	adc	r23, r23
    1844:	88 1f       	adc	r24, r24
    1846:	20 f0       	brcs	.+8      	; 0x1850 <sqrt+0x34>
    1848:	26 17       	cp	r18, r22
    184a:	37 07       	cpc	r19, r23
    184c:	48 07       	cpc	r20, r24
    184e:	30 f4       	brcc	.+12     	; 0x185c <sqrt+0x40>
    1850:	62 1b       	sub	r22, r18
    1852:	73 0b       	sbc	r23, r19
    1854:	84 0b       	sbc	r24, r20
    1856:	20 29       	or	r18, r0
    1858:	31 29       	or	r19, r1
    185a:	4a 2b       	or	r20, r26
    185c:	a6 95       	lsr	r26
    185e:	17 94       	ror	r1
    1860:	07 94       	ror	r0
    1862:	20 25       	eor	r18, r0
    1864:	31 25       	eor	r19, r1
    1866:	4a 27       	eor	r20, r26
    1868:	58 f7       	brcc	.-42     	; 0x1840 <sqrt+0x24>
    186a:	66 0f       	add	r22, r22
    186c:	77 1f       	adc	r23, r23
    186e:	88 1f       	adc	r24, r24
    1870:	20 f0       	brcs	.+8      	; 0x187a <sqrt+0x5e>
    1872:	26 17       	cp	r18, r22
    1874:	37 07       	cpc	r19, r23
    1876:	48 07       	cpc	r20, r24
    1878:	30 f4       	brcc	.+12     	; 0x1886 <sqrt+0x6a>
    187a:	62 0b       	sbc	r22, r18
    187c:	73 0b       	sbc	r23, r19
    187e:	84 0b       	sbc	r24, r20
    1880:	20 0d       	add	r18, r0
    1882:	31 1d       	adc	r19, r1
    1884:	41 1d       	adc	r20, r1
    1886:	a0 95       	com	r26
    1888:	81 f7       	brne	.-32     	; 0x186a <sqrt+0x4e>
    188a:	b9 01       	movw	r22, r18
    188c:	84 2f       	mov	r24, r20
    188e:	91 58       	subi	r25, 0x81	; 129
    1890:	88 0f       	add	r24, r24
    1892:	96 95       	lsr	r25
    1894:	87 95       	ror	r24
    1896:	08 95       	ret

00001898 <__fp_mpack>:
    1898:	9f 3f       	cpi	r25, 0xFF	; 255
    189a:	31 f0       	breq	.+12     	; 0x18a8 <__fp_mpack_finite+0xc>

0000189c <__fp_mpack_finite>:
    189c:	91 50       	subi	r25, 0x01	; 1
    189e:	20 f4       	brcc	.+8      	; 0x18a8 <__fp_mpack_finite+0xc>
    18a0:	87 95       	ror	r24
    18a2:	77 95       	ror	r23
    18a4:	67 95       	ror	r22
    18a6:	b7 95       	ror	r27
    18a8:	88 0f       	add	r24, r24
    18aa:	91 1d       	adc	r25, r1
    18ac:	96 95       	lsr	r25
    18ae:	87 95       	ror	r24
    18b0:	97 f9       	bld	r25, 7
    18b2:	08 95       	ret

000018b4 <__fp_norm2>:
    18b4:	91 50       	subi	r25, 0x01	; 1
    18b6:	50 40       	sbci	r21, 0x00	; 0
    18b8:	66 0f       	add	r22, r22
    18ba:	77 1f       	adc	r23, r23
    18bc:	88 1f       	adc	r24, r24
    18be:	d2 f7       	brpl	.-12     	; 0x18b4 <__fp_norm2>
    18c0:	08 95       	ret

000018c2 <__divmodhi4>:
    18c2:	97 fb       	bst	r25, 7
    18c4:	09 2e       	mov	r0, r25
    18c6:	07 26       	eor	r0, r23
    18c8:	0a d0       	rcall	.+20     	; 0x18de <__divmodhi4_neg1>
    18ca:	77 fd       	sbrc	r23, 7
    18cc:	04 d0       	rcall	.+8      	; 0x18d6 <__divmodhi4_neg2>
    18ce:	5e d0       	rcall	.+188    	; 0x198c <__udivmodhi4>
    18d0:	06 d0       	rcall	.+12     	; 0x18de <__divmodhi4_neg1>
    18d2:	00 20       	and	r0, r0
    18d4:	1a f4       	brpl	.+6      	; 0x18dc <__divmodhi4_exit>

000018d6 <__divmodhi4_neg2>:
    18d6:	70 95       	com	r23
    18d8:	61 95       	neg	r22
    18da:	7f 4f       	sbci	r23, 0xFF	; 255

000018dc <__divmodhi4_exit>:
    18dc:	08 95       	ret

000018de <__divmodhi4_neg1>:
    18de:	f6 f7       	brtc	.-4      	; 0x18dc <__divmodhi4_exit>
    18e0:	90 95       	com	r25
    18e2:	81 95       	neg	r24
    18e4:	9f 4f       	sbci	r25, 0xFF	; 255
    18e6:	08 95       	ret

000018e8 <__divmodsi4>:
    18e8:	97 fb       	bst	r25, 7
    18ea:	09 2e       	mov	r0, r25
    18ec:	05 26       	eor	r0, r21
    18ee:	0e d0       	rcall	.+28     	; 0x190c <__divmodsi4_neg1>
    18f0:	57 fd       	sbrc	r21, 7
    18f2:	04 d0       	rcall	.+8      	; 0x18fc <__divmodsi4_neg2>
    18f4:	5f d0       	rcall	.+190    	; 0x19b4 <__udivmodsi4>
    18f6:	0a d0       	rcall	.+20     	; 0x190c <__divmodsi4_neg1>
    18f8:	00 1c       	adc	r0, r0
    18fa:	38 f4       	brcc	.+14     	; 0x190a <__divmodsi4_exit>

000018fc <__divmodsi4_neg2>:
    18fc:	50 95       	com	r21
    18fe:	40 95       	com	r20
    1900:	30 95       	com	r19
    1902:	21 95       	neg	r18
    1904:	3f 4f       	sbci	r19, 0xFF	; 255
    1906:	4f 4f       	sbci	r20, 0xFF	; 255
    1908:	5f 4f       	sbci	r21, 0xFF	; 255

0000190a <__divmodsi4_exit>:
    190a:	08 95       	ret

0000190c <__divmodsi4_neg1>:
    190c:	f6 f7       	brtc	.-4      	; 0x190a <__divmodsi4_exit>
    190e:	90 95       	com	r25
    1910:	80 95       	com	r24
    1912:	70 95       	com	r23
    1914:	61 95       	neg	r22
    1916:	7f 4f       	sbci	r23, 0xFF	; 255
    1918:	8f 4f       	sbci	r24, 0xFF	; 255
    191a:	9f 4f       	sbci	r25, 0xFF	; 255
    191c:	08 95       	ret

0000191e <__prologue_saves__>:
    191e:	2f 92       	push	r2
    1920:	3f 92       	push	r3
    1922:	4f 92       	push	r4
    1924:	5f 92       	push	r5
    1926:	6f 92       	push	r6
    1928:	7f 92       	push	r7
    192a:	8f 92       	push	r8
    192c:	9f 92       	push	r9
    192e:	af 92       	push	r10
    1930:	bf 92       	push	r11
    1932:	cf 92       	push	r12
    1934:	df 92       	push	r13
    1936:	ef 92       	push	r14
    1938:	ff 92       	push	r15
    193a:	0f 93       	push	r16
    193c:	1f 93       	push	r17
    193e:	cf 93       	push	r28
    1940:	df 93       	push	r29
    1942:	cd b7       	in	r28, 0x3d	; 61
    1944:	de b7       	in	r29, 0x3e	; 62
    1946:	ca 1b       	sub	r28, r26
    1948:	db 0b       	sbc	r29, r27
    194a:	0f b6       	in	r0, 0x3f	; 63
    194c:	f8 94       	cli
    194e:	de bf       	out	0x3e, r29	; 62
    1950:	0f be       	out	0x3f, r0	; 63
    1952:	cd bf       	out	0x3d, r28	; 61
    1954:	09 94       	ijmp

00001956 <__epilogue_restores__>:
    1956:	2a 88       	ldd	r2, Y+18	; 0x12
    1958:	39 88       	ldd	r3, Y+17	; 0x11
    195a:	48 88       	ldd	r4, Y+16	; 0x10
    195c:	5f 84       	ldd	r5, Y+15	; 0x0f
    195e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1960:	7d 84       	ldd	r7, Y+13	; 0x0d
    1962:	8c 84       	ldd	r8, Y+12	; 0x0c
    1964:	9b 84       	ldd	r9, Y+11	; 0x0b
    1966:	aa 84       	ldd	r10, Y+10	; 0x0a
    1968:	b9 84       	ldd	r11, Y+9	; 0x09
    196a:	c8 84       	ldd	r12, Y+8	; 0x08
    196c:	df 80       	ldd	r13, Y+7	; 0x07
    196e:	ee 80       	ldd	r14, Y+6	; 0x06
    1970:	fd 80       	ldd	r15, Y+5	; 0x05
    1972:	0c 81       	ldd	r16, Y+4	; 0x04
    1974:	1b 81       	ldd	r17, Y+3	; 0x03
    1976:	aa 81       	ldd	r26, Y+2	; 0x02
    1978:	b9 81       	ldd	r27, Y+1	; 0x01
    197a:	ce 0f       	add	r28, r30
    197c:	d1 1d       	adc	r29, r1
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	f8 94       	cli
    1982:	de bf       	out	0x3e, r29	; 62
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	cd bf       	out	0x3d, r28	; 61
    1988:	ed 01       	movw	r28, r26
    198a:	08 95       	ret

0000198c <__udivmodhi4>:
    198c:	aa 1b       	sub	r26, r26
    198e:	bb 1b       	sub	r27, r27
    1990:	51 e1       	ldi	r21, 0x11	; 17
    1992:	07 c0       	rjmp	.+14     	; 0x19a2 <__udivmodhi4_ep>

00001994 <__udivmodhi4_loop>:
    1994:	aa 1f       	adc	r26, r26
    1996:	bb 1f       	adc	r27, r27
    1998:	a6 17       	cp	r26, r22
    199a:	b7 07       	cpc	r27, r23
    199c:	10 f0       	brcs	.+4      	; 0x19a2 <__udivmodhi4_ep>
    199e:	a6 1b       	sub	r26, r22
    19a0:	b7 0b       	sbc	r27, r23

000019a2 <__udivmodhi4_ep>:
    19a2:	88 1f       	adc	r24, r24
    19a4:	99 1f       	adc	r25, r25
    19a6:	5a 95       	dec	r21
    19a8:	a9 f7       	brne	.-22     	; 0x1994 <__udivmodhi4_loop>
    19aa:	80 95       	com	r24
    19ac:	90 95       	com	r25
    19ae:	bc 01       	movw	r22, r24
    19b0:	cd 01       	movw	r24, r26
    19b2:	08 95       	ret

000019b4 <__udivmodsi4>:
    19b4:	a1 e2       	ldi	r26, 0x21	; 33
    19b6:	1a 2e       	mov	r1, r26
    19b8:	aa 1b       	sub	r26, r26
    19ba:	bb 1b       	sub	r27, r27
    19bc:	fd 01       	movw	r30, r26
    19be:	0d c0       	rjmp	.+26     	; 0x19da <__udivmodsi4_ep>

000019c0 <__udivmodsi4_loop>:
    19c0:	aa 1f       	adc	r26, r26
    19c2:	bb 1f       	adc	r27, r27
    19c4:	ee 1f       	adc	r30, r30
    19c6:	ff 1f       	adc	r31, r31
    19c8:	a2 17       	cp	r26, r18
    19ca:	b3 07       	cpc	r27, r19
    19cc:	e4 07       	cpc	r30, r20
    19ce:	f5 07       	cpc	r31, r21
    19d0:	20 f0       	brcs	.+8      	; 0x19da <__udivmodsi4_ep>
    19d2:	a2 1b       	sub	r26, r18
    19d4:	b3 0b       	sbc	r27, r19
    19d6:	e4 0b       	sbc	r30, r20
    19d8:	f5 0b       	sbc	r31, r21

000019da <__udivmodsi4_ep>:
    19da:	66 1f       	adc	r22, r22
    19dc:	77 1f       	adc	r23, r23
    19de:	88 1f       	adc	r24, r24
    19e0:	99 1f       	adc	r25, r25
    19e2:	1a 94       	dec	r1
    19e4:	69 f7       	brne	.-38     	; 0x19c0 <__udivmodsi4_loop>
    19e6:	60 95       	com	r22
    19e8:	70 95       	com	r23
    19ea:	80 95       	com	r24
    19ec:	90 95       	com	r25
    19ee:	9b 01       	movw	r18, r22
    19f0:	ac 01       	movw	r20, r24
    19f2:	bd 01       	movw	r22, r26
    19f4:	cf 01       	movw	r24, r30
    19f6:	08 95       	ret

000019f8 <__ftoa_engine>:
    19f8:	28 30       	cpi	r18, 0x08	; 8
    19fa:	08 f0       	brcs	.+2      	; 0x19fe <__ftoa_engine+0x6>
    19fc:	27 e0       	ldi	r18, 0x07	; 7
    19fe:	33 27       	eor	r19, r19
    1a00:	da 01       	movw	r26, r20
    1a02:	99 0f       	add	r25, r25
    1a04:	31 1d       	adc	r19, r1
    1a06:	87 fd       	sbrc	r24, 7
    1a08:	91 60       	ori	r25, 0x01	; 1
    1a0a:	00 96       	adiw	r24, 0x00	; 0
    1a0c:	61 05       	cpc	r22, r1
    1a0e:	71 05       	cpc	r23, r1
    1a10:	39 f4       	brne	.+14     	; 0x1a20 <__ftoa_engine+0x28>
    1a12:	32 60       	ori	r19, 0x02	; 2
    1a14:	2e 5f       	subi	r18, 0xFE	; 254
    1a16:	3d 93       	st	X+, r19
    1a18:	30 e3       	ldi	r19, 0x30	; 48
    1a1a:	2a 95       	dec	r18
    1a1c:	e1 f7       	brne	.-8      	; 0x1a16 <__ftoa_engine+0x1e>
    1a1e:	08 95       	ret
    1a20:	9f 3f       	cpi	r25, 0xFF	; 255
    1a22:	30 f0       	brcs	.+12     	; 0x1a30 <__ftoa_engine+0x38>
    1a24:	80 38       	cpi	r24, 0x80	; 128
    1a26:	71 05       	cpc	r23, r1
    1a28:	61 05       	cpc	r22, r1
    1a2a:	09 f0       	breq	.+2      	; 0x1a2e <__ftoa_engine+0x36>
    1a2c:	3c 5f       	subi	r19, 0xFC	; 252
    1a2e:	3c 5f       	subi	r19, 0xFC	; 252
    1a30:	3d 93       	st	X+, r19
    1a32:	91 30       	cpi	r25, 0x01	; 1
    1a34:	08 f0       	brcs	.+2      	; 0x1a38 <__ftoa_engine+0x40>
    1a36:	80 68       	ori	r24, 0x80	; 128
    1a38:	91 1d       	adc	r25, r1
    1a3a:	df 93       	push	r29
    1a3c:	cf 93       	push	r28
    1a3e:	1f 93       	push	r17
    1a40:	0f 93       	push	r16
    1a42:	ff 92       	push	r15
    1a44:	ef 92       	push	r14
    1a46:	19 2f       	mov	r17, r25
    1a48:	98 7f       	andi	r25, 0xF8	; 248
    1a4a:	96 95       	lsr	r25
    1a4c:	e9 2f       	mov	r30, r25
    1a4e:	96 95       	lsr	r25
    1a50:	96 95       	lsr	r25
    1a52:	e9 0f       	add	r30, r25
    1a54:	ff 27       	eor	r31, r31
    1a56:	e6 53       	subi	r30, 0x36	; 54
    1a58:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5a:	99 27       	eor	r25, r25
    1a5c:	33 27       	eor	r19, r19
    1a5e:	ee 24       	eor	r14, r14
    1a60:	ff 24       	eor	r15, r15
    1a62:	a7 01       	movw	r20, r14
    1a64:	e7 01       	movw	r28, r14
    1a66:	05 90       	lpm	r0, Z+
    1a68:	08 94       	sec
    1a6a:	07 94       	ror	r0
    1a6c:	28 f4       	brcc	.+10     	; 0x1a78 <__ftoa_engine+0x80>
    1a6e:	36 0f       	add	r19, r22
    1a70:	e7 1e       	adc	r14, r23
    1a72:	f8 1e       	adc	r15, r24
    1a74:	49 1f       	adc	r20, r25
    1a76:	51 1d       	adc	r21, r1
    1a78:	66 0f       	add	r22, r22
    1a7a:	77 1f       	adc	r23, r23
    1a7c:	88 1f       	adc	r24, r24
    1a7e:	99 1f       	adc	r25, r25
    1a80:	06 94       	lsr	r0
    1a82:	a1 f7       	brne	.-24     	; 0x1a6c <__ftoa_engine+0x74>
    1a84:	05 90       	lpm	r0, Z+
    1a86:	07 94       	ror	r0
    1a88:	28 f4       	brcc	.+10     	; 0x1a94 <__ftoa_engine+0x9c>
    1a8a:	e7 0e       	add	r14, r23
    1a8c:	f8 1e       	adc	r15, r24
    1a8e:	49 1f       	adc	r20, r25
    1a90:	56 1f       	adc	r21, r22
    1a92:	c1 1d       	adc	r28, r1
    1a94:	77 0f       	add	r23, r23
    1a96:	88 1f       	adc	r24, r24
    1a98:	99 1f       	adc	r25, r25
    1a9a:	66 1f       	adc	r22, r22
    1a9c:	06 94       	lsr	r0
    1a9e:	a1 f7       	brne	.-24     	; 0x1a88 <__ftoa_engine+0x90>
    1aa0:	05 90       	lpm	r0, Z+
    1aa2:	07 94       	ror	r0
    1aa4:	28 f4       	brcc	.+10     	; 0x1ab0 <__ftoa_engine+0xb8>
    1aa6:	f8 0e       	add	r15, r24
    1aa8:	49 1f       	adc	r20, r25
    1aaa:	56 1f       	adc	r21, r22
    1aac:	c7 1f       	adc	r28, r23
    1aae:	d1 1d       	adc	r29, r1
    1ab0:	88 0f       	add	r24, r24
    1ab2:	99 1f       	adc	r25, r25
    1ab4:	66 1f       	adc	r22, r22
    1ab6:	77 1f       	adc	r23, r23
    1ab8:	06 94       	lsr	r0
    1aba:	a1 f7       	brne	.-24     	; 0x1aa4 <__ftoa_engine+0xac>
    1abc:	05 90       	lpm	r0, Z+
    1abe:	07 94       	ror	r0
    1ac0:	20 f4       	brcc	.+8      	; 0x1aca <__ftoa_engine+0xd2>
    1ac2:	49 0f       	add	r20, r25
    1ac4:	56 1f       	adc	r21, r22
    1ac6:	c7 1f       	adc	r28, r23
    1ac8:	d8 1f       	adc	r29, r24
    1aca:	99 0f       	add	r25, r25
    1acc:	66 1f       	adc	r22, r22
    1ace:	77 1f       	adc	r23, r23
    1ad0:	88 1f       	adc	r24, r24
    1ad2:	06 94       	lsr	r0
    1ad4:	a9 f7       	brne	.-22     	; 0x1ac0 <__ftoa_engine+0xc8>
    1ad6:	84 91       	lpm	r24, Z+
    1ad8:	10 95       	com	r17
    1ada:	17 70       	andi	r17, 0x07	; 7
    1adc:	41 f0       	breq	.+16     	; 0x1aee <__ftoa_engine+0xf6>
    1ade:	d6 95       	lsr	r29
    1ae0:	c7 95       	ror	r28
    1ae2:	57 95       	ror	r21
    1ae4:	47 95       	ror	r20
    1ae6:	f7 94       	ror	r15
    1ae8:	e7 94       	ror	r14
    1aea:	1a 95       	dec	r17
    1aec:	c1 f7       	brne	.-16     	; 0x1ade <__ftoa_engine+0xe6>
    1aee:	e0 e7       	ldi	r30, 0x70	; 112
    1af0:	f0 e0       	ldi	r31, 0x00	; 0
    1af2:	68 94       	set
    1af4:	15 90       	lpm	r1, Z+
    1af6:	15 91       	lpm	r17, Z+
    1af8:	35 91       	lpm	r19, Z+
    1afa:	65 91       	lpm	r22, Z+
    1afc:	95 91       	lpm	r25, Z+
    1afe:	05 90       	lpm	r0, Z+
    1b00:	7f e2       	ldi	r23, 0x2F	; 47
    1b02:	73 95       	inc	r23
    1b04:	e1 18       	sub	r14, r1
    1b06:	f1 0a       	sbc	r15, r17
    1b08:	43 0b       	sbc	r20, r19
    1b0a:	56 0b       	sbc	r21, r22
    1b0c:	c9 0b       	sbc	r28, r25
    1b0e:	d0 09       	sbc	r29, r0
    1b10:	c0 f7       	brcc	.-16     	; 0x1b02 <__ftoa_engine+0x10a>
    1b12:	e1 0c       	add	r14, r1
    1b14:	f1 1e       	adc	r15, r17
    1b16:	43 1f       	adc	r20, r19
    1b18:	56 1f       	adc	r21, r22
    1b1a:	c9 1f       	adc	r28, r25
    1b1c:	d0 1d       	adc	r29, r0
    1b1e:	7e f4       	brtc	.+30     	; 0x1b3e <__ftoa_engine+0x146>
    1b20:	70 33       	cpi	r23, 0x30	; 48
    1b22:	11 f4       	brne	.+4      	; 0x1b28 <__ftoa_engine+0x130>
    1b24:	8a 95       	dec	r24
    1b26:	e6 cf       	rjmp	.-52     	; 0x1af4 <__ftoa_engine+0xfc>
    1b28:	e8 94       	clt
    1b2a:	01 50       	subi	r16, 0x01	; 1
    1b2c:	30 f0       	brcs	.+12     	; 0x1b3a <__ftoa_engine+0x142>
    1b2e:	08 0f       	add	r16, r24
    1b30:	0a f4       	brpl	.+2      	; 0x1b34 <__ftoa_engine+0x13c>
    1b32:	00 27       	eor	r16, r16
    1b34:	02 17       	cp	r16, r18
    1b36:	08 f4       	brcc	.+2      	; 0x1b3a <__ftoa_engine+0x142>
    1b38:	20 2f       	mov	r18, r16
    1b3a:	23 95       	inc	r18
    1b3c:	02 2f       	mov	r16, r18
    1b3e:	7a 33       	cpi	r23, 0x3A	; 58
    1b40:	28 f0       	brcs	.+10     	; 0x1b4c <__ftoa_engine+0x154>
    1b42:	79 e3       	ldi	r23, 0x39	; 57
    1b44:	7d 93       	st	X+, r23
    1b46:	2a 95       	dec	r18
    1b48:	e9 f7       	brne	.-6      	; 0x1b44 <__ftoa_engine+0x14c>
    1b4a:	10 c0       	rjmp	.+32     	; 0x1b6c <__ftoa_engine+0x174>
    1b4c:	7d 93       	st	X+, r23
    1b4e:	2a 95       	dec	r18
    1b50:	89 f6       	brne	.-94     	; 0x1af4 <__ftoa_engine+0xfc>
    1b52:	06 94       	lsr	r0
    1b54:	97 95       	ror	r25
    1b56:	67 95       	ror	r22
    1b58:	37 95       	ror	r19
    1b5a:	17 95       	ror	r17
    1b5c:	17 94       	ror	r1
    1b5e:	e1 18       	sub	r14, r1
    1b60:	f1 0a       	sbc	r15, r17
    1b62:	43 0b       	sbc	r20, r19
    1b64:	56 0b       	sbc	r21, r22
    1b66:	c9 0b       	sbc	r28, r25
    1b68:	d0 09       	sbc	r29, r0
    1b6a:	98 f0       	brcs	.+38     	; 0x1b92 <__ftoa_engine+0x19a>
    1b6c:	23 95       	inc	r18
    1b6e:	7e 91       	ld	r23, -X
    1b70:	73 95       	inc	r23
    1b72:	7a 33       	cpi	r23, 0x3A	; 58
    1b74:	08 f0       	brcs	.+2      	; 0x1b78 <__ftoa_engine+0x180>
    1b76:	70 e3       	ldi	r23, 0x30	; 48
    1b78:	7c 93       	st	X, r23
    1b7a:	20 13       	cpse	r18, r16
    1b7c:	b8 f7       	brcc	.-18     	; 0x1b6c <__ftoa_engine+0x174>
    1b7e:	7e 91       	ld	r23, -X
    1b80:	70 61       	ori	r23, 0x10	; 16
    1b82:	7d 93       	st	X+, r23
    1b84:	30 f0       	brcs	.+12     	; 0x1b92 <__ftoa_engine+0x19a>
    1b86:	83 95       	inc	r24
    1b88:	71 e3       	ldi	r23, 0x31	; 49
    1b8a:	7d 93       	st	X+, r23
    1b8c:	70 e3       	ldi	r23, 0x30	; 48
    1b8e:	2a 95       	dec	r18
    1b90:	e1 f7       	brne	.-8      	; 0x1b8a <__ftoa_engine+0x192>
    1b92:	11 24       	eor	r1, r1
    1b94:	ef 90       	pop	r14
    1b96:	ff 90       	pop	r15
    1b98:	0f 91       	pop	r16
    1b9a:	1f 91       	pop	r17
    1b9c:	cf 91       	pop	r28
    1b9e:	df 91       	pop	r29
    1ba0:	99 27       	eor	r25, r25
    1ba2:	87 fd       	sbrc	r24, 7
    1ba4:	90 95       	com	r25
    1ba6:	08 95       	ret

00001ba8 <strnlen_P>:
    1ba8:	fc 01       	movw	r30, r24
    1baa:	05 90       	lpm	r0, Z+
    1bac:	61 50       	subi	r22, 0x01	; 1
    1bae:	70 40       	sbci	r23, 0x00	; 0
    1bb0:	01 10       	cpse	r0, r1
    1bb2:	d8 f7       	brcc	.-10     	; 0x1baa <strnlen_P+0x2>
    1bb4:	80 95       	com	r24
    1bb6:	90 95       	com	r25
    1bb8:	8e 0f       	add	r24, r30
    1bba:	9f 1f       	adc	r25, r31
    1bbc:	08 95       	ret

00001bbe <strnlen>:
    1bbe:	fc 01       	movw	r30, r24
    1bc0:	61 50       	subi	r22, 0x01	; 1
    1bc2:	70 40       	sbci	r23, 0x00	; 0
    1bc4:	01 90       	ld	r0, Z+
    1bc6:	01 10       	cpse	r0, r1
    1bc8:	d8 f7       	brcc	.-10     	; 0x1bc0 <strnlen+0x2>
    1bca:	80 95       	com	r24
    1bcc:	90 95       	com	r25
    1bce:	8e 0f       	add	r24, r30
    1bd0:	9f 1f       	adc	r25, r31
    1bd2:	08 95       	ret

00001bd4 <fputc>:
    1bd4:	0f 93       	push	r16
    1bd6:	1f 93       	push	r17
    1bd8:	cf 93       	push	r28
    1bda:	df 93       	push	r29
    1bdc:	8c 01       	movw	r16, r24
    1bde:	eb 01       	movw	r28, r22
    1be0:	8b 81       	ldd	r24, Y+3	; 0x03
    1be2:	81 ff       	sbrs	r24, 1
    1be4:	1b c0       	rjmp	.+54     	; 0x1c1c <fputc+0x48>
    1be6:	82 ff       	sbrs	r24, 2
    1be8:	0d c0       	rjmp	.+26     	; 0x1c04 <fputc+0x30>
    1bea:	2e 81       	ldd	r18, Y+6	; 0x06
    1bec:	3f 81       	ldd	r19, Y+7	; 0x07
    1bee:	8c 81       	ldd	r24, Y+4	; 0x04
    1bf0:	9d 81       	ldd	r25, Y+5	; 0x05
    1bf2:	28 17       	cp	r18, r24
    1bf4:	39 07       	cpc	r19, r25
    1bf6:	64 f4       	brge	.+24     	; 0x1c10 <fputc+0x3c>
    1bf8:	e8 81       	ld	r30, Y
    1bfa:	f9 81       	ldd	r31, Y+1	; 0x01
    1bfc:	01 93       	st	Z+, r16
    1bfe:	f9 83       	std	Y+1, r31	; 0x01
    1c00:	e8 83       	st	Y, r30
    1c02:	06 c0       	rjmp	.+12     	; 0x1c10 <fputc+0x3c>
    1c04:	e8 85       	ldd	r30, Y+8	; 0x08
    1c06:	f9 85       	ldd	r31, Y+9	; 0x09
    1c08:	80 2f       	mov	r24, r16
    1c0a:	09 95       	icall
    1c0c:	89 2b       	or	r24, r25
    1c0e:	31 f4       	brne	.+12     	; 0x1c1c <fputc+0x48>
    1c10:	8e 81       	ldd	r24, Y+6	; 0x06
    1c12:	9f 81       	ldd	r25, Y+7	; 0x07
    1c14:	01 96       	adiw	r24, 0x01	; 1
    1c16:	9f 83       	std	Y+7, r25	; 0x07
    1c18:	8e 83       	std	Y+6, r24	; 0x06
    1c1a:	02 c0       	rjmp	.+4      	; 0x1c20 <fputc+0x4c>
    1c1c:	0f ef       	ldi	r16, 0xFF	; 255
    1c1e:	1f ef       	ldi	r17, 0xFF	; 255
    1c20:	c8 01       	movw	r24, r16
    1c22:	df 91       	pop	r29
    1c24:	cf 91       	pop	r28
    1c26:	1f 91       	pop	r17
    1c28:	0f 91       	pop	r16
    1c2a:	08 95       	ret

00001c2c <sprintf>:
    1c2c:	ae e0       	ldi	r26, 0x0E	; 14
    1c2e:	b0 e0       	ldi	r27, 0x00	; 0
    1c30:	ec e1       	ldi	r30, 0x1C	; 28
    1c32:	fe e0       	ldi	r31, 0x0E	; 14
    1c34:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__prologue_saves__+0x1c>
    1c38:	0d 89       	ldd	r16, Y+21	; 0x15
    1c3a:	1e 89       	ldd	r17, Y+22	; 0x16
    1c3c:	86 e0       	ldi	r24, 0x06	; 6
    1c3e:	8c 83       	std	Y+4, r24	; 0x04
    1c40:	1a 83       	std	Y+2, r17	; 0x02
    1c42:	09 83       	std	Y+1, r16	; 0x01
    1c44:	8f ef       	ldi	r24, 0xFF	; 255
    1c46:	9f e7       	ldi	r25, 0x7F	; 127
    1c48:	9e 83       	std	Y+6, r25	; 0x06
    1c4a:	8d 83       	std	Y+5, r24	; 0x05
    1c4c:	9e 01       	movw	r18, r28
    1c4e:	27 5e       	subi	r18, 0xE7	; 231
    1c50:	3f 4f       	sbci	r19, 0xFF	; 255
    1c52:	ce 01       	movw	r24, r28
    1c54:	01 96       	adiw	r24, 0x01	; 1
    1c56:	6f 89       	ldd	r22, Y+23	; 0x17
    1c58:	78 8d       	ldd	r23, Y+24	; 0x18
    1c5a:	a9 01       	movw	r20, r18
    1c5c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vfprintf>
    1c60:	2f 81       	ldd	r18, Y+7	; 0x07
    1c62:	38 85       	ldd	r19, Y+8	; 0x08
    1c64:	02 0f       	add	r16, r18
    1c66:	13 1f       	adc	r17, r19
    1c68:	f8 01       	movw	r30, r16
    1c6a:	10 82       	st	Z, r1
    1c6c:	2e 96       	adiw	r28, 0x0e	; 14
    1c6e:	e4 e0       	ldi	r30, 0x04	; 4
    1c70:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__epilogue_restores__+0x1c>

00001c74 <__ultoa_invert>:
    1c74:	fa 01       	movw	r30, r20
    1c76:	aa 27       	eor	r26, r26
    1c78:	28 30       	cpi	r18, 0x08	; 8
    1c7a:	51 f1       	breq	.+84     	; 0x1cd0 <__ultoa_invert+0x5c>
    1c7c:	20 31       	cpi	r18, 0x10	; 16
    1c7e:	81 f1       	breq	.+96     	; 0x1ce0 <__ultoa_invert+0x6c>
    1c80:	e8 94       	clt
    1c82:	6f 93       	push	r22
    1c84:	6e 7f       	andi	r22, 0xFE	; 254
    1c86:	6e 5f       	subi	r22, 0xFE	; 254
    1c88:	7f 4f       	sbci	r23, 0xFF	; 255
    1c8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8e:	af 4f       	sbci	r26, 0xFF	; 255
    1c90:	b1 e0       	ldi	r27, 0x01	; 1
    1c92:	3e d0       	rcall	.+124    	; 0x1d10 <__ultoa_invert+0x9c>
    1c94:	b4 e0       	ldi	r27, 0x04	; 4
    1c96:	3c d0       	rcall	.+120    	; 0x1d10 <__ultoa_invert+0x9c>
    1c98:	67 0f       	add	r22, r23
    1c9a:	78 1f       	adc	r23, r24
    1c9c:	89 1f       	adc	r24, r25
    1c9e:	9a 1f       	adc	r25, r26
    1ca0:	a1 1d       	adc	r26, r1
    1ca2:	68 0f       	add	r22, r24
    1ca4:	79 1f       	adc	r23, r25
    1ca6:	8a 1f       	adc	r24, r26
    1ca8:	91 1d       	adc	r25, r1
    1caa:	a1 1d       	adc	r26, r1
    1cac:	6a 0f       	add	r22, r26
    1cae:	71 1d       	adc	r23, r1
    1cb0:	81 1d       	adc	r24, r1
    1cb2:	91 1d       	adc	r25, r1
    1cb4:	a1 1d       	adc	r26, r1
    1cb6:	20 d0       	rcall	.+64     	; 0x1cf8 <__ultoa_invert+0x84>
    1cb8:	09 f4       	brne	.+2      	; 0x1cbc <__ultoa_invert+0x48>
    1cba:	68 94       	set
    1cbc:	3f 91       	pop	r19
    1cbe:	2a e0       	ldi	r18, 0x0A	; 10
    1cc0:	26 9f       	mul	r18, r22
    1cc2:	11 24       	eor	r1, r1
    1cc4:	30 19       	sub	r19, r0
    1cc6:	30 5d       	subi	r19, 0xD0	; 208
    1cc8:	31 93       	st	Z+, r19
    1cca:	de f6       	brtc	.-74     	; 0x1c82 <__ultoa_invert+0xe>
    1ccc:	cf 01       	movw	r24, r30
    1cce:	08 95       	ret
    1cd0:	46 2f       	mov	r20, r22
    1cd2:	47 70       	andi	r20, 0x07	; 7
    1cd4:	40 5d       	subi	r20, 0xD0	; 208
    1cd6:	41 93       	st	Z+, r20
    1cd8:	b3 e0       	ldi	r27, 0x03	; 3
    1cda:	0f d0       	rcall	.+30     	; 0x1cfa <__ultoa_invert+0x86>
    1cdc:	c9 f7       	brne	.-14     	; 0x1cd0 <__ultoa_invert+0x5c>
    1cde:	f6 cf       	rjmp	.-20     	; 0x1ccc <__ultoa_invert+0x58>
    1ce0:	46 2f       	mov	r20, r22
    1ce2:	4f 70       	andi	r20, 0x0F	; 15
    1ce4:	40 5d       	subi	r20, 0xD0	; 208
    1ce6:	4a 33       	cpi	r20, 0x3A	; 58
    1ce8:	18 f0       	brcs	.+6      	; 0x1cf0 <__ultoa_invert+0x7c>
    1cea:	49 5d       	subi	r20, 0xD9	; 217
    1cec:	31 fd       	sbrc	r19, 1
    1cee:	40 52       	subi	r20, 0x20	; 32
    1cf0:	41 93       	st	Z+, r20
    1cf2:	02 d0       	rcall	.+4      	; 0x1cf8 <__ultoa_invert+0x84>
    1cf4:	a9 f7       	brne	.-22     	; 0x1ce0 <__ultoa_invert+0x6c>
    1cf6:	ea cf       	rjmp	.-44     	; 0x1ccc <__ultoa_invert+0x58>
    1cf8:	b4 e0       	ldi	r27, 0x04	; 4
    1cfa:	a6 95       	lsr	r26
    1cfc:	97 95       	ror	r25
    1cfe:	87 95       	ror	r24
    1d00:	77 95       	ror	r23
    1d02:	67 95       	ror	r22
    1d04:	ba 95       	dec	r27
    1d06:	c9 f7       	brne	.-14     	; 0x1cfa <__ultoa_invert+0x86>
    1d08:	00 97       	sbiw	r24, 0x00	; 0
    1d0a:	61 05       	cpc	r22, r1
    1d0c:	71 05       	cpc	r23, r1
    1d0e:	08 95       	ret
    1d10:	9b 01       	movw	r18, r22
    1d12:	ac 01       	movw	r20, r24
    1d14:	0a 2e       	mov	r0, r26
    1d16:	06 94       	lsr	r0
    1d18:	57 95       	ror	r21
    1d1a:	47 95       	ror	r20
    1d1c:	37 95       	ror	r19
    1d1e:	27 95       	ror	r18
    1d20:	ba 95       	dec	r27
    1d22:	c9 f7       	brne	.-14     	; 0x1d16 <__ultoa_invert+0xa2>
    1d24:	62 0f       	add	r22, r18
    1d26:	73 1f       	adc	r23, r19
    1d28:	84 1f       	adc	r24, r20
    1d2a:	95 1f       	adc	r25, r21
    1d2c:	a0 1d       	adc	r26, r0
    1d2e:	08 95       	ret

00001d30 <_exit>:
    1d30:	f8 94       	cli

00001d32 <__stop_program>:
    1d32:	ff cf       	rjmp	.-2      	; 0x1d32 <__stop_program>
