
ffr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001a6c  00001b00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800106  00800106  00001b06  2**0
                  ALLOC
  3 .debug_aranges 00000080  00000000  00000000  00001b06  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001ad  00000000  00000000  00001b86  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007e6  00000000  00000000  00001d33  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000393  00000000  00000000  00002519  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000694  00000000  00000000  000028ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000170  00000000  00000000  00002f40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002db  00000000  00000000  000030b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000310  00000000  00000000  0000338b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__vector_7>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 99 02 	jmp	0x532	; 0x532 <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1790>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1788>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec e6       	ldi	r30, 0x6C	; 108
     17e:	fa e1       	ldi	r31, 0x1A	; 26
     180:	02 c0       	rjmp	.+4      	; 0x186 <.do_copy_data_start>

00000182 <.do_copy_data_loop>:
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0

00000186 <.do_copy_data_start>:
     186:	a6 30       	cpi	r26, 0x06	; 6
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <.do_copy_data_loop>

0000018c <__do_clear_bss>:
     18c:	11 e0       	ldi	r17, 0x01	; 1
     18e:	a6 e0       	ldi	r26, 0x06	; 6
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	aa 33       	cpi	r26, 0x3A	; 58
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
     1a0:	0c 94 34 0d 	jmp	0x1a68	; 0x1a68 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <main>:
extern StepperMotor rightMotor;
//unsigned long milliseconds;
//void startTimer(void);

int main(void)
{
     1a8:	cf 92       	push	r12
     1aa:	df 92       	push	r13
     1ac:	ef 92       	push	r14
     1ae:	ff 92       	push	r15
     1b0:	0f 93       	push	r16
     1b2:	1f 93       	push	r17
	setupStepperMotor();
     1b4:	0e 94 ff 01 	call	0x3fe	; 0x3fe <setupStepperMotor>
	USART_init();
     1b8:	0e 94 36 03 	call	0x66c	; 0x66c <USART_init>
	
	setDirection(0, 0);
     1bc:	80 e0       	ldi	r24, 0x00	; 0
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	70 e0       	ldi	r23, 0x00	; 0
     1c4:	0e 94 01 03 	call	0x602	; 0x602 <setDirection>
	straight(4691, 0, 1000, 0, 5000, 1000);	
     1c8:	63 e5       	ldi	r22, 0x53	; 83
     1ca:	72 e1       	ldi	r23, 0x12	; 18
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	40 e0       	ldi	r20, 0x00	; 0
     1d2:	50 e0       	ldi	r21, 0x00	; 0
     1d4:	28 ee       	ldi	r18, 0xE8	; 232
     1d6:	33 e0       	ldi	r19, 0x03	; 3
     1d8:	00 e0       	ldi	r16, 0x00	; 0
     1da:	10 e0       	ldi	r17, 0x00	; 0
     1dc:	f8 e8       	ldi	r31, 0x88	; 136
     1de:	ef 2e       	mov	r14, r31
     1e0:	f3 e1       	ldi	r31, 0x13	; 19
     1e2:	ff 2e       	mov	r15, r31
     1e4:	e8 ee       	ldi	r30, 0xE8	; 232
     1e6:	ce 2e       	mov	r12, r30
     1e8:	e3 e0       	ldi	r30, 0x03	; 3
     1ea:	de 2e       	mov	r13, r30
     1ec:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <straight>
	
	enableDrive(0, 0);
     1f0:	80 e0       	ldi	r24, 0x00	; 0
     1f2:	90 e0       	ldi	r25, 0x00	; 0
     1f4:	60 e0       	ldi	r22, 0x00	; 0
     1f6:	70 e0       	ldi	r23, 0x00	; 0
     1f8:	0e 94 ed 01 	call	0x3da	; 0x3da <enableDrive>
	turnOnTimers(0, 0);
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	60 e0       	ldi	r22, 0x00	; 0
     202:	70 e0       	ldi	r23, 0x00	; 0
     204:	0e 94 22 03 	call	0x644	; 0x644 <turnOnTimers>
     208:	ff cf       	rjmp	.-2      	; 0x208 <main+0x60>

0000020a <accelerateMotorToPoint>:
	//Set Interrupt Timer, since somtimes we need to wait a value larger then 255, modify delayCounter accordingly
	OCR2A = eightBitTimerFix(&rightMotor);	
}

int accelerateMotorToPoint(struct StepperMotor *motor)
{	
     20a:	6f 92       	push	r6
     20c:	7f 92       	push	r7
     20e:	8f 92       	push	r8
     210:	9f 92       	push	r9
     212:	af 92       	push	r10
     214:	bf 92       	push	r11
     216:	cf 92       	push	r12
     218:	df 92       	push	r13
     21a:	ef 92       	push	r14
     21c:	ff 92       	push	r15
     21e:	0f 93       	push	r16
     220:	1f 93       	push	r17
     222:	cf 93       	push	r28
     224:	df 93       	push	r29
     226:	ec 01       	movw	r28, r24
	if(motor->stepAccel == 0)
     228:	8a 85       	ldd	r24, Y+10	; 0x0a
     22a:	9b 85       	ldd	r25, Y+11	; 0x0b
     22c:	89 2b       	or	r24, r25
     22e:	09 f0       	breq	.+2      	; 0x232 <accelerateMotorToPoint+0x28>
     230:	be c0       	rjmp	.+380    	; 0x3ae <accelerateMotorToPoint+0x1a4>
	{
		//Need to Accelerate
		if(motor->currentStepDelay > motor->targetDelay)
     232:	6c 81       	ldd	r22, Y+4	; 0x04
     234:	7d 81       	ldd	r23, Y+5	; 0x05
     236:	8e 81       	ldd	r24, Y+6	; 0x06
     238:	9f 81       	ldd	r25, Y+7	; 0x07
     23a:	2c 85       	ldd	r18, Y+12	; 0x0c
     23c:	3d 85       	ldd	r19, Y+13	; 0x0d
     23e:	4e 85       	ldd	r20, Y+14	; 0x0e
     240:	5f 85       	ldd	r21, Y+15	; 0x0f
     242:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__gesf2>
     246:	18 16       	cp	r1, r24
     248:	0c f0       	brlt	.+2      	; 0x24c <accelerateMotorToPoint+0x42>
     24a:	53 c0       	rjmp	.+166    	; 0x2f2 <accelerateMotorToPoint+0xe8>
		{	
			motor->tempCount++;
     24c:	88 89       	ldd	r24, Y+16	; 0x10
     24e:	99 89       	ldd	r25, Y+17	; 0x11
     250:	01 96       	adiw	r24, 0x01	; 1
     252:	99 8b       	std	Y+17, r25	; 0x11
     254:	88 8b       	std	Y+16, r24	; 0x10
			motor->currentStepDelay -= (float)(2.0 * motor->currentStepDelay) / (float)(4.0 * motor->tempCount + 1);
     256:	6c 80       	ldd	r6, Y+4	; 0x04
     258:	7d 80       	ldd	r7, Y+5	; 0x05
     25a:	8e 80       	ldd	r8, Y+6	; 0x06
     25c:	9f 80       	ldd	r9, Y+7	; 0x07
     25e:	6c 81       	ldd	r22, Y+4	; 0x04
     260:	7d 81       	ldd	r23, Y+5	; 0x05
     262:	8e 81       	ldd	r24, Y+6	; 0x06
     264:	9f 81       	ldd	r25, Y+7	; 0x07
     266:	e8 88       	ldd	r14, Y+16	; 0x10
     268:	f9 88       	ldd	r15, Y+17	; 0x11
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	40 e0       	ldi	r20, 0x00	; 0
     270:	50 ec       	ldi	r21, 0xC0	; 192
     272:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__mulsf3>
     276:	5b 01       	movw	r10, r22
     278:	6c 01       	movw	r12, r24
     27a:	00 27       	eor	r16, r16
     27c:	f7 fc       	sbrc	r15, 7
     27e:	00 95       	com	r16
     280:	10 2f       	mov	r17, r16
     282:	c8 01       	movw	r24, r16
     284:	b7 01       	movw	r22, r14
     286:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     28a:	20 e0       	ldi	r18, 0x00	; 0
     28c:	30 e0       	ldi	r19, 0x00	; 0
     28e:	40 e8       	ldi	r20, 0x80	; 128
     290:	50 e4       	ldi	r21, 0x40	; 64
     292:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__mulsf3>
     296:	20 e0       	ldi	r18, 0x00	; 0
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	40 e8       	ldi	r20, 0x80	; 128
     29c:	5f e3       	ldi	r21, 0x3F	; 63
     29e:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     2a2:	9b 01       	movw	r18, r22
     2a4:	ac 01       	movw	r20, r24
     2a6:	c6 01       	movw	r24, r12
     2a8:	b5 01       	movw	r22, r10
     2aa:	0e 94 1b 09 	call	0x1236	; 0x1236 <__divsf3>
     2ae:	9b 01       	movw	r18, r22
     2b0:	ac 01       	movw	r20, r24
     2b2:	c4 01       	movw	r24, r8
     2b4:	b3 01       	movw	r22, r6
     2b6:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     2ba:	6c 83       	std	Y+4, r22	; 0x04
     2bc:	7d 83       	std	Y+5, r23	; 0x05
     2be:	8e 83       	std	Y+6, r24	; 0x06
     2c0:	9f 83       	std	Y+7, r25	; 0x07
			
			if(motor->currentStepDelay < motor->targetDelay)
     2c2:	6c 81       	ldd	r22, Y+4	; 0x04
     2c4:	7d 81       	ldd	r23, Y+5	; 0x05
     2c6:	8e 81       	ldd	r24, Y+6	; 0x06
     2c8:	9f 81       	ldd	r25, Y+7	; 0x07
     2ca:	2c 85       	ldd	r18, Y+12	; 0x0c
     2cc:	3d 85       	ldd	r19, Y+13	; 0x0d
     2ce:	4e 85       	ldd	r20, Y+14	; 0x0e
     2d0:	5f 85       	ldd	r21, Y+15	; 0x0f
     2d2:	0e 94 17 09 	call	0x122e	; 0x122e <__cmpsf2>
     2d6:	88 23       	and	r24, r24
     2d8:	64 f4       	brge	.+24     	; 0x2f2 <accelerateMotorToPoint+0xe8>
			{	
				motor->currentStepDelay = motor->targetDelay;
     2da:	8c 85       	ldd	r24, Y+12	; 0x0c
     2dc:	9d 85       	ldd	r25, Y+13	; 0x0d
     2de:	ae 85       	ldd	r26, Y+14	; 0x0e
     2e0:	bf 85       	ldd	r27, Y+15	; 0x0f
     2e2:	8c 83       	std	Y+4, r24	; 0x04
     2e4:	9d 83       	std	Y+5, r25	; 0x05
     2e6:	ae 83       	std	Y+6, r26	; 0x06
     2e8:	bf 83       	std	Y+7, r27	; 0x07
				motor->stepAccel = 1 ;
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	9b 87       	std	Y+11, r25	; 0x0b
     2f0:	8a 87       	std	Y+10, r24	; 0x0a
			}
		}
		//Need to decelerate 
		if(motor->currentStepDelay < motor->targetDelay)
     2f2:	6c 81       	ldd	r22, Y+4	; 0x04
     2f4:	7d 81       	ldd	r23, Y+5	; 0x05
     2f6:	8e 81       	ldd	r24, Y+6	; 0x06
     2f8:	9f 81       	ldd	r25, Y+7	; 0x07
     2fa:	2c 85       	ldd	r18, Y+12	; 0x0c
     2fc:	3d 85       	ldd	r19, Y+13	; 0x0d
     2fe:	4e 85       	ldd	r20, Y+14	; 0x0e
     300:	5f 85       	ldd	r21, Y+15	; 0x0f
     302:	0e 94 17 09 	call	0x122e	; 0x122e <__cmpsf2>
     306:	88 23       	and	r24, r24
     308:	0c f0       	brlt	.+2      	; 0x30c <accelerateMotorToPoint+0x102>
     30a:	51 c0       	rjmp	.+162    	; 0x3ae <accelerateMotorToPoint+0x1a4>
		{		
			motor->tempCount--;
     30c:	88 89       	ldd	r24, Y+16	; 0x10
     30e:	99 89       	ldd	r25, Y+17	; 0x11
     310:	01 97       	sbiw	r24, 0x01	; 1
     312:	99 8b       	std	Y+17, r25	; 0x11
     314:	88 8b       	std	Y+16, r24	; 0x10
			motor->currentStepDelay += (float)(2.0 * motor->currentStepDelay) / (float)(4.0 * motor->tempCount + 1);
     316:	6c 80       	ldd	r6, Y+4	; 0x04
     318:	7d 80       	ldd	r7, Y+5	; 0x05
     31a:	8e 80       	ldd	r8, Y+6	; 0x06
     31c:	9f 80       	ldd	r9, Y+7	; 0x07
     31e:	2c 81       	ldd	r18, Y+4	; 0x04
     320:	3d 81       	ldd	r19, Y+5	; 0x05
     322:	4e 81       	ldd	r20, Y+6	; 0x06
     324:	5f 81       	ldd	r21, Y+7	; 0x07
     326:	e8 88       	ldd	r14, Y+16	; 0x10
     328:	f9 88       	ldd	r15, Y+17	; 0x11
     32a:	ca 01       	movw	r24, r20
     32c:	b9 01       	movw	r22, r18
     32e:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     332:	5b 01       	movw	r10, r22
     334:	6c 01       	movw	r12, r24
     336:	00 27       	eor	r16, r16
     338:	f7 fc       	sbrc	r15, 7
     33a:	00 95       	com	r16
     33c:	10 2f       	mov	r17, r16
     33e:	c8 01       	movw	r24, r16
     340:	b7 01       	movw	r22, r14
     342:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     346:	20 e0       	ldi	r18, 0x00	; 0
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	40 e8       	ldi	r20, 0x80	; 128
     34c:	50 e4       	ldi	r21, 0x40	; 64
     34e:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__mulsf3>
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	40 e8       	ldi	r20, 0x80	; 128
     358:	5f e3       	ldi	r21, 0x3F	; 63
     35a:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     35e:	9b 01       	movw	r18, r22
     360:	ac 01       	movw	r20, r24
     362:	c6 01       	movw	r24, r12
     364:	b5 01       	movw	r22, r10
     366:	0e 94 1b 09 	call	0x1236	; 0x1236 <__divsf3>
     36a:	9b 01       	movw	r18, r22
     36c:	ac 01       	movw	r20, r24
     36e:	c4 01       	movw	r24, r8
     370:	b3 01       	movw	r22, r6
     372:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     376:	6c 83       	std	Y+4, r22	; 0x04
     378:	7d 83       	std	Y+5, r23	; 0x05
     37a:	8e 83       	std	Y+6, r24	; 0x06
     37c:	9f 83       	std	Y+7, r25	; 0x07
			
			if(motor->currentStepDelay > motor->targetDelay)
     37e:	6c 81       	ldd	r22, Y+4	; 0x04
     380:	7d 81       	ldd	r23, Y+5	; 0x05
     382:	8e 81       	ldd	r24, Y+6	; 0x06
     384:	9f 81       	ldd	r25, Y+7	; 0x07
     386:	2c 85       	ldd	r18, Y+12	; 0x0c
     388:	3d 85       	ldd	r19, Y+13	; 0x0d
     38a:	4e 85       	ldd	r20, Y+14	; 0x0e
     38c:	5f 85       	ldd	r21, Y+15	; 0x0f
     38e:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__gesf2>
     392:	18 16       	cp	r1, r24
     394:	64 f4       	brge	.+24     	; 0x3ae <accelerateMotorToPoint+0x1a4>
			{
				motor->currentStepDelay = motor->targetDelay;
     396:	8c 85       	ldd	r24, Y+12	; 0x0c
     398:	9d 85       	ldd	r25, Y+13	; 0x0d
     39a:	ae 85       	ldd	r26, Y+14	; 0x0e
     39c:	bf 85       	ldd	r27, Y+15	; 0x0f
     39e:	8c 83       	std	Y+4, r24	; 0x04
     3a0:	9d 83       	std	Y+5, r25	; 0x05
     3a2:	ae 83       	std	Y+6, r26	; 0x06
     3a4:	bf 83       	std	Y+7, r27	; 0x07
				motor->stepAccel = 1;
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	9b 87       	std	Y+11, r25	; 0x0b
     3ac:	8a 87       	std	Y+10, r24	; 0x0a
			}
		}	
	}
	
	return motor->currentStepDelay;
     3ae:	6c 81       	ldd	r22, Y+4	; 0x04
     3b0:	7d 81       	ldd	r23, Y+5	; 0x05
     3b2:	8e 81       	ldd	r24, Y+6	; 0x06
     3b4:	9f 81       	ldd	r25, Y+7	; 0x07
     3b6:	0e 94 83 09 	call	0x1306	; 0x1306 <__fixsfsi>
}
     3ba:	cb 01       	movw	r24, r22
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	1f 91       	pop	r17
     3c2:	0f 91       	pop	r16
     3c4:	ff 90       	pop	r15
     3c6:	ef 90       	pop	r14
     3c8:	df 90       	pop	r13
     3ca:	cf 90       	pop	r12
     3cc:	bf 90       	pop	r11
     3ce:	af 90       	pop	r10
     3d0:	9f 90       	pop	r9
     3d2:	8f 90       	pop	r8
     3d4:	7f 90       	pop	r7
     3d6:	6f 90       	pop	r6
     3d8:	08 95       	ret

000003da <enableDrive>:
	enableDrive(0, 0);	
}

void enableDrive(int left, int right)
{
	if(left == 1)	
     3da:	01 97       	sbiw	r24, 0x01	; 1
     3dc:	11 f4       	brne	.+4      	; 0x3e2 <enableDrive+0x8>
		PORTD &= ~(1 << PD6);	
     3de:	5e 98       	cbi	0x0b, 6	; 11
     3e0:	05 c0       	rjmp	.+10     	; 0x3ec <enableDrive+0x12>
	else if(right == 0)
     3e2:	61 15       	cp	r22, r1
     3e4:	71 05       	cpc	r23, r1
     3e6:	11 f4       	brne	.+4      	; 0x3ec <enableDrive+0x12>
		PORTD |= (1 << PD6);
     3e8:	5e 9a       	sbi	0x0b, 6	; 11
     3ea:	07 c0       	rjmp	.+14     	; 0x3fa <enableDrive+0x20>
	
	if(right == 1)	
     3ec:	61 30       	cpi	r22, 0x01	; 1
     3ee:	71 05       	cpc	r23, r1
     3f0:	11 f4       	brne	.+4      	; 0x3f6 <enableDrive+0x1c>
		PORTD &= ~(1 << PD7);	
     3f2:	5f 98       	cbi	0x0b, 7	; 11
     3f4:	08 95       	ret
	else if(right == 0)	
     3f6:	67 2b       	or	r22, r23
     3f8:	09 f4       	brne	.+2      	; 0x3fc <enableDrive+0x22>
		PORTD |= (1 << PD7);	
     3fa:	5f 9a       	sbi	0x0b, 7	; 11
     3fc:	08 95       	ret

000003fe <setupStepperMotor>:
}

void setupStepperMotor()
{
	//Motor Pins are D2 and D4 on arduino nano
	DDRD |= (1 << PORTD2) | (1 << PORTD3) | (1 << PORTD4);
     3fe:	8a b1       	in	r24, 0x0a	; 10
     400:	8c 61       	ori	r24, 0x1C	; 28
     402:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << PORTB1) | (1 << PORTB0);
     404:	84 b1       	in	r24, 0x04	; 4
     406:	83 60       	ori	r24, 0x03	; 3
     408:	84 b9       	out	0x04, r24	; 4
	//Set to CTC
	TCCR0A = (1 << WGM01);
     40a:	92 e0       	ldi	r25, 0x02	; 2
     40c:	94 bd       	out	0x24, r25	; 36
	TCCR2A = (1 << WGM21);
     40e:	90 93 b0 00 	sts	0x00B0, r25
	
	//Compare Ticks
	OCR0A = 1;
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	87 bd       	out	0x27, r24	; 39
	OCR2A = 1;
     416:	80 93 b3 00 	sts	0x00B3, r24
	
	//Enable Interrupts
	TIMSK0 = (1 << OCIE0A);
     41a:	90 93 6e 00 	sts	0x006E, r25
	TIMSK2 = (1 << OCIE2A);
     41e:	90 93 70 00 	sts	0x0070, r25
	
	//Set Prescalar to 0
	OCR0B = 0;
     422:	18 bc       	out	0x28, r1	; 40
	OCR2B = 0;
     424:	10 92 b4 00 	sts	0x00B4, r1
	
	//Enable Interrupts
	sei(); 
     428:	78 94       	sei
	
	enableDrive(0, 0);	
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	60 e0       	ldi	r22, 0x00	; 0
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	0e 94 ed 01 	call	0x3da	; 0x3da <enableDrive>
}
     436:	08 95       	ret

00000438 <pulseMotor>:
		PORTD |= (1 << PD7);	
}

/* Pulse port and pin for 10 microseconds */
void pulseMotor(volatile uint8_t *port, uint8_t pin)
{
     438:	fc 01       	movw	r30, r24
	//Send Pulse to Motor
	(*port) |= (1 << pin);
     43a:	20 81       	ld	r18, Z
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	02 c0       	rjmp	.+4      	; 0x446 <pulseMotor+0xe>
     442:	88 0f       	add	r24, r24
     444:	99 1f       	adc	r25, r25
     446:	6a 95       	dec	r22
     448:	e2 f7       	brpl	.-8      	; 0x442 <pulseMotor+0xa>
     44a:	28 2b       	or	r18, r24
     44c:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     44e:	95 e3       	ldi	r25, 0x35	; 53
     450:	9a 95       	dec	r25
     452:	f1 f7       	brne	.-4      	; 0x450 <pulseMotor+0x18>
	_delay_us(10);
	(*port) &= ~(1 << pin);
     454:	20 81       	ld	r18, Z
     456:	80 95       	com	r24
     458:	82 23       	and	r24, r18
     45a:	80 83       	st	Z, r24
}
     45c:	08 95       	ret

0000045e <__vector_7>:
	OCR0A = eightBitTimerFix(&leftMotor);	
}

/* RIGHT MOTOR CONTROL */
ISR(TIMER2_COMPA_vect)
{
     45e:	1f 92       	push	r1
     460:	0f 92       	push	r0
     462:	0f b6       	in	r0, 0x3f	; 63
     464:	0f 92       	push	r0
     466:	11 24       	eor	r1, r1
     468:	2f 93       	push	r18
     46a:	3f 93       	push	r19
     46c:	4f 93       	push	r20
     46e:	5f 93       	push	r21
     470:	6f 93       	push	r22
     472:	7f 93       	push	r23
     474:	8f 93       	push	r24
     476:	9f 93       	push	r25
     478:	af 93       	push	r26
     47a:	bf 93       	push	r27
     47c:	ef 93       	push	r30
     47e:	ff 93       	push	r31
	//Set to max initially to prevent the next interrupt cycle from overwriting this one
	OCR2A = 255;
     480:	8f ef       	ldi	r24, 0xFF	; 255
     482:	80 93 b3 00 	sts	0x00B3, r24
	
	//If we are ready to step the motor again
	if(rightMotor.delayCounter == 0)
     486:	80 91 0e 01 	lds	r24, 0x010E
     48a:	90 91 0f 01 	lds	r25, 0x010F
     48e:	89 2b       	or	r24, r25
     490:	01 f5       	brne	.+64     	; 0x4d2 <__vector_7+0x74>
	{
		//Pulse and increment motor
		pulseMotor(&PORTD, PD4);
     492:	8b e2       	ldi	r24, 0x2B	; 43
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	64 e0       	ldi	r22, 0x04	; 4
     498:	0e 94 1c 02 	call	0x438	; 0x438 <pulseMotor>
		rightMotor.stepCount++;
     49c:	80 91 06 01 	lds	r24, 0x0106
     4a0:	90 91 07 01 	lds	r25, 0x0107
     4a4:	a0 91 08 01 	lds	r26, 0x0108
     4a8:	b0 91 09 01 	lds	r27, 0x0109
     4ac:	01 96       	adiw	r24, 0x01	; 1
     4ae:	a1 1d       	adc	r26, r1
     4b0:	b1 1d       	adc	r27, r1
     4b2:	80 93 06 01 	sts	0x0106, r24
     4b6:	90 93 07 01 	sts	0x0107, r25
     4ba:	a0 93 08 01 	sts	0x0108, r26
     4be:	b0 93 09 01 	sts	0x0109, r27
		
		//Calculate the next delay
		rightMotor.delayCounter = accelerateMotorToPoint(&rightMotor);
     4c2:	86 e0       	ldi	r24, 0x06	; 6
     4c4:	91 e0       	ldi	r25, 0x01	; 1
     4c6:	0e 94 05 01 	call	0x20a	; 0x20a <accelerateMotorToPoint>
     4ca:	90 93 0f 01 	sts	0x010F, r25
     4ce:	80 93 0e 01 	sts	0x010E, r24

int eightBitTimerFix(struct StepperMotor *motor)
{
	int returnNum;

	if(motor->delayCounter <= 255)
     4d2:	80 91 0e 01 	lds	r24, 0x010E
     4d6:	90 91 0f 01 	lds	r25, 0x010F
     4da:	8f 3f       	cpi	r24, 0xFF	; 255
     4dc:	91 05       	cpc	r25, r1
     4de:	09 f0       	breq	.+2      	; 0x4e2 <__vector_7+0x84>
     4e0:	4c f4       	brge	.+18     	; 0x4f4 <__vector_7+0x96>
	{
		returnNum = motor->delayCounter;
     4e2:	80 91 0e 01 	lds	r24, 0x010E
     4e6:	90 91 0f 01 	lds	r25, 0x010F
		motor->delayCounter = 0;	
     4ea:	10 92 0f 01 	sts	0x010F, r1
     4ee:	10 92 0e 01 	sts	0x010E, r1
     4f2:	0c c0       	rjmp	.+24     	; 0x50c <__vector_7+0xae>
	}
	else
	{
		motor->delayCounter -= 255;
     4f4:	80 91 0e 01 	lds	r24, 0x010E
     4f8:	90 91 0f 01 	lds	r25, 0x010F
     4fc:	8f 5f       	subi	r24, 0xFF	; 255
     4fe:	90 40       	sbci	r25, 0x00	; 0
     500:	90 93 0f 01 	sts	0x010F, r25
     504:	80 93 0e 01 	sts	0x010E, r24
     508:	8f ef       	ldi	r24, 0xFF	; 255
     50a:	90 e0       	ldi	r25, 0x00	; 0
		//Calculate the next delay
		rightMotor.delayCounter = accelerateMotorToPoint(&rightMotor);
	}
	
	//Set Interrupt Timer, since somtimes we need to wait a value larger then 255, modify delayCounter accordingly
	OCR2A = eightBitTimerFix(&rightMotor);	
     50c:	80 93 b3 00 	sts	0x00B3, r24
}
     510:	ff 91       	pop	r31
     512:	ef 91       	pop	r30
     514:	bf 91       	pop	r27
     516:	af 91       	pop	r26
     518:	9f 91       	pop	r25
     51a:	8f 91       	pop	r24
     51c:	7f 91       	pop	r23
     51e:	6f 91       	pop	r22
     520:	5f 91       	pop	r21
     522:	4f 91       	pop	r20
     524:	3f 91       	pop	r19
     526:	2f 91       	pop	r18
     528:	0f 90       	pop	r0
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	0f 90       	pop	r0
     52e:	1f 90       	pop	r1
     530:	18 95       	reti

00000532 <__vector_14>:



/* LEFT MOTOR CONTROL */
ISR(TIMER0_COMPA_vect)
{
     532:	1f 92       	push	r1
     534:	0f 92       	push	r0
     536:	0f b6       	in	r0, 0x3f	; 63
     538:	0f 92       	push	r0
     53a:	11 24       	eor	r1, r1
     53c:	2f 93       	push	r18
     53e:	3f 93       	push	r19
     540:	4f 93       	push	r20
     542:	5f 93       	push	r21
     544:	6f 93       	push	r22
     546:	7f 93       	push	r23
     548:	8f 93       	push	r24
     54a:	9f 93       	push	r25
     54c:	af 93       	push	r26
     54e:	bf 93       	push	r27
     550:	ef 93       	push	r30
     552:	ff 93       	push	r31
	//Set to max initially to prevent the next interrupt cycle from overwriting this one
	OCR0A = 255;
     554:	8f ef       	ldi	r24, 0xFF	; 255
     556:	87 bd       	out	0x27, r24	; 39
	
	//If we are ready to step the motor again
	if(leftMotor.delayCounter == 0)
     558:	80 91 20 01 	lds	r24, 0x0120
     55c:	90 91 21 01 	lds	r25, 0x0121
     560:	89 2b       	or	r24, r25
     562:	01 f5       	brne	.+64     	; 0x5a4 <__vector_14+0x72>
	{
		//Pulse and increment motor
		pulseMotor(&PORTD, PD2);
     564:	8b e2       	ldi	r24, 0x2B	; 43
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	62 e0       	ldi	r22, 0x02	; 2
     56a:	0e 94 1c 02 	call	0x438	; 0x438 <pulseMotor>
		leftMotor.stepCount++;		
     56e:	80 91 18 01 	lds	r24, 0x0118
     572:	90 91 19 01 	lds	r25, 0x0119
     576:	a0 91 1a 01 	lds	r26, 0x011A
     57a:	b0 91 1b 01 	lds	r27, 0x011B
     57e:	01 96       	adiw	r24, 0x01	; 1
     580:	a1 1d       	adc	r26, r1
     582:	b1 1d       	adc	r27, r1
     584:	80 93 18 01 	sts	0x0118, r24
     588:	90 93 19 01 	sts	0x0119, r25
     58c:	a0 93 1a 01 	sts	0x011A, r26
     590:	b0 93 1b 01 	sts	0x011B, r27
		
		//Calculate the next delay
		leftMotor.delayCounter = accelerateMotorToPoint(&leftMotor);	
     594:	88 e1       	ldi	r24, 0x18	; 24
     596:	91 e0       	ldi	r25, 0x01	; 1
     598:	0e 94 05 01 	call	0x20a	; 0x20a <accelerateMotorToPoint>
     59c:	90 93 21 01 	sts	0x0121, r25
     5a0:	80 93 20 01 	sts	0x0120, r24

int eightBitTimerFix(struct StepperMotor *motor)
{
	int returnNum;

	if(motor->delayCounter <= 255)
     5a4:	80 91 20 01 	lds	r24, 0x0120
     5a8:	90 91 21 01 	lds	r25, 0x0121
     5ac:	8f 3f       	cpi	r24, 0xFF	; 255
     5ae:	91 05       	cpc	r25, r1
     5b0:	09 f0       	breq	.+2      	; 0x5b4 <__vector_14+0x82>
     5b2:	4c f4       	brge	.+18     	; 0x5c6 <__vector_14+0x94>
	{
		returnNum = motor->delayCounter;
     5b4:	80 91 20 01 	lds	r24, 0x0120
     5b8:	90 91 21 01 	lds	r25, 0x0121
		motor->delayCounter = 0;	
     5bc:	10 92 21 01 	sts	0x0121, r1
     5c0:	10 92 20 01 	sts	0x0120, r1
     5c4:	0c c0       	rjmp	.+24     	; 0x5de <__vector_14+0xac>
	}
	else
	{
		motor->delayCounter -= 255;
     5c6:	80 91 20 01 	lds	r24, 0x0120
     5ca:	90 91 21 01 	lds	r25, 0x0121
     5ce:	8f 5f       	subi	r24, 0xFF	; 255
     5d0:	90 40       	sbci	r25, 0x00	; 0
     5d2:	90 93 21 01 	sts	0x0121, r25
     5d6:	80 93 20 01 	sts	0x0120, r24
     5da:	8f ef       	ldi	r24, 0xFF	; 255
     5dc:	90 e0       	ldi	r25, 0x00	; 0
		//Calculate the next delay
		leftMotor.delayCounter = accelerateMotorToPoint(&leftMotor);	
	}

	//Set Interrupt Timer, since somtimes we need to wait a value larger then 255, modify delayCounter accordingly
	OCR0A = eightBitTimerFix(&leftMotor);	
     5de:	87 bd       	out	0x27, r24	; 39
}
     5e0:	ff 91       	pop	r31
     5e2:	ef 91       	pop	r30
     5e4:	bf 91       	pop	r27
     5e6:	af 91       	pop	r26
     5e8:	9f 91       	pop	r25
     5ea:	8f 91       	pop	r24
     5ec:	7f 91       	pop	r23
     5ee:	6f 91       	pop	r22
     5f0:	5f 91       	pop	r21
     5f2:	4f 91       	pop	r20
     5f4:	3f 91       	pop	r19
     5f6:	2f 91       	pop	r18
     5f8:	0f 90       	pop	r0
     5fa:	0f be       	out	0x3f, r0	; 63
     5fc:	0f 90       	pop	r0
     5fe:	1f 90       	pop	r1
     600:	18 95       	reti

00000602 <setDirection>:
	(*port) &= ~(1 << pin);
}

void setDirection(int left, int right)
{
	if(left)
     602:	89 2b       	or	r24, r25
     604:	11 f0       	breq	.+4      	; 0x60a <setDirection+0x8>
		PORTB &= ~(1 << PB0);
     606:	28 98       	cbi	0x05, 0	; 5
     608:	01 c0       	rjmp	.+2      	; 0x60c <setDirection+0xa>
	else
		PORTB |= (1 << PB0);
     60a:	28 9a       	sbi	0x05, 0	; 5
		
	if(right)
     60c:	67 2b       	or	r22, r23
     60e:	11 f0       	breq	.+4      	; 0x614 <setDirection+0x12>
		PORTB |= (1 << PB1);
     610:	29 9a       	sbi	0x05, 1	; 5
     612:	08 95       	ret
	else
		PORTB &= ~(1 << PB1);
     614:	29 98       	cbi	0x05, 1	; 5
     616:	08 95       	ret

00000618 <eightBitTimerFix>:
}


int eightBitTimerFix(struct StepperMotor *motor)
{
     618:	fc 01       	movw	r30, r24
	int returnNum;

	if(motor->delayCounter <= 255)
     61a:	80 85       	ldd	r24, Z+8	; 0x08
     61c:	91 85       	ldd	r25, Z+9	; 0x09
     61e:	8f 3f       	cpi	r24, 0xFF	; 255
     620:	91 05       	cpc	r25, r1
     622:	09 f0       	breq	.+2      	; 0x626 <eightBitTimerFix+0xe>
     624:	2c f4       	brge	.+10     	; 0x630 <eightBitTimerFix+0x18>
	{
		returnNum = motor->delayCounter;
     626:	20 85       	ldd	r18, Z+8	; 0x08
     628:	31 85       	ldd	r19, Z+9	; 0x09
		motor->delayCounter = 0;	
     62a:	11 86       	std	Z+9, r1	; 0x09
     62c:	10 86       	std	Z+8, r1	; 0x08
     62e:	08 c0       	rjmp	.+16     	; 0x640 <eightBitTimerFix+0x28>
	}
	else
	{
		motor->delayCounter -= 255;
     630:	80 85       	ldd	r24, Z+8	; 0x08
     632:	91 85       	ldd	r25, Z+9	; 0x09
     634:	8f 5f       	subi	r24, 0xFF	; 255
     636:	90 40       	sbci	r25, 0x00	; 0
     638:	91 87       	std	Z+9, r25	; 0x09
     63a:	80 87       	std	Z+8, r24	; 0x08
     63c:	2f ef       	ldi	r18, 0xFF	; 255
     63e:	30 e0       	ldi	r19, 0x00	; 0
		returnNum = 255;
	}

	return returnNum;
}
     640:	c9 01       	movw	r24, r18
     642:	08 95       	ret

00000644 <turnOnTimers>:

void turnOnTimers(int one, int two)
{
	if(one)
     644:	89 2b       	or	r24, r25
     646:	19 f0       	breq	.+6      	; 0x64e <turnOnTimers+0xa>
		TCCR0B |= (1 << CS01) | (1 << CS00);
     648:	85 b5       	in	r24, 0x25	; 37
     64a:	83 60       	ori	r24, 0x03	; 3
     64c:	02 c0       	rjmp	.+4      	; 0x652 <turnOnTimers+0xe>
	else
		TCCR0B &= ~((1 << CS01) | (1 << CS00));
     64e:	85 b5       	in	r24, 0x25	; 37
     650:	8c 7f       	andi	r24, 0xFC	; 252
     652:	85 bd       	out	0x25, r24	; 37
		
	if(two)
     654:	67 2b       	or	r22, r23
     656:	21 f0       	breq	.+8      	; 0x660 <turnOnTimers+0x1c>
		TCCR2B |= (1 << CS22);
     658:	80 91 b1 00 	lds	r24, 0x00B1
     65c:	84 60       	ori	r24, 0x04	; 4
     65e:	03 c0       	rjmp	.+6      	; 0x666 <turnOnTimers+0x22>
	else	
		TCCR2B &= ~(1 << CS22);
     660:	80 91 b1 00 	lds	r24, 0x00B1
     664:	8b 7f       	andi	r24, 0xFB	; 251
     666:	80 93 b1 00 	sts	0x00B1, r24
     66a:	08 95       	ret

0000066c <USART_init>:
void USART_putstring(char* StringPtr);
 
 
void USART_init(void){
 
 UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     66c:	10 92 c5 00 	sts	0x00C5, r1
 UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     670:	87 e6       	ldi	r24, 0x67	; 103
     672:	80 93 c4 00 	sts	0x00C4, r24
 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     676:	88 e1       	ldi	r24, 0x18	; 24
     678:	80 93 c1 00 	sts	0x00C1, r24
 UCSR0C = (3<<UCSZ00);
     67c:	86 e0       	ldi	r24, 0x06	; 6
     67e:	80 93 c2 00 	sts	0x00C2, r24
}
     682:	08 95       	ret

00000684 <USART_receive>:
 
unsigned char USART_receive(void){
 
 while(!(UCSR0A & (1<<RXC0)));
     684:	80 91 c0 00 	lds	r24, 0x00C0
     688:	87 ff       	sbrs	r24, 7
     68a:	fc cf       	rjmp	.-8      	; 0x684 <USART_receive>
 return UDR0;
     68c:	80 91 c6 00 	lds	r24, 0x00C6
 
}
     690:	08 95       	ret

00000692 <USART_send>:
 
void USART_send( unsigned char data){
     692:	98 2f       	mov	r25, r24
 
 while(!(UCSR0A & (1<<UDRE0)));
     694:	80 91 c0 00 	lds	r24, 0x00C0
     698:	85 ff       	sbrs	r24, 5
     69a:	fc cf       	rjmp	.-8      	; 0x694 <USART_send+0x2>
 UDR0 = data;
     69c:	90 93 c6 00 	sts	0x00C6, r25
 
}
     6a0:	08 95       	ret

000006a2 <USART_putstring>:
 
void USART_putstring(char* StringPtr){
     6a2:	fc 01       	movw	r30, r24
     6a4:	07 c0       	rjmp	.+14     	; 0x6b4 <USART_putstring+0x12>
 
}
 
void USART_send( unsigned char data){
 
 while(!(UCSR0A & (1<<UDRE0)));
     6a6:	80 91 c0 00 	lds	r24, 0x00C0
     6aa:	85 ff       	sbrs	r24, 5
     6ac:	fc cf       	rjmp	.-8      	; 0x6a6 <USART_putstring+0x4>
 UDR0 = data;
     6ae:	90 93 c6 00 	sts	0x00C6, r25
 
void USART_putstring(char* StringPtr){
 
while(*StringPtr != 0x00){
 USART_send(*StringPtr);
 StringPtr++;}
     6b2:	31 96       	adiw	r30, 0x01	; 1
 
}
 
void USART_putstring(char* StringPtr){
 
while(*StringPtr != 0x00){
     6b4:	90 81       	ld	r25, Z
     6b6:	99 23       	and	r25, r25
     6b8:	b1 f7       	brne	.-20     	; 0x6a6 <USART_putstring+0x4>
 USART_send(*StringPtr);
 StringPtr++;}
 
}
     6ba:	08 95       	ret

000006bc <print>:
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial
}

void print(char* string)
{
	USART_putstring(string);
     6bc:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_putstring>
     6c0:	08 95       	ret

000006c2 <printNum>:
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial  
	USART_putstring("\n\r");
}

void printNum(float value)
{
     6c2:	0f 93       	push	r16
     6c4:	1f 93       	push	r17
	sprintf(str,"%f",value);
     6c6:	2d b7       	in	r18, 0x3d	; 61
     6c8:	3e b7       	in	r19, 0x3e	; 62
     6ca:	28 50       	subi	r18, 0x08	; 8
     6cc:	30 40       	sbci	r19, 0x00	; 0
     6ce:	0f b6       	in	r0, 0x3f	; 63
     6d0:	f8 94       	cli
     6d2:	3e bf       	out	0x3e, r19	; 62
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	2d bf       	out	0x3d, r18	; 61
     6d8:	ed b7       	in	r30, 0x3d	; 61
     6da:	fe b7       	in	r31, 0x3e	; 62
     6dc:	31 96       	adiw	r30, 0x01	; 1
     6de:	0a e2       	ldi	r16, 0x2A	; 42
     6e0:	11 e0       	ldi	r17, 0x01	; 1
     6e2:	ad b7       	in	r26, 0x3d	; 61
     6e4:	be b7       	in	r27, 0x3e	; 62
     6e6:	12 96       	adiw	r26, 0x02	; 2
     6e8:	1c 93       	st	X, r17
     6ea:	0e 93       	st	-X, r16
     6ec:	11 97       	sbiw	r26, 0x01	; 1
     6ee:	20 e0       	ldi	r18, 0x00	; 0
     6f0:	31 e0       	ldi	r19, 0x01	; 1
     6f2:	33 83       	std	Z+3, r19	; 0x03
     6f4:	22 83       	std	Z+2, r18	; 0x02
     6f6:	64 83       	std	Z+4, r22	; 0x04
     6f8:	75 83       	std	Z+5, r23	; 0x05
     6fa:	86 83       	std	Z+6, r24	; 0x06
     6fc:	97 83       	std	Z+7, r25	; 0x07
     6fe:	0e 94 b2 0c 	call	0x1964	; 0x1964 <sprintf>
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial
     702:	2d b7       	in	r18, 0x3d	; 61
     704:	3e b7       	in	r19, 0x3e	; 62
     706:	28 5f       	subi	r18, 0xF8	; 248
     708:	3f 4f       	sbci	r19, 0xFF	; 255
     70a:	0f b6       	in	r0, 0x3f	; 63
     70c:	f8 94       	cli
     70e:	3e bf       	out	0x3e, r19	; 62
     710:	0f be       	out	0x3f, r0	; 63
     712:	2d bf       	out	0x3d, r18	; 61
     714:	c8 01       	movw	r24, r16
     716:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_putstring>
}
     71a:	1f 91       	pop	r17
     71c:	0f 91       	pop	r16
     71e:	08 95       	ret

00000720 <printlnNum>:
 
}

char str[16];
void printlnNum(double value)
{
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
	sprintf(str,"%f",value);
     724:	2d b7       	in	r18, 0x3d	; 61
     726:	3e b7       	in	r19, 0x3e	; 62
     728:	28 50       	subi	r18, 0x08	; 8
     72a:	30 40       	sbci	r19, 0x00	; 0
     72c:	0f b6       	in	r0, 0x3f	; 63
     72e:	f8 94       	cli
     730:	3e bf       	out	0x3e, r19	; 62
     732:	0f be       	out	0x3f, r0	; 63
     734:	2d bf       	out	0x3d, r18	; 61
     736:	ed b7       	in	r30, 0x3d	; 61
     738:	fe b7       	in	r31, 0x3e	; 62
     73a:	31 96       	adiw	r30, 0x01	; 1
     73c:	0a e2       	ldi	r16, 0x2A	; 42
     73e:	11 e0       	ldi	r17, 0x01	; 1
     740:	ad b7       	in	r26, 0x3d	; 61
     742:	be b7       	in	r27, 0x3e	; 62
     744:	12 96       	adiw	r26, 0x02	; 2
     746:	1c 93       	st	X, r17
     748:	0e 93       	st	-X, r16
     74a:	11 97       	sbiw	r26, 0x01	; 1
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	31 e0       	ldi	r19, 0x01	; 1
     750:	33 83       	std	Z+3, r19	; 0x03
     752:	22 83       	std	Z+2, r18	; 0x02
     754:	64 83       	std	Z+4, r22	; 0x04
     756:	75 83       	std	Z+5, r23	; 0x05
     758:	86 83       	std	Z+6, r24	; 0x06
     75a:	97 83       	std	Z+7, r25	; 0x07
     75c:	0e 94 b2 0c 	call	0x1964	; 0x1964 <sprintf>
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial  
     760:	2d b7       	in	r18, 0x3d	; 61
     762:	3e b7       	in	r19, 0x3e	; 62
     764:	28 5f       	subi	r18, 0xF8	; 248
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	f8 94       	cli
     76c:	3e bf       	out	0x3e, r19	; 62
     76e:	0f be       	out	0x3f, r0	; 63
     770:	2d bf       	out	0x3d, r18	; 61
     772:	c8 01       	movw	r24, r16
     774:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_putstring>
	USART_putstring("\n\r");
     778:	83 e0       	ldi	r24, 0x03	; 3
     77a:	91 e0       	ldi	r25, 0x01	; 1
     77c:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_putstring>
}
     780:	1f 91       	pop	r17
     782:	0f 91       	pop	r16
     784:	08 95       	ret

00000786 <calculateInitialDelay>:
	printlnNum((float)leftMotor.stepCount);
	turnOnTimers(0, 0);
}

float calculateInitialDelay(float accel)
{
     786:	9b 01       	movw	r18, r22
     788:	ac 01       	movw	r20, r24
	return 0.676 * TIMER_FREQUENCY * sqrt(2.0 / (float)accel);	
     78a:	60 e0       	ldi	r22, 0x00	; 0
     78c:	70 e0       	ldi	r23, 0x00	; 0
     78e:	80 e0       	ldi	r24, 0x00	; 0
     790:	90 e4       	ldi	r25, 0x40	; 64
     792:	0e 94 1b 09 	call	0x1236	; 0x1236 <__divsf3>
     796:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <sqrt>
     79a:	20 e0       	ldi	r18, 0x00	; 0
     79c:	3a e0       	ldi	r19, 0x0A	; 10
     79e:	45 e2       	ldi	r20, 0x25	; 37
     7a0:	58 e4       	ldi	r21, 0x48	; 72
     7a2:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__mulsf3>
}
     7a6:	08 95       	ret

000007a8 <straight>:

extern StepperMotor leftMotor;
extern StepperMotor rightMotor;

void straight(long stepTarget, int inSpeed, int maxSpeed, int exitSpeed, int accel, int decel)
{	
     7a8:	2f 92       	push	r2
     7aa:	3f 92       	push	r3
     7ac:	4f 92       	push	r4
     7ae:	5f 92       	push	r5
     7b0:	6f 92       	push	r6
     7b2:	7f 92       	push	r7
     7b4:	8f 92       	push	r8
     7b6:	9f 92       	push	r9
     7b8:	af 92       	push	r10
     7ba:	bf 92       	push	r11
     7bc:	cf 92       	push	r12
     7be:	df 92       	push	r13
     7c0:	ef 92       	push	r14
     7c2:	ff 92       	push	r15
     7c4:	0f 93       	push	r16
     7c6:	1f 93       	push	r17
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	1b 01       	movw	r2, r22
     7ce:	2c 01       	movw	r4, r24
     7d0:	59 01       	movw	r10, r18
     7d2:	e8 01       	movw	r28, r16
	//Motor settings
	leftMotor.stepCount 	= rightMotor.stepCount	= 0;
     7d4:	10 92 06 01 	sts	0x0106, r1
     7d8:	10 92 07 01 	sts	0x0107, r1
     7dc:	10 92 08 01 	sts	0x0108, r1
     7e0:	10 92 09 01 	sts	0x0109, r1
     7e4:	80 91 06 01 	lds	r24, 0x0106
     7e8:	90 91 07 01 	lds	r25, 0x0107
     7ec:	a0 91 08 01 	lds	r26, 0x0108
     7f0:	b0 91 09 01 	lds	r27, 0x0109
     7f4:	80 93 18 01 	sts	0x0118, r24
     7f8:	90 93 19 01 	sts	0x0119, r25
     7fc:	a0 93 1a 01 	sts	0x011A, r26
     800:	b0 93 1b 01 	sts	0x011B, r27
	
	//Motor's max speed converted to a delay
	leftMotor.targetDelay		= rightMotor.targetDelay 	= TIMER_FREQUENCY / maxSpeed;
     804:	95 01       	movw	r18, r10
     806:	44 27       	eor	r20, r20
     808:	37 fd       	sbrc	r19, 7
     80a:	40 95       	com	r20
     80c:	54 2f       	mov	r21, r20
     80e:	60 e9       	ldi	r22, 0x90	; 144
     810:	70 ed       	ldi	r23, 0xD0	; 208
     812:	83 e0       	ldi	r24, 0x03	; 3
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 24 0b 	call	0x1648	; 0x1648 <__divmodsi4>
     81a:	ca 01       	movw	r24, r20
     81c:	b9 01       	movw	r22, r18
     81e:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     822:	60 93 12 01 	sts	0x0112, r22
     826:	70 93 13 01 	sts	0x0113, r23
     82a:	80 93 14 01 	sts	0x0114, r24
     82e:	90 93 15 01 	sts	0x0115, r25
     832:	80 91 12 01 	lds	r24, 0x0112
     836:	90 91 13 01 	lds	r25, 0x0113
     83a:	a0 91 14 01 	lds	r26, 0x0114
     83e:	b0 91 15 01 	lds	r27, 0x0115
     842:	80 93 24 01 	sts	0x0124, r24
     846:	90 93 25 01 	sts	0x0125, r25
     84a:	a0 93 26 01 	sts	0x0126, r26
     84e:	b0 93 27 01 	sts	0x0127, r27
	
	//Current STep Delay
	leftMotor.currentStepDelay = rightMotor.currentStepDelay = calculateInitialDelay(accel);	
     852:	00 27       	eor	r16, r16
     854:	f7 fc       	sbrc	r15, 7
     856:	00 95       	com	r16
     858:	10 2f       	mov	r17, r16
     85a:	c8 01       	movw	r24, r16
     85c:	b7 01       	movw	r22, r14
     85e:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     862:	0e 94 c3 03 	call	0x786	; 0x786 <calculateInitialDelay>
     866:	60 93 0a 01 	sts	0x010A, r22
     86a:	70 93 0b 01 	sts	0x010B, r23
     86e:	80 93 0c 01 	sts	0x010C, r24
     872:	90 93 0d 01 	sts	0x010D, r25
     876:	80 91 0a 01 	lds	r24, 0x010A
     87a:	90 91 0b 01 	lds	r25, 0x010B
     87e:	a0 91 0c 01 	lds	r26, 0x010C
     882:	b0 91 0d 01 	lds	r27, 0x010D
     886:	80 93 1c 01 	sts	0x011C, r24
     88a:	90 93 1d 01 	sts	0x011D, r25
     88e:	a0 93 1e 01 	sts	0x011E, r26
     892:	b0 93 1f 01 	sts	0x011F, r27

	leftMotor.stepAccel = 0;
     896:	10 92 23 01 	sts	0x0123, r1
     89a:	10 92 22 01 	sts	0x0122, r1
	
	turnOnTimers(1, 1);	
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	61 e0       	ldi	r22, 0x01	; 1
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	0e 94 22 03 	call	0x644	; 0x644 <turnOnTimers>
	enableDrive(1, 1);
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	61 e0       	ldi	r22, 0x01	; 1
     8b0:	70 e0       	ldi	r23, 0x00	; 0
     8b2:	0e 94 ed 01 	call	0x3da	; 0x3da <enableDrive>
	
	while(leftMotor.stepAccel == 0)
     8b6:	80 91 22 01 	lds	r24, 0x0122
     8ba:	90 91 23 01 	lds	r25, 0x0123
     8be:	89 2b       	or	r24, r25
     8c0:	d1 f3       	breq	.-12     	; 0x8b6 <straight+0x10e>
	{}
	
	float decelSteps = (float)maxSpeed * (float)maxSpeed / (2.0 * decel) - (float)exitSpeed * (float)exitSpeed / (2.0 * decel);
     8c2:	b5 01       	movw	r22, r10
     8c4:	88 27       	eor	r24, r24
     8c6:	77 fd       	sbrc	r23, 7
     8c8:	80 95       	com	r24
     8ca:	98 2f       	mov	r25, r24
     8cc:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     8d0:	7b 01       	movw	r14, r22
     8d2:	8c 01       	movw	r16, r24
     8d4:	b6 01       	movw	r22, r12
     8d6:	88 27       	eor	r24, r24
     8d8:	77 fd       	sbrc	r23, 7
     8da:	80 95       	com	r24
     8dc:	98 2f       	mov	r25, r24
     8de:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     8e2:	5b 01       	movw	r10, r22
     8e4:	6c 01       	movw	r12, r24
     8e6:	c8 01       	movw	r24, r16
     8e8:	b7 01       	movw	r22, r14
     8ea:	a8 01       	movw	r20, r16
     8ec:	97 01       	movw	r18, r14
     8ee:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__mulsf3>
     8f2:	7b 01       	movw	r14, r22
     8f4:	8c 01       	movw	r16, r24
     8f6:	c6 01       	movw	r24, r12
     8f8:	b5 01       	movw	r22, r10
     8fa:	a6 01       	movw	r20, r12
     8fc:	95 01       	movw	r18, r10
     8fe:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     902:	9b 01       	movw	r18, r22
     904:	ac 01       	movw	r20, r24
     906:	c8 01       	movw	r24, r16
     908:	b7 01       	movw	r22, r14
     90a:	0e 94 1b 09 	call	0x1236	; 0x1236 <__divsf3>
     90e:	3b 01       	movw	r6, r22
     910:	4c 01       	movw	r8, r24
     912:	be 01       	movw	r22, r28
     914:	88 27       	eor	r24, r24
     916:	77 fd       	sbrc	r23, 7
     918:	80 95       	com	r24
     91a:	98 2f       	mov	r25, r24
     91c:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     920:	9b 01       	movw	r18, r22
     922:	ac 01       	movw	r20, r24
     924:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__mulsf3>
     928:	7b 01       	movw	r14, r22
     92a:	8c 01       	movw	r16, r24
     92c:	c6 01       	movw	r24, r12
     92e:	b5 01       	movw	r22, r10
     930:	20 e0       	ldi	r18, 0x00	; 0
     932:	30 e0       	ldi	r19, 0x00	; 0
     934:	40 e0       	ldi	r20, 0x00	; 0
     936:	50 ec       	ldi	r21, 0xC0	; 192
     938:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <__mulsf3>
     93c:	9b 01       	movw	r18, r22
     93e:	ac 01       	movw	r20, r24
     940:	c8 01       	movw	r24, r16
     942:	b7 01       	movw	r22, r14
     944:	0e 94 1b 09 	call	0x1236	; 0x1236 <__divsf3>
     948:	9b 01       	movw	r18, r22
     94a:	ac 01       	movw	r20, r24
     94c:	c4 01       	movw	r24, r8
     94e:	b3 01       	movw	r22, r6
     950:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     954:	5b 01       	movw	r10, r22
     956:	6c 01       	movw	r12, r24
	
	while(leftMotor.stepCount + decelSteps < stepTarget)
     958:	60 91 18 01 	lds	r22, 0x0118
     95c:	70 91 19 01 	lds	r23, 0x0119
     960:	80 91 1a 01 	lds	r24, 0x011A
     964:	90 91 1b 01 	lds	r25, 0x011B
     968:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     96c:	a6 01       	movw	r20, r12
     96e:	95 01       	movw	r18, r10
     970:	0e 94 b3 08 	call	0x1166	; 0x1166 <__addsf3>
     974:	7b 01       	movw	r14, r22
     976:	8c 01       	movw	r16, r24
     978:	c2 01       	movw	r24, r4
     97a:	b1 01       	movw	r22, r2
     97c:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     980:	9b 01       	movw	r18, r22
     982:	ac 01       	movw	r20, r24
     984:	c8 01       	movw	r24, r16
     986:	b7 01       	movw	r22, r14
     988:	0e 94 17 09 	call	0x122e	; 0x122e <__cmpsf2>
     98c:	87 fd       	sbrc	r24, 7
     98e:	e4 cf       	rjmp	.-56     	; 0x958 <__stack+0x59>
	{
	}
	
	leftMotor.targetDelay = rightMotor.targetDelay = 7500;
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e6       	ldi	r25, 0x60	; 96
     994:	aa ee       	ldi	r26, 0xEA	; 234
     996:	b5 e4       	ldi	r27, 0x45	; 69
     998:	80 93 12 01 	sts	0x0112, r24
     99c:	90 93 13 01 	sts	0x0113, r25
     9a0:	a0 93 14 01 	sts	0x0114, r26
     9a4:	b0 93 15 01 	sts	0x0115, r27
     9a8:	80 91 12 01 	lds	r24, 0x0112
     9ac:	90 91 13 01 	lds	r25, 0x0113
     9b0:	a0 91 14 01 	lds	r26, 0x0114
     9b4:	b0 91 15 01 	lds	r27, 0x0115
     9b8:	80 93 24 01 	sts	0x0124, r24
     9bc:	90 93 25 01 	sts	0x0125, r25
     9c0:	a0 93 26 01 	sts	0x0126, r26
     9c4:	b0 93 27 01 	sts	0x0127, r27
	leftMotor.stepAccel = rightMotor.stepAccel = 0;
     9c8:	10 92 11 01 	sts	0x0111, r1
     9cc:	10 92 10 01 	sts	0x0110, r1
     9d0:	80 91 10 01 	lds	r24, 0x0110
     9d4:	90 91 11 01 	lds	r25, 0x0111
     9d8:	90 93 23 01 	sts	0x0123, r25
     9dc:	80 93 22 01 	sts	0x0122, r24
	leftMotor.tempCount = rightMotor.tempCount = (float)maxSpeed * (float)maxSpeed / (2.0 * decel);
     9e0:	c4 01       	movw	r24, r8
     9e2:	b3 01       	movw	r22, r6
     9e4:	0e 94 83 09 	call	0x1306	; 0x1306 <__fixsfsi>
     9e8:	70 93 17 01 	sts	0x0117, r23
     9ec:	60 93 16 01 	sts	0x0116, r22
     9f0:	80 91 16 01 	lds	r24, 0x0116
     9f4:	90 91 17 01 	lds	r25, 0x0117
     9f8:	90 93 29 01 	sts	0x0129, r25
     9fc:	80 93 28 01 	sts	0x0128, r24
	while(leftMotor.stepAccel == 0)
     a00:	80 91 22 01 	lds	r24, 0x0122
     a04:	90 91 23 01 	lds	r25, 0x0123
     a08:	89 2b       	or	r24, r25
     a0a:	d1 f3       	breq	.-12     	; 0xa00 <__stack+0x101>
	{}
	
	printlnNum((float)leftMotor.stepCount);
     a0c:	60 91 18 01 	lds	r22, 0x0118
     a10:	70 91 19 01 	lds	r23, 0x0119
     a14:	80 91 1a 01 	lds	r24, 0x011A
     a18:	90 91 1b 01 	lds	r25, 0x011B
     a1c:	0e 94 b6 09 	call	0x136c	; 0x136c <__floatsisf>
     a20:	0e 94 90 03 	call	0x720	; 0x720 <printlnNum>
	turnOnTimers(0, 0);
     a24:	80 e0       	ldi	r24, 0x00	; 0
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	0e 94 22 03 	call	0x644	; 0x644 <turnOnTimers>
}
     a30:	df 91       	pop	r29
     a32:	cf 91       	pop	r28
     a34:	1f 91       	pop	r17
     a36:	0f 91       	pop	r16
     a38:	ff 90       	pop	r15
     a3a:	ef 90       	pop	r14
     a3c:	df 90       	pop	r13
     a3e:	cf 90       	pop	r12
     a40:	bf 90       	pop	r11
     a42:	af 90       	pop	r10
     a44:	9f 90       	pop	r9
     a46:	8f 90       	pop	r8
     a48:	7f 90       	pop	r7
     a4a:	6f 90       	pop	r6
     a4c:	5f 90       	pop	r5
     a4e:	4f 90       	pop	r4
     a50:	3f 90       	pop	r3
     a52:	2f 90       	pop	r2
     a54:	08 95       	ret

00000a56 <vfprintf>:
     a56:	a1 e1       	ldi	r26, 0x11	; 17
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	e1 e3       	ldi	r30, 0x31	; 49
     a5c:	f5 e0       	ldi	r31, 0x05	; 5
     a5e:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__prologue_saves__>
     a62:	3c 01       	movw	r6, r24
     a64:	7f 87       	std	Y+15, r23	; 0x0f
     a66:	6e 87       	std	Y+14, r22	; 0x0e
     a68:	6a 01       	movw	r12, r20
     a6a:	fc 01       	movw	r30, r24
     a6c:	17 82       	std	Z+7, r1	; 0x07
     a6e:	16 82       	std	Z+6, r1	; 0x06
     a70:	83 81       	ldd	r24, Z+3	; 0x03
     a72:	81 fd       	sbrc	r24, 1
     a74:	03 c0       	rjmp	.+6      	; 0xa7c <vfprintf+0x26>
     a76:	6f ef       	ldi	r22, 0xFF	; 255
     a78:	7f ef       	ldi	r23, 0xFF	; 255
     a7a:	6f c3       	rjmp	.+1758   	; 0x115a <vfprintf+0x704>
     a7c:	9e 01       	movw	r18, r28
     a7e:	2f 5f       	subi	r18, 0xFF	; 255
     a80:	3f 4f       	sbci	r19, 0xFF	; 255
     a82:	39 8b       	std	Y+17, r19	; 0x11
     a84:	28 8b       	std	Y+16, r18	; 0x10
     a86:	f3 01       	movw	r30, r6
     a88:	23 81       	ldd	r18, Z+3	; 0x03
     a8a:	ee 85       	ldd	r30, Y+14	; 0x0e
     a8c:	ff 85       	ldd	r31, Y+15	; 0x0f
     a8e:	23 fd       	sbrc	r18, 3
     a90:	85 91       	lpm	r24, Z+
     a92:	23 ff       	sbrs	r18, 3
     a94:	81 91       	ld	r24, Z+
     a96:	ff 87       	std	Y+15, r31	; 0x0f
     a98:	ee 87       	std	Y+14, r30	; 0x0e
     a9a:	88 23       	and	r24, r24
     a9c:	09 f4       	brne	.+2      	; 0xaa0 <vfprintf+0x4a>
     a9e:	5a c3       	rjmp	.+1716   	; 0x1154 <vfprintf+0x6fe>
     aa0:	85 32       	cpi	r24, 0x25	; 37
     aa2:	51 f4       	brne	.+20     	; 0xab8 <vfprintf+0x62>
     aa4:	ee 85       	ldd	r30, Y+14	; 0x0e
     aa6:	ff 85       	ldd	r31, Y+15	; 0x0f
     aa8:	23 fd       	sbrc	r18, 3
     aaa:	85 91       	lpm	r24, Z+
     aac:	23 ff       	sbrs	r18, 3
     aae:	81 91       	ld	r24, Z+
     ab0:	ff 87       	std	Y+15, r31	; 0x0f
     ab2:	ee 87       	std	Y+14, r30	; 0x0e
     ab4:	85 32       	cpi	r24, 0x25	; 37
     ab6:	29 f4       	brne	.+10     	; 0xac2 <vfprintf+0x6c>
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	b3 01       	movw	r22, r6
     abc:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     ac0:	e2 cf       	rjmp	.-60     	; 0xa86 <vfprintf+0x30>
     ac2:	98 2f       	mov	r25, r24
     ac4:	10 e0       	ldi	r17, 0x00	; 0
     ac6:	88 24       	eor	r8, r8
     ac8:	99 24       	eor	r9, r9
     aca:	10 32       	cpi	r17, 0x20	; 32
     acc:	b0 f4       	brcc	.+44     	; 0xafa <vfprintf+0xa4>
     ace:	9b 32       	cpi	r25, 0x2B	; 43
     ad0:	69 f0       	breq	.+26     	; 0xaec <vfprintf+0x96>
     ad2:	9c 32       	cpi	r25, 0x2C	; 44
     ad4:	28 f4       	brcc	.+10     	; 0xae0 <vfprintf+0x8a>
     ad6:	90 32       	cpi	r25, 0x20	; 32
     ad8:	51 f0       	breq	.+20     	; 0xaee <vfprintf+0x98>
     ada:	93 32       	cpi	r25, 0x23	; 35
     adc:	71 f4       	brne	.+28     	; 0xafa <vfprintf+0xa4>
     ade:	0b c0       	rjmp	.+22     	; 0xaf6 <vfprintf+0xa0>
     ae0:	9d 32       	cpi	r25, 0x2D	; 45
     ae2:	39 f0       	breq	.+14     	; 0xaf2 <vfprintf+0x9c>
     ae4:	90 33       	cpi	r25, 0x30	; 48
     ae6:	49 f4       	brne	.+18     	; 0xafa <vfprintf+0xa4>
     ae8:	11 60       	ori	r17, 0x01	; 1
     aea:	28 c0       	rjmp	.+80     	; 0xb3c <vfprintf+0xe6>
     aec:	12 60       	ori	r17, 0x02	; 2
     aee:	14 60       	ori	r17, 0x04	; 4
     af0:	25 c0       	rjmp	.+74     	; 0xb3c <vfprintf+0xe6>
     af2:	18 60       	ori	r17, 0x08	; 8
     af4:	23 c0       	rjmp	.+70     	; 0xb3c <vfprintf+0xe6>
     af6:	10 61       	ori	r17, 0x10	; 16
     af8:	21 c0       	rjmp	.+66     	; 0xb3c <vfprintf+0xe6>
     afa:	17 fd       	sbrc	r17, 7
     afc:	2a c0       	rjmp	.+84     	; 0xb52 <vfprintf+0xfc>
     afe:	89 2f       	mov	r24, r25
     b00:	80 53       	subi	r24, 0x30	; 48
     b02:	8a 30       	cpi	r24, 0x0A	; 10
     b04:	78 f4       	brcc	.+30     	; 0xb24 <vfprintf+0xce>
     b06:	16 ff       	sbrs	r17, 6
     b08:	06 c0       	rjmp	.+12     	; 0xb16 <vfprintf+0xc0>
     b0a:	fa e0       	ldi	r31, 0x0A	; 10
     b0c:	9f 9e       	mul	r9, r31
     b0e:	90 2c       	mov	r9, r0
     b10:	11 24       	eor	r1, r1
     b12:	98 0e       	add	r9, r24
     b14:	13 c0       	rjmp	.+38     	; 0xb3c <vfprintf+0xe6>
     b16:	3a e0       	ldi	r19, 0x0A	; 10
     b18:	83 9e       	mul	r8, r19
     b1a:	80 2c       	mov	r8, r0
     b1c:	11 24       	eor	r1, r1
     b1e:	88 0e       	add	r8, r24
     b20:	10 62       	ori	r17, 0x20	; 32
     b22:	0c c0       	rjmp	.+24     	; 0xb3c <vfprintf+0xe6>
     b24:	9e 32       	cpi	r25, 0x2E	; 46
     b26:	21 f4       	brne	.+8      	; 0xb30 <vfprintf+0xda>
     b28:	16 fd       	sbrc	r17, 6
     b2a:	14 c3       	rjmp	.+1576   	; 0x1154 <vfprintf+0x6fe>
     b2c:	10 64       	ori	r17, 0x40	; 64
     b2e:	06 c0       	rjmp	.+12     	; 0xb3c <vfprintf+0xe6>
     b30:	9c 36       	cpi	r25, 0x6C	; 108
     b32:	11 f4       	brne	.+4      	; 0xb38 <vfprintf+0xe2>
     b34:	10 68       	ori	r17, 0x80	; 128
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <vfprintf+0xe6>
     b38:	98 36       	cpi	r25, 0x68	; 104
     b3a:	59 f4       	brne	.+22     	; 0xb52 <vfprintf+0xfc>
     b3c:	ee 85       	ldd	r30, Y+14	; 0x0e
     b3e:	ff 85       	ldd	r31, Y+15	; 0x0f
     b40:	23 fd       	sbrc	r18, 3
     b42:	95 91       	lpm	r25, Z+
     b44:	23 ff       	sbrs	r18, 3
     b46:	91 91       	ld	r25, Z+
     b48:	ff 87       	std	Y+15, r31	; 0x0f
     b4a:	ee 87       	std	Y+14, r30	; 0x0e
     b4c:	99 23       	and	r25, r25
     b4e:	09 f0       	breq	.+2      	; 0xb52 <vfprintf+0xfc>
     b50:	bc cf       	rjmp	.-136    	; 0xaca <vfprintf+0x74>
     b52:	89 2f       	mov	r24, r25
     b54:	85 54       	subi	r24, 0x45	; 69
     b56:	83 30       	cpi	r24, 0x03	; 3
     b58:	20 f4       	brcc	.+8      	; 0xb62 <vfprintf+0x10c>
     b5a:	81 2f       	mov	r24, r17
     b5c:	80 61       	ori	r24, 0x10	; 16
     b5e:	90 5e       	subi	r25, 0xE0	; 224
     b60:	07 c0       	rjmp	.+14     	; 0xb70 <vfprintf+0x11a>
     b62:	89 2f       	mov	r24, r25
     b64:	85 56       	subi	r24, 0x65	; 101
     b66:	83 30       	cpi	r24, 0x03	; 3
     b68:	08 f0       	brcs	.+2      	; 0xb6c <vfprintf+0x116>
     b6a:	9f c1       	rjmp	.+830    	; 0xeaa <vfprintf+0x454>
     b6c:	81 2f       	mov	r24, r17
     b6e:	8f 7e       	andi	r24, 0xEF	; 239
     b70:	86 fd       	sbrc	r24, 6
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <vfprintf+0x122>
     b74:	76 e0       	ldi	r23, 0x06	; 6
     b76:	97 2e       	mov	r9, r23
     b78:	6f e3       	ldi	r22, 0x3F	; 63
     b7a:	f6 2e       	mov	r15, r22
     b7c:	f8 22       	and	r15, r24
     b7e:	95 36       	cpi	r25, 0x65	; 101
     b80:	19 f4       	brne	.+6      	; 0xb88 <vfprintf+0x132>
     b82:	f0 e4       	ldi	r31, 0x40	; 64
     b84:	ff 2a       	or	r15, r31
     b86:	07 c0       	rjmp	.+14     	; 0xb96 <vfprintf+0x140>
     b88:	96 36       	cpi	r25, 0x66	; 102
     b8a:	19 f4       	brne	.+6      	; 0xb92 <vfprintf+0x13c>
     b8c:	20 e8       	ldi	r18, 0x80	; 128
     b8e:	f2 2a       	or	r15, r18
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <vfprintf+0x140>
     b92:	91 10       	cpse	r9, r1
     b94:	9a 94       	dec	r9
     b96:	f7 fe       	sbrs	r15, 7
     b98:	0a c0       	rjmp	.+20     	; 0xbae <vfprintf+0x158>
     b9a:	3b e3       	ldi	r19, 0x3B	; 59
     b9c:	39 15       	cp	r19, r9
     b9e:	18 f4       	brcc	.+6      	; 0xba6 <vfprintf+0x150>
     ba0:	5c e3       	ldi	r21, 0x3C	; 60
     ba2:	b5 2e       	mov	r11, r21
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x154>
     ba6:	b9 2c       	mov	r11, r9
     ba8:	b3 94       	inc	r11
     baa:	27 e0       	ldi	r18, 0x07	; 7
     bac:	09 c0       	rjmp	.+18     	; 0xbc0 <vfprintf+0x16a>
     bae:	47 e0       	ldi	r20, 0x07	; 7
     bb0:	49 15       	cp	r20, r9
     bb2:	20 f4       	brcc	.+8      	; 0xbbc <vfprintf+0x166>
     bb4:	bb 24       	eor	r11, r11
     bb6:	47 e0       	ldi	r20, 0x07	; 7
     bb8:	94 2e       	mov	r9, r20
     bba:	f7 cf       	rjmp	.-18     	; 0xbaa <vfprintf+0x154>
     bbc:	29 2d       	mov	r18, r9
     bbe:	bb 24       	eor	r11, r11
     bc0:	c6 01       	movw	r24, r12
     bc2:	04 96       	adiw	r24, 0x04	; 4
     bc4:	9d 87       	std	Y+13, r25	; 0x0d
     bc6:	8c 87       	std	Y+12, r24	; 0x0c
     bc8:	f6 01       	movw	r30, r12
     bca:	60 81       	ld	r22, Z
     bcc:	71 81       	ldd	r23, Z+1	; 0x01
     bce:	82 81       	ldd	r24, Z+2	; 0x02
     bd0:	93 81       	ldd	r25, Z+3	; 0x03
     bd2:	ae 01       	movw	r20, r28
     bd4:	4f 5f       	subi	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	0b 2d       	mov	r16, r11
     bda:	0e 94 98 0b 	call	0x1730	; 0x1730 <__ftoa_engine>
     bde:	6c 01       	movw	r12, r24
     be0:	09 81       	ldd	r16, Y+1	; 0x01
     be2:	20 2e       	mov	r2, r16
     be4:	33 24       	eor	r3, r3
     be6:	00 ff       	sbrs	r16, 0
     be8:	04 c0       	rjmp	.+8      	; 0xbf2 <vfprintf+0x19c>
     bea:	03 fd       	sbrc	r16, 3
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <vfprintf+0x19c>
     bee:	1d e2       	ldi	r17, 0x2D	; 45
     bf0:	09 c0       	rjmp	.+18     	; 0xc04 <vfprintf+0x1ae>
     bf2:	f1 fe       	sbrs	r15, 1
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <vfprintf+0x1a4>
     bf6:	1b e2       	ldi	r17, 0x2B	; 43
     bf8:	05 c0       	rjmp	.+10     	; 0xc04 <vfprintf+0x1ae>
     bfa:	f2 fc       	sbrc	r15, 2
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <vfprintf+0x1ac>
     bfe:	10 e0       	ldi	r17, 0x00	; 0
     c00:	01 c0       	rjmp	.+2      	; 0xc04 <vfprintf+0x1ae>
     c02:	10 e2       	ldi	r17, 0x20	; 32
     c04:	c1 01       	movw	r24, r2
     c06:	8c 70       	andi	r24, 0x0C	; 12
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	89 2b       	or	r24, r25
     c0c:	b9 f1       	breq	.+110    	; 0xc7c <vfprintf+0x226>
     c0e:	11 23       	and	r17, r17
     c10:	11 f4       	brne	.+4      	; 0xc16 <vfprintf+0x1c0>
     c12:	83 e0       	ldi	r24, 0x03	; 3
     c14:	01 c0       	rjmp	.+2      	; 0xc18 <vfprintf+0x1c2>
     c16:	84 e0       	ldi	r24, 0x04	; 4
     c18:	88 15       	cp	r24, r8
     c1a:	10 f0       	brcs	.+4      	; 0xc20 <vfprintf+0x1ca>
     c1c:	88 24       	eor	r8, r8
     c1e:	0a c0       	rjmp	.+20     	; 0xc34 <vfprintf+0x1de>
     c20:	88 1a       	sub	r8, r24
     c22:	f3 fc       	sbrc	r15, 3
     c24:	07 c0       	rjmp	.+14     	; 0xc34 <vfprintf+0x1de>
     c26:	80 e2       	ldi	r24, 0x20	; 32
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	b3 01       	movw	r22, r6
     c2c:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     c30:	8a 94       	dec	r8
     c32:	c9 f7       	brne	.-14     	; 0xc26 <vfprintf+0x1d0>
     c34:	11 23       	and	r17, r17
     c36:	29 f0       	breq	.+10     	; 0xc42 <vfprintf+0x1ec>
     c38:	81 2f       	mov	r24, r17
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	b3 01       	movw	r22, r6
     c3e:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     c42:	23 fe       	sbrs	r2, 3
     c44:	03 c0       	rjmp	.+6      	; 0xc4c <vfprintf+0x1f6>
     c46:	08 e6       	ldi	r16, 0x68	; 104
     c48:	10 e0       	ldi	r17, 0x00	; 0
     c4a:	0e c0       	rjmp	.+28     	; 0xc68 <vfprintf+0x212>
     c4c:	0c e6       	ldi	r16, 0x6C	; 108
     c4e:	10 e0       	ldi	r17, 0x00	; 0
     c50:	0b c0       	rjmp	.+22     	; 0xc68 <vfprintf+0x212>
     c52:	e1 14       	cp	r14, r1
     c54:	f1 04       	cpc	r15, r1
     c56:	09 f0       	breq	.+2      	; 0xc5a <vfprintf+0x204>
     c58:	80 52       	subi	r24, 0x20	; 32
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	b3 01       	movw	r22, r6
     c5e:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     c62:	0f 5f       	subi	r16, 0xFF	; 255
     c64:	1f 4f       	sbci	r17, 0xFF	; 255
     c66:	05 c0       	rjmp	.+10     	; 0xc72 <vfprintf+0x21c>
     c68:	ef 2c       	mov	r14, r15
     c6a:	ff 24       	eor	r15, r15
     c6c:	f0 e1       	ldi	r31, 0x10	; 16
     c6e:	ef 22       	and	r14, r31
     c70:	ff 24       	eor	r15, r15
     c72:	f8 01       	movw	r30, r16
     c74:	84 91       	lpm	r24, Z+
     c76:	88 23       	and	r24, r24
     c78:	61 f7       	brne	.-40     	; 0xc52 <vfprintf+0x1fc>
     c7a:	14 c1       	rjmp	.+552    	; 0xea4 <vfprintf+0x44e>
     c7c:	f7 fe       	sbrs	r15, 7
     c7e:	12 c0       	rjmp	.+36     	; 0xca4 <vfprintf+0x24e>
     c80:	bc 0c       	add	r11, r12
     c82:	24 fe       	sbrs	r2, 4
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <vfprintf+0x238>
     c86:	8a 81       	ldd	r24, Y+2	; 0x02
     c88:	81 33       	cpi	r24, 0x31	; 49
     c8a:	09 f4       	brne	.+2      	; 0xc8e <vfprintf+0x238>
     c8c:	ba 94       	dec	r11
     c8e:	1b 14       	cp	r1, r11
     c90:	1c f0       	brlt	.+6      	; 0xc98 <vfprintf+0x242>
     c92:	bb 24       	eor	r11, r11
     c94:	b3 94       	inc	r11
     c96:	2d c0       	rjmp	.+90     	; 0xcf2 <vfprintf+0x29c>
     c98:	f8 e0       	ldi	r31, 0x08	; 8
     c9a:	fb 15       	cp	r31, r11
     c9c:	50 f5       	brcc	.+84     	; 0xcf2 <vfprintf+0x29c>
     c9e:	38 e0       	ldi	r19, 0x08	; 8
     ca0:	b3 2e       	mov	r11, r19
     ca2:	27 c0       	rjmp	.+78     	; 0xcf2 <vfprintf+0x29c>
     ca4:	f6 fc       	sbrc	r15, 6
     ca6:	25 c0       	rjmp	.+74     	; 0xcf2 <vfprintf+0x29c>
     ca8:	89 2d       	mov	r24, r9
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	8c 15       	cp	r24, r12
     cae:	9d 05       	cpc	r25, r13
     cb0:	4c f0       	brlt	.+18     	; 0xcc4 <vfprintf+0x26e>
     cb2:	2c ef       	ldi	r18, 0xFC	; 252
     cb4:	c2 16       	cp	r12, r18
     cb6:	2f ef       	ldi	r18, 0xFF	; 255
     cb8:	d2 06       	cpc	r13, r18
     cba:	24 f0       	brlt	.+8      	; 0xcc4 <vfprintf+0x26e>
     cbc:	30 e8       	ldi	r19, 0x80	; 128
     cbe:	f3 2a       	or	r15, r19
     cc0:	01 c0       	rjmp	.+2      	; 0xcc4 <vfprintf+0x26e>
     cc2:	9a 94       	dec	r9
     cc4:	99 20       	and	r9, r9
     cc6:	49 f0       	breq	.+18     	; 0xcda <vfprintf+0x284>
     cc8:	e2 e0       	ldi	r30, 0x02	; 2
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	ec 0f       	add	r30, r28
     cce:	fd 1f       	adc	r31, r29
     cd0:	e9 0d       	add	r30, r9
     cd2:	f1 1d       	adc	r31, r1
     cd4:	80 81       	ld	r24, Z
     cd6:	80 33       	cpi	r24, 0x30	; 48
     cd8:	a1 f3       	breq	.-24     	; 0xcc2 <vfprintf+0x26c>
     cda:	f7 fe       	sbrs	r15, 7
     cdc:	0a c0       	rjmp	.+20     	; 0xcf2 <vfprintf+0x29c>
     cde:	b9 2c       	mov	r11, r9
     ce0:	b3 94       	inc	r11
     ce2:	89 2d       	mov	r24, r9
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	c8 16       	cp	r12, r24
     ce8:	d9 06       	cpc	r13, r25
     cea:	14 f0       	brlt	.+4      	; 0xcf0 <vfprintf+0x29a>
     cec:	99 24       	eor	r9, r9
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <vfprintf+0x29c>
     cf0:	9c 18       	sub	r9, r12
     cf2:	f7 fc       	sbrc	r15, 7
     cf4:	03 c0       	rjmp	.+6      	; 0xcfc <vfprintf+0x2a6>
     cf6:	25 e0       	ldi	r18, 0x05	; 5
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	09 c0       	rjmp	.+18     	; 0xd0e <vfprintf+0x2b8>
     cfc:	1c 14       	cp	r1, r12
     cfe:	1d 04       	cpc	r1, r13
     d00:	1c f0       	brlt	.+6      	; 0xd08 <vfprintf+0x2b2>
     d02:	21 e0       	ldi	r18, 0x01	; 1
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	03 c0       	rjmp	.+6      	; 0xd0e <vfprintf+0x2b8>
     d08:	96 01       	movw	r18, r12
     d0a:	2f 5f       	subi	r18, 0xFF	; 255
     d0c:	3f 4f       	sbci	r19, 0xFF	; 255
     d0e:	11 23       	and	r17, r17
     d10:	11 f0       	breq	.+4      	; 0xd16 <vfprintf+0x2c0>
     d12:	2f 5f       	subi	r18, 0xFF	; 255
     d14:	3f 4f       	sbci	r19, 0xFF	; 255
     d16:	99 20       	and	r9, r9
     d18:	29 f0       	breq	.+10     	; 0xd24 <vfprintf+0x2ce>
     d1a:	89 2d       	mov	r24, r9
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	01 96       	adiw	r24, 0x01	; 1
     d20:	28 0f       	add	r18, r24
     d22:	39 1f       	adc	r19, r25
     d24:	88 2d       	mov	r24, r8
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	28 17       	cp	r18, r24
     d2a:	39 07       	cpc	r19, r25
     d2c:	14 f0       	brlt	.+4      	; 0xd32 <vfprintf+0x2dc>
     d2e:	88 24       	eor	r8, r8
     d30:	01 c0       	rjmp	.+2      	; 0xd34 <vfprintf+0x2de>
     d32:	82 1a       	sub	r8, r18
     d34:	4f 2c       	mov	r4, r15
     d36:	55 24       	eor	r5, r5
     d38:	c2 01       	movw	r24, r4
     d3a:	89 70       	andi	r24, 0x09	; 9
     d3c:	90 70       	andi	r25, 0x00	; 0
     d3e:	89 2b       	or	r24, r25
     d40:	39 f0       	breq	.+14     	; 0xd50 <vfprintf+0x2fa>
     d42:	08 c0       	rjmp	.+16     	; 0xd54 <vfprintf+0x2fe>
     d44:	80 e2       	ldi	r24, 0x20	; 32
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	b3 01       	movw	r22, r6
     d4a:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     d4e:	8a 94       	dec	r8
     d50:	88 20       	and	r8, r8
     d52:	c1 f7       	brne	.-16     	; 0xd44 <vfprintf+0x2ee>
     d54:	11 23       	and	r17, r17
     d56:	29 f0       	breq	.+10     	; 0xd62 <vfprintf+0x30c>
     d58:	81 2f       	mov	r24, r17
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	b3 01       	movw	r22, r6
     d5e:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     d62:	43 fe       	sbrs	r4, 3
     d64:	07 c0       	rjmp	.+14     	; 0xd74 <vfprintf+0x31e>
     d66:	08 c0       	rjmp	.+16     	; 0xd78 <vfprintf+0x322>
     d68:	80 e3       	ldi	r24, 0x30	; 48
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	b3 01       	movw	r22, r6
     d6e:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     d72:	8a 94       	dec	r8
     d74:	88 20       	and	r8, r8
     d76:	c1 f7       	brne	.-16     	; 0xd68 <vfprintf+0x312>
     d78:	f7 fe       	sbrs	r15, 7
     d7a:	46 c0       	rjmp	.+140    	; 0xe08 <vfprintf+0x3b2>
     d7c:	86 01       	movw	r16, r12
     d7e:	d7 fe       	sbrs	r13, 7
     d80:	02 c0       	rjmp	.+4      	; 0xd86 <vfprintf+0x330>
     d82:	00 e0       	ldi	r16, 0x00	; 0
     d84:	10 e0       	ldi	r17, 0x00	; 0
     d86:	76 01       	movw	r14, r12
     d88:	08 94       	sec
     d8a:	e1 1c       	adc	r14, r1
     d8c:	f1 1c       	adc	r15, r1
     d8e:	e0 1a       	sub	r14, r16
     d90:	f1 0a       	sbc	r15, r17
     d92:	41 e0       	ldi	r20, 0x01	; 1
     d94:	50 e0       	ldi	r21, 0x00	; 0
     d96:	4c 0f       	add	r20, r28
     d98:	5d 1f       	adc	r21, r29
     d9a:	e4 0e       	add	r14, r20
     d9c:	f5 1e       	adc	r15, r21
     d9e:	26 01       	movw	r4, r12
     da0:	4b 18       	sub	r4, r11
     da2:	51 08       	sbc	r5, r1
     da4:	89 2d       	mov	r24, r9
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	aa 24       	eor	r10, r10
     daa:	bb 24       	eor	r11, r11
     dac:	a8 1a       	sub	r10, r24
     dae:	b9 0a       	sbc	r11, r25
     db0:	5f ef       	ldi	r21, 0xFF	; 255
     db2:	0f 3f       	cpi	r16, 0xFF	; 255
     db4:	15 07       	cpc	r17, r21
     db6:	29 f4       	brne	.+10     	; 0xdc2 <vfprintf+0x36c>
     db8:	8e e2       	ldi	r24, 0x2E	; 46
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	b3 01       	movw	r22, r6
     dbe:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     dc2:	c0 16       	cp	r12, r16
     dc4:	d1 06       	cpc	r13, r17
     dc6:	34 f0       	brlt	.+12     	; 0xdd4 <vfprintf+0x37e>
     dc8:	40 16       	cp	r4, r16
     dca:	51 06       	cpc	r5, r17
     dcc:	1c f4       	brge	.+6      	; 0xdd4 <vfprintf+0x37e>
     dce:	f7 01       	movw	r30, r14
     dd0:	80 81       	ld	r24, Z
     dd2:	01 c0       	rjmp	.+2      	; 0xdd6 <vfprintf+0x380>
     dd4:	80 e3       	ldi	r24, 0x30	; 48
     dd6:	01 50       	subi	r16, 0x01	; 1
     dd8:	10 40       	sbci	r17, 0x00	; 0
     dda:	08 94       	sec
     ddc:	e1 1c       	adc	r14, r1
     dde:	f1 1c       	adc	r15, r1
     de0:	0a 15       	cp	r16, r10
     de2:	1b 05       	cpc	r17, r11
     de4:	2c f0       	brlt	.+10     	; 0xdf0 <vfprintf+0x39a>
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	b3 01       	movw	r22, r6
     dea:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     dee:	e0 cf       	rjmp	.-64     	; 0xdb0 <vfprintf+0x35a>
     df0:	0c 15       	cp	r16, r12
     df2:	1d 05       	cpc	r17, r13
     df4:	39 f4       	brne	.+14     	; 0xe04 <vfprintf+0x3ae>
     df6:	9a 81       	ldd	r25, Y+2	; 0x02
     df8:	96 33       	cpi	r25, 0x36	; 54
     dfa:	18 f4       	brcc	.+6      	; 0xe02 <vfprintf+0x3ac>
     dfc:	95 33       	cpi	r25, 0x35	; 53
     dfe:	11 f4       	brne	.+4      	; 0xe04 <vfprintf+0x3ae>
     e00:	24 fe       	sbrs	r2, 4
     e02:	81 e3       	ldi	r24, 0x31	; 49
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	4b c0       	rjmp	.+150    	; 0xe9e <vfprintf+0x448>
     e08:	8a 81       	ldd	r24, Y+2	; 0x02
     e0a:	81 33       	cpi	r24, 0x31	; 49
     e0c:	09 f0       	breq	.+2      	; 0xe10 <vfprintf+0x3ba>
     e0e:	0f 7e       	andi	r16, 0xEF	; 239
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	b3 01       	movw	r22, r6
     e14:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     e18:	99 20       	and	r9, r9
     e1a:	a1 f0       	breq	.+40     	; 0xe44 <vfprintf+0x3ee>
     e1c:	8e e2       	ldi	r24, 0x2E	; 46
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	b3 01       	movw	r22, r6
     e22:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     e26:	12 e0       	ldi	r17, 0x02	; 2
     e28:	e1 e0       	ldi	r30, 0x01	; 1
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	ec 0f       	add	r30, r28
     e2e:	fd 1f       	adc	r31, r29
     e30:	e1 0f       	add	r30, r17
     e32:	f1 1d       	adc	r31, r1
     e34:	1f 5f       	subi	r17, 0xFF	; 255
     e36:	80 81       	ld	r24, Z
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	b3 01       	movw	r22, r6
     e3c:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     e40:	9a 94       	dec	r9
     e42:	91 f7       	brne	.-28     	; 0xe28 <vfprintf+0x3d2>
     e44:	44 fc       	sbrc	r4, 4
     e46:	03 c0       	rjmp	.+6      	; 0xe4e <vfprintf+0x3f8>
     e48:	85 e6       	ldi	r24, 0x65	; 101
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	02 c0       	rjmp	.+4      	; 0xe52 <vfprintf+0x3fc>
     e4e:	85 e4       	ldi	r24, 0x45	; 69
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	b3 01       	movw	r22, r6
     e54:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     e58:	d7 fc       	sbrc	r13, 7
     e5a:	05 c0       	rjmp	.+10     	; 0xe66 <vfprintf+0x410>
     e5c:	c1 14       	cp	r12, r1
     e5e:	d1 04       	cpc	r13, r1
     e60:	41 f4       	brne	.+16     	; 0xe72 <vfprintf+0x41c>
     e62:	04 ff       	sbrs	r16, 4
     e64:	06 c0       	rjmp	.+12     	; 0xe72 <vfprintf+0x41c>
     e66:	d0 94       	com	r13
     e68:	c1 94       	neg	r12
     e6a:	d1 08       	sbc	r13, r1
     e6c:	d3 94       	inc	r13
     e6e:	8d e2       	ldi	r24, 0x2D	; 45
     e70:	01 c0       	rjmp	.+2      	; 0xe74 <vfprintf+0x41e>
     e72:	8b e2       	ldi	r24, 0x2B	; 43
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	b3 01       	movw	r22, r6
     e78:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     e7c:	80 e3       	ldi	r24, 0x30	; 48
     e7e:	05 c0       	rjmp	.+10     	; 0xe8a <vfprintf+0x434>
     e80:	8f 5f       	subi	r24, 0xFF	; 255
     e82:	26 ef       	ldi	r18, 0xF6	; 246
     e84:	3f ef       	ldi	r19, 0xFF	; 255
     e86:	c2 0e       	add	r12, r18
     e88:	d3 1e       	adc	r13, r19
     e8a:	3a e0       	ldi	r19, 0x0A	; 10
     e8c:	c3 16       	cp	r12, r19
     e8e:	d1 04       	cpc	r13, r1
     e90:	bc f7       	brge	.-18     	; 0xe80 <vfprintf+0x42a>
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	b3 01       	movw	r22, r6
     e96:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     e9a:	c6 01       	movw	r24, r12
     e9c:	c0 96       	adiw	r24, 0x30	; 48
     e9e:	b3 01       	movw	r22, r6
     ea0:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     ea4:	cc 84       	ldd	r12, Y+12	; 0x0c
     ea6:	dd 84       	ldd	r13, Y+13	; 0x0d
     ea8:	52 c1       	rjmp	.+676    	; 0x114e <vfprintf+0x6f8>
     eaa:	93 36       	cpi	r25, 0x63	; 99
     eac:	31 f0       	breq	.+12     	; 0xeba <vfprintf+0x464>
     eae:	93 37       	cpi	r25, 0x73	; 115
     eb0:	99 f0       	breq	.+38     	; 0xed8 <vfprintf+0x482>
     eb2:	93 35       	cpi	r25, 0x53	; 83
     eb4:	09 f0       	breq	.+2      	; 0xeb8 <vfprintf+0x462>
     eb6:	59 c0       	rjmp	.+178    	; 0xf6a <vfprintf+0x514>
     eb8:	23 c0       	rjmp	.+70     	; 0xf00 <vfprintf+0x4aa>
     eba:	f6 01       	movw	r30, r12
     ebc:	80 81       	ld	r24, Z
     ebe:	89 83       	std	Y+1, r24	; 0x01
     ec0:	5e 01       	movw	r10, r28
     ec2:	08 94       	sec
     ec4:	a1 1c       	adc	r10, r1
     ec6:	b1 1c       	adc	r11, r1
     ec8:	22 e0       	ldi	r18, 0x02	; 2
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	c2 0e       	add	r12, r18
     ece:	d3 1e       	adc	r13, r19
     ed0:	21 e0       	ldi	r18, 0x01	; 1
     ed2:	e2 2e       	mov	r14, r18
     ed4:	f1 2c       	mov	r15, r1
     ed6:	12 c0       	rjmp	.+36     	; 0xefc <vfprintf+0x4a6>
     ed8:	f6 01       	movw	r30, r12
     eda:	a0 80       	ld	r10, Z
     edc:	b1 80       	ldd	r11, Z+1	; 0x01
     ede:	16 fd       	sbrc	r17, 6
     ee0:	03 c0       	rjmp	.+6      	; 0xee8 <vfprintf+0x492>
     ee2:	6f ef       	ldi	r22, 0xFF	; 255
     ee4:	7f ef       	ldi	r23, 0xFF	; 255
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <vfprintf+0x496>
     ee8:	69 2d       	mov	r22, r9
     eea:	70 e0       	ldi	r23, 0x00	; 0
     eec:	22 e0       	ldi	r18, 0x02	; 2
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	c2 0e       	add	r12, r18
     ef2:	d3 1e       	adc	r13, r19
     ef4:	c5 01       	movw	r24, r10
     ef6:	0e 94 7b 0c 	call	0x18f6	; 0x18f6 <strnlen>
     efa:	7c 01       	movw	r14, r24
     efc:	1f 77       	andi	r17, 0x7F	; 127
     efe:	13 c0       	rjmp	.+38     	; 0xf26 <vfprintf+0x4d0>
     f00:	f6 01       	movw	r30, r12
     f02:	a0 80       	ld	r10, Z
     f04:	b1 80       	ldd	r11, Z+1	; 0x01
     f06:	16 fd       	sbrc	r17, 6
     f08:	03 c0       	rjmp	.+6      	; 0xf10 <vfprintf+0x4ba>
     f0a:	6f ef       	ldi	r22, 0xFF	; 255
     f0c:	7f ef       	ldi	r23, 0xFF	; 255
     f0e:	02 c0       	rjmp	.+4      	; 0xf14 <vfprintf+0x4be>
     f10:	69 2d       	mov	r22, r9
     f12:	70 e0       	ldi	r23, 0x00	; 0
     f14:	22 e0       	ldi	r18, 0x02	; 2
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	c2 0e       	add	r12, r18
     f1a:	d3 1e       	adc	r13, r19
     f1c:	c5 01       	movw	r24, r10
     f1e:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <strnlen_P>
     f22:	7c 01       	movw	r14, r24
     f24:	10 68       	ori	r17, 0x80	; 128
     f26:	13 ff       	sbrs	r17, 3
     f28:	07 c0       	rjmp	.+14     	; 0xf38 <vfprintf+0x4e2>
     f2a:	1b c0       	rjmp	.+54     	; 0xf62 <vfprintf+0x50c>
     f2c:	80 e2       	ldi	r24, 0x20	; 32
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	b3 01       	movw	r22, r6
     f32:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     f36:	8a 94       	dec	r8
     f38:	88 2d       	mov	r24, r8
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	e8 16       	cp	r14, r24
     f3e:	f9 06       	cpc	r15, r25
     f40:	a8 f3       	brcs	.-22     	; 0xf2c <vfprintf+0x4d6>
     f42:	0f c0       	rjmp	.+30     	; 0xf62 <vfprintf+0x50c>
     f44:	f5 01       	movw	r30, r10
     f46:	17 fd       	sbrc	r17, 7
     f48:	85 91       	lpm	r24, Z+
     f4a:	17 ff       	sbrs	r17, 7
     f4c:	81 91       	ld	r24, Z+
     f4e:	5f 01       	movw	r10, r30
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	b3 01       	movw	r22, r6
     f54:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
     f58:	81 10       	cpse	r8, r1
     f5a:	8a 94       	dec	r8
     f5c:	08 94       	sec
     f5e:	e1 08       	sbc	r14, r1
     f60:	f1 08       	sbc	r15, r1
     f62:	e1 14       	cp	r14, r1
     f64:	f1 04       	cpc	r15, r1
     f66:	71 f7       	brne	.-36     	; 0xf44 <vfprintf+0x4ee>
     f68:	f2 c0       	rjmp	.+484    	; 0x114e <vfprintf+0x6f8>
     f6a:	94 36       	cpi	r25, 0x64	; 100
     f6c:	11 f0       	breq	.+4      	; 0xf72 <vfprintf+0x51c>
     f6e:	99 36       	cpi	r25, 0x69	; 105
     f70:	89 f5       	brne	.+98     	; 0xfd4 <vfprintf+0x57e>
     f72:	17 ff       	sbrs	r17, 7
     f74:	08 c0       	rjmp	.+16     	; 0xf86 <vfprintf+0x530>
     f76:	f6 01       	movw	r30, r12
     f78:	20 81       	ld	r18, Z
     f7a:	31 81       	ldd	r19, Z+1	; 0x01
     f7c:	42 81       	ldd	r20, Z+2	; 0x02
     f7e:	53 81       	ldd	r21, Z+3	; 0x03
     f80:	84 e0       	ldi	r24, 0x04	; 4
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0a c0       	rjmp	.+20     	; 0xf9a <vfprintf+0x544>
     f86:	f6 01       	movw	r30, r12
     f88:	80 81       	ld	r24, Z
     f8a:	91 81       	ldd	r25, Z+1	; 0x01
     f8c:	9c 01       	movw	r18, r24
     f8e:	44 27       	eor	r20, r20
     f90:	37 fd       	sbrc	r19, 7
     f92:	40 95       	com	r20
     f94:	54 2f       	mov	r21, r20
     f96:	82 e0       	ldi	r24, 0x02	; 2
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	c8 0e       	add	r12, r24
     f9c:	d9 1e       	adc	r13, r25
     f9e:	9f e6       	ldi	r25, 0x6F	; 111
     fa0:	f9 2e       	mov	r15, r25
     fa2:	f1 22       	and	r15, r17
     fa4:	57 ff       	sbrs	r21, 7
     fa6:	09 c0       	rjmp	.+18     	; 0xfba <vfprintf+0x564>
     fa8:	50 95       	com	r21
     faa:	40 95       	com	r20
     fac:	30 95       	com	r19
     fae:	21 95       	neg	r18
     fb0:	3f 4f       	sbci	r19, 0xFF	; 255
     fb2:	4f 4f       	sbci	r20, 0xFF	; 255
     fb4:	5f 4f       	sbci	r21, 0xFF	; 255
     fb6:	90 e8       	ldi	r25, 0x80	; 128
     fb8:	f9 2a       	or	r15, r25
     fba:	ca 01       	movw	r24, r20
     fbc:	b9 01       	movw	r22, r18
     fbe:	ae 01       	movw	r20, r28
     fc0:	4f 5f       	subi	r20, 0xFF	; 255
     fc2:	5f 4f       	sbci	r21, 0xFF	; 255
     fc4:	2a e0       	ldi	r18, 0x0A	; 10
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__ultoa_invert>
     fcc:	e8 2e       	mov	r14, r24
     fce:	e8 89       	ldd	r30, Y+16	; 0x10
     fd0:	ee 1a       	sub	r14, r30
     fd2:	41 c0       	rjmp	.+130    	; 0x1056 <vfprintf+0x600>
     fd4:	95 37       	cpi	r25, 0x75	; 117
     fd6:	21 f4       	brne	.+8      	; 0xfe0 <vfprintf+0x58a>
     fd8:	1f 7e       	andi	r17, 0xEF	; 239
     fda:	2a e0       	ldi	r18, 0x0A	; 10
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	1c c0       	rjmp	.+56     	; 0x1018 <vfprintf+0x5c2>
     fe0:	19 7f       	andi	r17, 0xF9	; 249
     fe2:	9f 36       	cpi	r25, 0x6F	; 111
     fe4:	61 f0       	breq	.+24     	; 0xffe <vfprintf+0x5a8>
     fe6:	90 37       	cpi	r25, 0x70	; 112
     fe8:	20 f4       	brcc	.+8      	; 0xff2 <vfprintf+0x59c>
     fea:	98 35       	cpi	r25, 0x58	; 88
     fec:	09 f0       	breq	.+2      	; 0xff0 <vfprintf+0x59a>
     fee:	b2 c0       	rjmp	.+356    	; 0x1154 <vfprintf+0x6fe>
     ff0:	0f c0       	rjmp	.+30     	; 0x1010 <vfprintf+0x5ba>
     ff2:	90 37       	cpi	r25, 0x70	; 112
     ff4:	39 f0       	breq	.+14     	; 0x1004 <vfprintf+0x5ae>
     ff6:	98 37       	cpi	r25, 0x78	; 120
     ff8:	09 f0       	breq	.+2      	; 0xffc <vfprintf+0x5a6>
     ffa:	ac c0       	rjmp	.+344    	; 0x1154 <vfprintf+0x6fe>
     ffc:	04 c0       	rjmp	.+8      	; 0x1006 <vfprintf+0x5b0>
     ffe:	28 e0       	ldi	r18, 0x08	; 8
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	0a c0       	rjmp	.+20     	; 0x1018 <vfprintf+0x5c2>
    1004:	10 61       	ori	r17, 0x10	; 16
    1006:	14 fd       	sbrc	r17, 4
    1008:	14 60       	ori	r17, 0x04	; 4
    100a:	20 e1       	ldi	r18, 0x10	; 16
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	04 c0       	rjmp	.+8      	; 0x1018 <vfprintf+0x5c2>
    1010:	14 fd       	sbrc	r17, 4
    1012:	16 60       	ori	r17, 0x06	; 6
    1014:	20 e1       	ldi	r18, 0x10	; 16
    1016:	32 e0       	ldi	r19, 0x02	; 2
    1018:	17 ff       	sbrs	r17, 7
    101a:	08 c0       	rjmp	.+16     	; 0x102c <vfprintf+0x5d6>
    101c:	f6 01       	movw	r30, r12
    101e:	60 81       	ld	r22, Z
    1020:	71 81       	ldd	r23, Z+1	; 0x01
    1022:	82 81       	ldd	r24, Z+2	; 0x02
    1024:	93 81       	ldd	r25, Z+3	; 0x03
    1026:	44 e0       	ldi	r20, 0x04	; 4
    1028:	50 e0       	ldi	r21, 0x00	; 0
    102a:	08 c0       	rjmp	.+16     	; 0x103c <vfprintf+0x5e6>
    102c:	f6 01       	movw	r30, r12
    102e:	80 81       	ld	r24, Z
    1030:	91 81       	ldd	r25, Z+1	; 0x01
    1032:	bc 01       	movw	r22, r24
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	42 e0       	ldi	r20, 0x02	; 2
    103a:	50 e0       	ldi	r21, 0x00	; 0
    103c:	c4 0e       	add	r12, r20
    103e:	d5 1e       	adc	r13, r21
    1040:	ae 01       	movw	r20, r28
    1042:	4f 5f       	subi	r20, 0xFF	; 255
    1044:	5f 4f       	sbci	r21, 0xFF	; 255
    1046:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__ultoa_invert>
    104a:	e8 2e       	mov	r14, r24
    104c:	58 89       	ldd	r21, Y+16	; 0x10
    104e:	e5 1a       	sub	r14, r21
    1050:	8f e7       	ldi	r24, 0x7F	; 127
    1052:	f8 2e       	mov	r15, r24
    1054:	f1 22       	and	r15, r17
    1056:	f6 fe       	sbrs	r15, 6
    1058:	0b c0       	rjmp	.+22     	; 0x1070 <vfprintf+0x61a>
    105a:	8e ef       	ldi	r24, 0xFE	; 254
    105c:	f8 22       	and	r15, r24
    105e:	e9 14       	cp	r14, r9
    1060:	38 f4       	brcc	.+14     	; 0x1070 <vfprintf+0x61a>
    1062:	f4 fe       	sbrs	r15, 4
    1064:	07 c0       	rjmp	.+14     	; 0x1074 <vfprintf+0x61e>
    1066:	f2 fc       	sbrc	r15, 2
    1068:	05 c0       	rjmp	.+10     	; 0x1074 <vfprintf+0x61e>
    106a:	9f ee       	ldi	r25, 0xEF	; 239
    106c:	f9 22       	and	r15, r25
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <vfprintf+0x61e>
    1070:	1e 2d       	mov	r17, r14
    1072:	01 c0       	rjmp	.+2      	; 0x1076 <vfprintf+0x620>
    1074:	19 2d       	mov	r17, r9
    1076:	f4 fe       	sbrs	r15, 4
    1078:	0d c0       	rjmp	.+26     	; 0x1094 <vfprintf+0x63e>
    107a:	fe 01       	movw	r30, r28
    107c:	ee 0d       	add	r30, r14
    107e:	f1 1d       	adc	r31, r1
    1080:	80 81       	ld	r24, Z
    1082:	80 33       	cpi	r24, 0x30	; 48
    1084:	19 f4       	brne	.+6      	; 0x108c <vfprintf+0x636>
    1086:	e9 ee       	ldi	r30, 0xE9	; 233
    1088:	fe 22       	and	r15, r30
    108a:	08 c0       	rjmp	.+16     	; 0x109c <vfprintf+0x646>
    108c:	1f 5f       	subi	r17, 0xFF	; 255
    108e:	f2 fe       	sbrs	r15, 2
    1090:	05 c0       	rjmp	.+10     	; 0x109c <vfprintf+0x646>
    1092:	03 c0       	rjmp	.+6      	; 0x109a <vfprintf+0x644>
    1094:	8f 2d       	mov	r24, r15
    1096:	86 78       	andi	r24, 0x86	; 134
    1098:	09 f0       	breq	.+2      	; 0x109c <vfprintf+0x646>
    109a:	1f 5f       	subi	r17, 0xFF	; 255
    109c:	0f 2d       	mov	r16, r15
    109e:	f3 fc       	sbrc	r15, 3
    10a0:	14 c0       	rjmp	.+40     	; 0x10ca <vfprintf+0x674>
    10a2:	f0 fe       	sbrs	r15, 0
    10a4:	0f c0       	rjmp	.+30     	; 0x10c4 <vfprintf+0x66e>
    10a6:	18 15       	cp	r17, r8
    10a8:	10 f0       	brcs	.+4      	; 0x10ae <vfprintf+0x658>
    10aa:	9e 2c       	mov	r9, r14
    10ac:	0b c0       	rjmp	.+22     	; 0x10c4 <vfprintf+0x66e>
    10ae:	9e 2c       	mov	r9, r14
    10b0:	98 0c       	add	r9, r8
    10b2:	91 1a       	sub	r9, r17
    10b4:	18 2d       	mov	r17, r8
    10b6:	06 c0       	rjmp	.+12     	; 0x10c4 <vfprintf+0x66e>
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	b3 01       	movw	r22, r6
    10be:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
    10c2:	1f 5f       	subi	r17, 0xFF	; 255
    10c4:	18 15       	cp	r17, r8
    10c6:	c0 f3       	brcs	.-16     	; 0x10b8 <vfprintf+0x662>
    10c8:	04 c0       	rjmp	.+8      	; 0x10d2 <vfprintf+0x67c>
    10ca:	18 15       	cp	r17, r8
    10cc:	10 f4       	brcc	.+4      	; 0x10d2 <vfprintf+0x67c>
    10ce:	81 1a       	sub	r8, r17
    10d0:	01 c0       	rjmp	.+2      	; 0x10d4 <vfprintf+0x67e>
    10d2:	88 24       	eor	r8, r8
    10d4:	04 ff       	sbrs	r16, 4
    10d6:	0f c0       	rjmp	.+30     	; 0x10f6 <vfprintf+0x6a0>
    10d8:	80 e3       	ldi	r24, 0x30	; 48
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	b3 01       	movw	r22, r6
    10de:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
    10e2:	02 ff       	sbrs	r16, 2
    10e4:	1d c0       	rjmp	.+58     	; 0x1120 <vfprintf+0x6ca>
    10e6:	01 fd       	sbrc	r16, 1
    10e8:	03 c0       	rjmp	.+6      	; 0x10f0 <vfprintf+0x69a>
    10ea:	88 e7       	ldi	r24, 0x78	; 120
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	0e c0       	rjmp	.+28     	; 0x110c <vfprintf+0x6b6>
    10f0:	88 e5       	ldi	r24, 0x58	; 88
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	0b c0       	rjmp	.+22     	; 0x110c <vfprintf+0x6b6>
    10f6:	80 2f       	mov	r24, r16
    10f8:	86 78       	andi	r24, 0x86	; 134
    10fa:	91 f0       	breq	.+36     	; 0x1120 <vfprintf+0x6ca>
    10fc:	01 ff       	sbrs	r16, 1
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <vfprintf+0x6ae>
    1100:	8b e2       	ldi	r24, 0x2B	; 43
    1102:	01 c0       	rjmp	.+2      	; 0x1106 <vfprintf+0x6b0>
    1104:	80 e2       	ldi	r24, 0x20	; 32
    1106:	f7 fc       	sbrc	r15, 7
    1108:	8d e2       	ldi	r24, 0x2D	; 45
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	b3 01       	movw	r22, r6
    110e:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
    1112:	06 c0       	rjmp	.+12     	; 0x1120 <vfprintf+0x6ca>
    1114:	80 e3       	ldi	r24, 0x30	; 48
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	b3 01       	movw	r22, r6
    111a:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
    111e:	9a 94       	dec	r9
    1120:	e9 14       	cp	r14, r9
    1122:	c0 f3       	brcs	.-16     	; 0x1114 <vfprintf+0x6be>
    1124:	ea 94       	dec	r14
    1126:	e1 e0       	ldi	r30, 0x01	; 1
    1128:	f0 e0       	ldi	r31, 0x00	; 0
    112a:	ec 0f       	add	r30, r28
    112c:	fd 1f       	adc	r31, r29
    112e:	ee 0d       	add	r30, r14
    1130:	f1 1d       	adc	r31, r1
    1132:	80 81       	ld	r24, Z
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	b3 01       	movw	r22, r6
    1138:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
    113c:	ee 20       	and	r14, r14
    113e:	91 f7       	brne	.-28     	; 0x1124 <vfprintf+0x6ce>
    1140:	06 c0       	rjmp	.+12     	; 0x114e <vfprintf+0x6f8>
    1142:	80 e2       	ldi	r24, 0x20	; 32
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	b3 01       	movw	r22, r6
    1148:	0e 94 86 0c 	call	0x190c	; 0x190c <fputc>
    114c:	8a 94       	dec	r8
    114e:	88 20       	and	r8, r8
    1150:	c1 f7       	brne	.-16     	; 0x1142 <vfprintf+0x6ec>
    1152:	99 cc       	rjmp	.-1742   	; 0xa86 <vfprintf+0x30>
    1154:	f3 01       	movw	r30, r6
    1156:	66 81       	ldd	r22, Z+6	; 0x06
    1158:	77 81       	ldd	r23, Z+7	; 0x07
    115a:	cb 01       	movw	r24, r22
    115c:	61 96       	adiw	r28, 0x11	; 17
    115e:	e2 e1       	ldi	r30, 0x12	; 18
    1160:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__epilogue_restores__>

00001164 <__subsf3>:
    1164:	50 58       	subi	r21, 0x80	; 128

00001166 <__addsf3>:
    1166:	bb 27       	eor	r27, r27
    1168:	aa 27       	eor	r26, r26
    116a:	0e d0       	rcall	.+28     	; 0x1188 <__addsf3x>
    116c:	75 c1       	rjmp	.+746    	; 0x1458 <__fp_round>
    116e:	66 d1       	rcall	.+716    	; 0x143c <__fp_pscA>
    1170:	30 f0       	brcs	.+12     	; 0x117e <__addsf3+0x18>
    1172:	6b d1       	rcall	.+726    	; 0x144a <__fp_pscB>
    1174:	20 f0       	brcs	.+8      	; 0x117e <__addsf3+0x18>
    1176:	31 f4       	brne	.+12     	; 0x1184 <__addsf3+0x1e>
    1178:	9f 3f       	cpi	r25, 0xFF	; 255
    117a:	11 f4       	brne	.+4      	; 0x1180 <__addsf3+0x1a>
    117c:	1e f4       	brtc	.+6      	; 0x1184 <__addsf3+0x1e>
    117e:	5b c1       	rjmp	.+694    	; 0x1436 <__fp_nan>
    1180:	0e f4       	brtc	.+2      	; 0x1184 <__addsf3+0x1e>
    1182:	e0 95       	com	r30
    1184:	e7 fb       	bst	r30, 7
    1186:	51 c1       	rjmp	.+674    	; 0x142a <__fp_inf>

00001188 <__addsf3x>:
    1188:	e9 2f       	mov	r30, r25
    118a:	77 d1       	rcall	.+750    	; 0x147a <__fp_split3>
    118c:	80 f3       	brcs	.-32     	; 0x116e <__addsf3+0x8>
    118e:	ba 17       	cp	r27, r26
    1190:	62 07       	cpc	r22, r18
    1192:	73 07       	cpc	r23, r19
    1194:	84 07       	cpc	r24, r20
    1196:	95 07       	cpc	r25, r21
    1198:	18 f0       	brcs	.+6      	; 0x11a0 <__addsf3x+0x18>
    119a:	71 f4       	brne	.+28     	; 0x11b8 <__addsf3x+0x30>
    119c:	9e f5       	brtc	.+102    	; 0x1204 <__addsf3x+0x7c>
    119e:	8f c1       	rjmp	.+798    	; 0x14be <__fp_zero>
    11a0:	0e f4       	brtc	.+2      	; 0x11a4 <__addsf3x+0x1c>
    11a2:	e0 95       	com	r30
    11a4:	0b 2e       	mov	r0, r27
    11a6:	ba 2f       	mov	r27, r26
    11a8:	a0 2d       	mov	r26, r0
    11aa:	0b 01       	movw	r0, r22
    11ac:	b9 01       	movw	r22, r18
    11ae:	90 01       	movw	r18, r0
    11b0:	0c 01       	movw	r0, r24
    11b2:	ca 01       	movw	r24, r20
    11b4:	a0 01       	movw	r20, r0
    11b6:	11 24       	eor	r1, r1
    11b8:	ff 27       	eor	r31, r31
    11ba:	59 1b       	sub	r21, r25
    11bc:	99 f0       	breq	.+38     	; 0x11e4 <__addsf3x+0x5c>
    11be:	59 3f       	cpi	r21, 0xF9	; 249
    11c0:	50 f4       	brcc	.+20     	; 0x11d6 <__addsf3x+0x4e>
    11c2:	50 3e       	cpi	r21, 0xE0	; 224
    11c4:	68 f1       	brcs	.+90     	; 0x1220 <__addsf3x+0x98>
    11c6:	1a 16       	cp	r1, r26
    11c8:	f0 40       	sbci	r31, 0x00	; 0
    11ca:	a2 2f       	mov	r26, r18
    11cc:	23 2f       	mov	r18, r19
    11ce:	34 2f       	mov	r19, r20
    11d0:	44 27       	eor	r20, r20
    11d2:	58 5f       	subi	r21, 0xF8	; 248
    11d4:	f3 cf       	rjmp	.-26     	; 0x11bc <__addsf3x+0x34>
    11d6:	46 95       	lsr	r20
    11d8:	37 95       	ror	r19
    11da:	27 95       	ror	r18
    11dc:	a7 95       	ror	r26
    11de:	f0 40       	sbci	r31, 0x00	; 0
    11e0:	53 95       	inc	r21
    11e2:	c9 f7       	brne	.-14     	; 0x11d6 <__addsf3x+0x4e>
    11e4:	7e f4       	brtc	.+30     	; 0x1204 <__addsf3x+0x7c>
    11e6:	1f 16       	cp	r1, r31
    11e8:	ba 0b       	sbc	r27, r26
    11ea:	62 0b       	sbc	r22, r18
    11ec:	73 0b       	sbc	r23, r19
    11ee:	84 0b       	sbc	r24, r20
    11f0:	ba f0       	brmi	.+46     	; 0x1220 <__addsf3x+0x98>
    11f2:	91 50       	subi	r25, 0x01	; 1
    11f4:	a1 f0       	breq	.+40     	; 0x121e <__addsf3x+0x96>
    11f6:	ff 0f       	add	r31, r31
    11f8:	bb 1f       	adc	r27, r27
    11fa:	66 1f       	adc	r22, r22
    11fc:	77 1f       	adc	r23, r23
    11fe:	88 1f       	adc	r24, r24
    1200:	c2 f7       	brpl	.-16     	; 0x11f2 <__addsf3x+0x6a>
    1202:	0e c0       	rjmp	.+28     	; 0x1220 <__addsf3x+0x98>
    1204:	ba 0f       	add	r27, r26
    1206:	62 1f       	adc	r22, r18
    1208:	73 1f       	adc	r23, r19
    120a:	84 1f       	adc	r24, r20
    120c:	48 f4       	brcc	.+18     	; 0x1220 <__addsf3x+0x98>
    120e:	87 95       	ror	r24
    1210:	77 95       	ror	r23
    1212:	67 95       	ror	r22
    1214:	b7 95       	ror	r27
    1216:	f7 95       	ror	r31
    1218:	9e 3f       	cpi	r25, 0xFE	; 254
    121a:	08 f0       	brcs	.+2      	; 0x121e <__addsf3x+0x96>
    121c:	b3 cf       	rjmp	.-154    	; 0x1184 <__addsf3+0x1e>
    121e:	93 95       	inc	r25
    1220:	88 0f       	add	r24, r24
    1222:	08 f0       	brcs	.+2      	; 0x1226 <__addsf3x+0x9e>
    1224:	99 27       	eor	r25, r25
    1226:	ee 0f       	add	r30, r30
    1228:	97 95       	ror	r25
    122a:	87 95       	ror	r24
    122c:	08 95       	ret

0000122e <__cmpsf2>:
    122e:	d9 d0       	rcall	.+434    	; 0x13e2 <__fp_cmp>
    1230:	08 f4       	brcc	.+2      	; 0x1234 <__cmpsf2+0x6>
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	08 95       	ret

00001236 <__divsf3>:
    1236:	0c d0       	rcall	.+24     	; 0x1250 <__divsf3x>
    1238:	0f c1       	rjmp	.+542    	; 0x1458 <__fp_round>
    123a:	07 d1       	rcall	.+526    	; 0x144a <__fp_pscB>
    123c:	40 f0       	brcs	.+16     	; 0x124e <__divsf3+0x18>
    123e:	fe d0       	rcall	.+508    	; 0x143c <__fp_pscA>
    1240:	30 f0       	brcs	.+12     	; 0x124e <__divsf3+0x18>
    1242:	21 f4       	brne	.+8      	; 0x124c <__divsf3+0x16>
    1244:	5f 3f       	cpi	r21, 0xFF	; 255
    1246:	19 f0       	breq	.+6      	; 0x124e <__divsf3+0x18>
    1248:	f0 c0       	rjmp	.+480    	; 0x142a <__fp_inf>
    124a:	51 11       	cpse	r21, r1
    124c:	39 c1       	rjmp	.+626    	; 0x14c0 <__fp_szero>
    124e:	f3 c0       	rjmp	.+486    	; 0x1436 <__fp_nan>

00001250 <__divsf3x>:
    1250:	14 d1       	rcall	.+552    	; 0x147a <__fp_split3>
    1252:	98 f3       	brcs	.-26     	; 0x123a <__divsf3+0x4>

00001254 <__divsf3_pse>:
    1254:	99 23       	and	r25, r25
    1256:	c9 f3       	breq	.-14     	; 0x124a <__divsf3+0x14>
    1258:	55 23       	and	r21, r21
    125a:	b1 f3       	breq	.-20     	; 0x1248 <__divsf3+0x12>
    125c:	95 1b       	sub	r25, r21
    125e:	55 0b       	sbc	r21, r21
    1260:	bb 27       	eor	r27, r27
    1262:	aa 27       	eor	r26, r26
    1264:	62 17       	cp	r22, r18
    1266:	73 07       	cpc	r23, r19
    1268:	84 07       	cpc	r24, r20
    126a:	38 f0       	brcs	.+14     	; 0x127a <__divsf3_pse+0x26>
    126c:	9f 5f       	subi	r25, 0xFF	; 255
    126e:	5f 4f       	sbci	r21, 0xFF	; 255
    1270:	22 0f       	add	r18, r18
    1272:	33 1f       	adc	r19, r19
    1274:	44 1f       	adc	r20, r20
    1276:	aa 1f       	adc	r26, r26
    1278:	a9 f3       	breq	.-22     	; 0x1264 <__divsf3_pse+0x10>
    127a:	33 d0       	rcall	.+102    	; 0x12e2 <__divsf3_pse+0x8e>
    127c:	0e 2e       	mov	r0, r30
    127e:	3a f0       	brmi	.+14     	; 0x128e <__divsf3_pse+0x3a>
    1280:	e0 e8       	ldi	r30, 0x80	; 128
    1282:	30 d0       	rcall	.+96     	; 0x12e4 <__divsf3_pse+0x90>
    1284:	91 50       	subi	r25, 0x01	; 1
    1286:	50 40       	sbci	r21, 0x00	; 0
    1288:	e6 95       	lsr	r30
    128a:	00 1c       	adc	r0, r0
    128c:	ca f7       	brpl	.-14     	; 0x1280 <__divsf3_pse+0x2c>
    128e:	29 d0       	rcall	.+82     	; 0x12e2 <__divsf3_pse+0x8e>
    1290:	fe 2f       	mov	r31, r30
    1292:	27 d0       	rcall	.+78     	; 0x12e2 <__divsf3_pse+0x8e>
    1294:	66 0f       	add	r22, r22
    1296:	77 1f       	adc	r23, r23
    1298:	88 1f       	adc	r24, r24
    129a:	bb 1f       	adc	r27, r27
    129c:	26 17       	cp	r18, r22
    129e:	37 07       	cpc	r19, r23
    12a0:	48 07       	cpc	r20, r24
    12a2:	ab 07       	cpc	r26, r27
    12a4:	b0 e8       	ldi	r27, 0x80	; 128
    12a6:	09 f0       	breq	.+2      	; 0x12aa <__divsf3_pse+0x56>
    12a8:	bb 0b       	sbc	r27, r27
    12aa:	80 2d       	mov	r24, r0
    12ac:	bf 01       	movw	r22, r30
    12ae:	ff 27       	eor	r31, r31
    12b0:	93 58       	subi	r25, 0x83	; 131
    12b2:	5f 4f       	sbci	r21, 0xFF	; 255
    12b4:	2a f0       	brmi	.+10     	; 0x12c0 <__divsf3_pse+0x6c>
    12b6:	9e 3f       	cpi	r25, 0xFE	; 254
    12b8:	51 05       	cpc	r21, r1
    12ba:	68 f0       	brcs	.+26     	; 0x12d6 <__divsf3_pse+0x82>
    12bc:	b6 c0       	rjmp	.+364    	; 0x142a <__fp_inf>
    12be:	00 c1       	rjmp	.+512    	; 0x14c0 <__fp_szero>
    12c0:	5f 3f       	cpi	r21, 0xFF	; 255
    12c2:	ec f3       	brlt	.-6      	; 0x12be <__divsf3_pse+0x6a>
    12c4:	98 3e       	cpi	r25, 0xE8	; 232
    12c6:	dc f3       	brlt	.-10     	; 0x12be <__divsf3_pse+0x6a>
    12c8:	86 95       	lsr	r24
    12ca:	77 95       	ror	r23
    12cc:	67 95       	ror	r22
    12ce:	b7 95       	ror	r27
    12d0:	f7 95       	ror	r31
    12d2:	9f 5f       	subi	r25, 0xFF	; 255
    12d4:	c9 f7       	brne	.-14     	; 0x12c8 <__divsf3_pse+0x74>
    12d6:	88 0f       	add	r24, r24
    12d8:	91 1d       	adc	r25, r1
    12da:	96 95       	lsr	r25
    12dc:	87 95       	ror	r24
    12de:	97 f9       	bld	r25, 7
    12e0:	08 95       	ret
    12e2:	e1 e0       	ldi	r30, 0x01	; 1
    12e4:	66 0f       	add	r22, r22
    12e6:	77 1f       	adc	r23, r23
    12e8:	88 1f       	adc	r24, r24
    12ea:	bb 1f       	adc	r27, r27
    12ec:	62 17       	cp	r22, r18
    12ee:	73 07       	cpc	r23, r19
    12f0:	84 07       	cpc	r24, r20
    12f2:	ba 07       	cpc	r27, r26
    12f4:	20 f0       	brcs	.+8      	; 0x12fe <__divsf3_pse+0xaa>
    12f6:	62 1b       	sub	r22, r18
    12f8:	73 0b       	sbc	r23, r19
    12fa:	84 0b       	sbc	r24, r20
    12fc:	ba 0b       	sbc	r27, r26
    12fe:	ee 1f       	adc	r30, r30
    1300:	88 f7       	brcc	.-30     	; 0x12e4 <__divsf3_pse+0x90>
    1302:	e0 95       	com	r30
    1304:	08 95       	ret

00001306 <__fixsfsi>:
    1306:	04 d0       	rcall	.+8      	; 0x1310 <__fixunssfsi>
    1308:	68 94       	set
    130a:	b1 11       	cpse	r27, r1
    130c:	d9 c0       	rjmp	.+434    	; 0x14c0 <__fp_szero>
    130e:	08 95       	ret

00001310 <__fixunssfsi>:
    1310:	bc d0       	rcall	.+376    	; 0x148a <__fp_splitA>
    1312:	88 f0       	brcs	.+34     	; 0x1336 <__fixunssfsi+0x26>
    1314:	9f 57       	subi	r25, 0x7F	; 127
    1316:	90 f0       	brcs	.+36     	; 0x133c <__fixunssfsi+0x2c>
    1318:	b9 2f       	mov	r27, r25
    131a:	99 27       	eor	r25, r25
    131c:	b7 51       	subi	r27, 0x17	; 23
    131e:	a0 f0       	brcs	.+40     	; 0x1348 <__fixunssfsi+0x38>
    1320:	d1 f0       	breq	.+52     	; 0x1356 <__fixunssfsi+0x46>
    1322:	66 0f       	add	r22, r22
    1324:	77 1f       	adc	r23, r23
    1326:	88 1f       	adc	r24, r24
    1328:	99 1f       	adc	r25, r25
    132a:	1a f0       	brmi	.+6      	; 0x1332 <__fixunssfsi+0x22>
    132c:	ba 95       	dec	r27
    132e:	c9 f7       	brne	.-14     	; 0x1322 <__fixunssfsi+0x12>
    1330:	12 c0       	rjmp	.+36     	; 0x1356 <__fixunssfsi+0x46>
    1332:	b1 30       	cpi	r27, 0x01	; 1
    1334:	81 f0       	breq	.+32     	; 0x1356 <__fixunssfsi+0x46>
    1336:	c3 d0       	rcall	.+390    	; 0x14be <__fp_zero>
    1338:	b1 e0       	ldi	r27, 0x01	; 1
    133a:	08 95       	ret
    133c:	c0 c0       	rjmp	.+384    	; 0x14be <__fp_zero>
    133e:	67 2f       	mov	r22, r23
    1340:	78 2f       	mov	r23, r24
    1342:	88 27       	eor	r24, r24
    1344:	b8 5f       	subi	r27, 0xF8	; 248
    1346:	39 f0       	breq	.+14     	; 0x1356 <__fixunssfsi+0x46>
    1348:	b9 3f       	cpi	r27, 0xF9	; 249
    134a:	cc f3       	brlt	.-14     	; 0x133e <__fixunssfsi+0x2e>
    134c:	86 95       	lsr	r24
    134e:	77 95       	ror	r23
    1350:	67 95       	ror	r22
    1352:	b3 95       	inc	r27
    1354:	d9 f7       	brne	.-10     	; 0x134c <__fixunssfsi+0x3c>
    1356:	3e f4       	brtc	.+14     	; 0x1366 <__fixunssfsi+0x56>
    1358:	90 95       	com	r25
    135a:	80 95       	com	r24
    135c:	70 95       	com	r23
    135e:	61 95       	neg	r22
    1360:	7f 4f       	sbci	r23, 0xFF	; 255
    1362:	8f 4f       	sbci	r24, 0xFF	; 255
    1364:	9f 4f       	sbci	r25, 0xFF	; 255
    1366:	08 95       	ret

00001368 <__floatunsisf>:
    1368:	e8 94       	clt
    136a:	09 c0       	rjmp	.+18     	; 0x137e <__floatsisf+0x12>

0000136c <__floatsisf>:
    136c:	97 fb       	bst	r25, 7
    136e:	3e f4       	brtc	.+14     	; 0x137e <__floatsisf+0x12>
    1370:	90 95       	com	r25
    1372:	80 95       	com	r24
    1374:	70 95       	com	r23
    1376:	61 95       	neg	r22
    1378:	7f 4f       	sbci	r23, 0xFF	; 255
    137a:	8f 4f       	sbci	r24, 0xFF	; 255
    137c:	9f 4f       	sbci	r25, 0xFF	; 255
    137e:	99 23       	and	r25, r25
    1380:	a9 f0       	breq	.+42     	; 0x13ac <__floatsisf+0x40>
    1382:	f9 2f       	mov	r31, r25
    1384:	96 e9       	ldi	r25, 0x96	; 150
    1386:	bb 27       	eor	r27, r27
    1388:	93 95       	inc	r25
    138a:	f6 95       	lsr	r31
    138c:	87 95       	ror	r24
    138e:	77 95       	ror	r23
    1390:	67 95       	ror	r22
    1392:	b7 95       	ror	r27
    1394:	f1 11       	cpse	r31, r1
    1396:	f8 cf       	rjmp	.-16     	; 0x1388 <__floatsisf+0x1c>
    1398:	fa f4       	brpl	.+62     	; 0x13d8 <__floatsisf+0x6c>
    139a:	bb 0f       	add	r27, r27
    139c:	11 f4       	brne	.+4      	; 0x13a2 <__floatsisf+0x36>
    139e:	60 ff       	sbrs	r22, 0
    13a0:	1b c0       	rjmp	.+54     	; 0x13d8 <__floatsisf+0x6c>
    13a2:	6f 5f       	subi	r22, 0xFF	; 255
    13a4:	7f 4f       	sbci	r23, 0xFF	; 255
    13a6:	8f 4f       	sbci	r24, 0xFF	; 255
    13a8:	9f 4f       	sbci	r25, 0xFF	; 255
    13aa:	16 c0       	rjmp	.+44     	; 0x13d8 <__floatsisf+0x6c>
    13ac:	88 23       	and	r24, r24
    13ae:	11 f0       	breq	.+4      	; 0x13b4 <__floatsisf+0x48>
    13b0:	96 e9       	ldi	r25, 0x96	; 150
    13b2:	11 c0       	rjmp	.+34     	; 0x13d6 <__floatsisf+0x6a>
    13b4:	77 23       	and	r23, r23
    13b6:	21 f0       	breq	.+8      	; 0x13c0 <__floatsisf+0x54>
    13b8:	9e e8       	ldi	r25, 0x8E	; 142
    13ba:	87 2f       	mov	r24, r23
    13bc:	76 2f       	mov	r23, r22
    13be:	05 c0       	rjmp	.+10     	; 0x13ca <__floatsisf+0x5e>
    13c0:	66 23       	and	r22, r22
    13c2:	71 f0       	breq	.+28     	; 0x13e0 <__floatsisf+0x74>
    13c4:	96 e8       	ldi	r25, 0x86	; 134
    13c6:	86 2f       	mov	r24, r22
    13c8:	70 e0       	ldi	r23, 0x00	; 0
    13ca:	60 e0       	ldi	r22, 0x00	; 0
    13cc:	2a f0       	brmi	.+10     	; 0x13d8 <__floatsisf+0x6c>
    13ce:	9a 95       	dec	r25
    13d0:	66 0f       	add	r22, r22
    13d2:	77 1f       	adc	r23, r23
    13d4:	88 1f       	adc	r24, r24
    13d6:	da f7       	brpl	.-10     	; 0x13ce <__floatsisf+0x62>
    13d8:	88 0f       	add	r24, r24
    13da:	96 95       	lsr	r25
    13dc:	87 95       	ror	r24
    13de:	97 f9       	bld	r25, 7
    13e0:	08 95       	ret

000013e2 <__fp_cmp>:
    13e2:	99 0f       	add	r25, r25
    13e4:	00 08       	sbc	r0, r0
    13e6:	55 0f       	add	r21, r21
    13e8:	aa 0b       	sbc	r26, r26
    13ea:	e0 e8       	ldi	r30, 0x80	; 128
    13ec:	fe ef       	ldi	r31, 0xFE	; 254
    13ee:	16 16       	cp	r1, r22
    13f0:	17 06       	cpc	r1, r23
    13f2:	e8 07       	cpc	r30, r24
    13f4:	f9 07       	cpc	r31, r25
    13f6:	c0 f0       	brcs	.+48     	; 0x1428 <__fp_cmp+0x46>
    13f8:	12 16       	cp	r1, r18
    13fa:	13 06       	cpc	r1, r19
    13fc:	e4 07       	cpc	r30, r20
    13fe:	f5 07       	cpc	r31, r21
    1400:	98 f0       	brcs	.+38     	; 0x1428 <__fp_cmp+0x46>
    1402:	62 1b       	sub	r22, r18
    1404:	73 0b       	sbc	r23, r19
    1406:	84 0b       	sbc	r24, r20
    1408:	95 0b       	sbc	r25, r21
    140a:	39 f4       	brne	.+14     	; 0x141a <__fp_cmp+0x38>
    140c:	0a 26       	eor	r0, r26
    140e:	61 f0       	breq	.+24     	; 0x1428 <__fp_cmp+0x46>
    1410:	23 2b       	or	r18, r19
    1412:	24 2b       	or	r18, r20
    1414:	25 2b       	or	r18, r21
    1416:	21 f4       	brne	.+8      	; 0x1420 <__fp_cmp+0x3e>
    1418:	08 95       	ret
    141a:	0a 26       	eor	r0, r26
    141c:	09 f4       	brne	.+2      	; 0x1420 <__fp_cmp+0x3e>
    141e:	a1 40       	sbci	r26, 0x01	; 1
    1420:	a6 95       	lsr	r26
    1422:	8f ef       	ldi	r24, 0xFF	; 255
    1424:	81 1d       	adc	r24, r1
    1426:	81 1d       	adc	r24, r1
    1428:	08 95       	ret

0000142a <__fp_inf>:
    142a:	97 f9       	bld	r25, 7
    142c:	9f 67       	ori	r25, 0x7F	; 127
    142e:	80 e8       	ldi	r24, 0x80	; 128
    1430:	70 e0       	ldi	r23, 0x00	; 0
    1432:	60 e0       	ldi	r22, 0x00	; 0
    1434:	08 95       	ret

00001436 <__fp_nan>:
    1436:	9f ef       	ldi	r25, 0xFF	; 255
    1438:	80 ec       	ldi	r24, 0xC0	; 192
    143a:	08 95       	ret

0000143c <__fp_pscA>:
    143c:	00 24       	eor	r0, r0
    143e:	0a 94       	dec	r0
    1440:	16 16       	cp	r1, r22
    1442:	17 06       	cpc	r1, r23
    1444:	18 06       	cpc	r1, r24
    1446:	09 06       	cpc	r0, r25
    1448:	08 95       	ret

0000144a <__fp_pscB>:
    144a:	00 24       	eor	r0, r0
    144c:	0a 94       	dec	r0
    144e:	12 16       	cp	r1, r18
    1450:	13 06       	cpc	r1, r19
    1452:	14 06       	cpc	r1, r20
    1454:	05 06       	cpc	r0, r21
    1456:	08 95       	ret

00001458 <__fp_round>:
    1458:	09 2e       	mov	r0, r25
    145a:	03 94       	inc	r0
    145c:	00 0c       	add	r0, r0
    145e:	11 f4       	brne	.+4      	; 0x1464 <__fp_round+0xc>
    1460:	88 23       	and	r24, r24
    1462:	52 f0       	brmi	.+20     	; 0x1478 <__fp_round+0x20>
    1464:	bb 0f       	add	r27, r27
    1466:	40 f4       	brcc	.+16     	; 0x1478 <__fp_round+0x20>
    1468:	bf 2b       	or	r27, r31
    146a:	11 f4       	brne	.+4      	; 0x1470 <__fp_round+0x18>
    146c:	60 ff       	sbrs	r22, 0
    146e:	04 c0       	rjmp	.+8      	; 0x1478 <__fp_round+0x20>
    1470:	6f 5f       	subi	r22, 0xFF	; 255
    1472:	7f 4f       	sbci	r23, 0xFF	; 255
    1474:	8f 4f       	sbci	r24, 0xFF	; 255
    1476:	9f 4f       	sbci	r25, 0xFF	; 255
    1478:	08 95       	ret

0000147a <__fp_split3>:
    147a:	57 fd       	sbrc	r21, 7
    147c:	90 58       	subi	r25, 0x80	; 128
    147e:	44 0f       	add	r20, r20
    1480:	55 1f       	adc	r21, r21
    1482:	59 f0       	breq	.+22     	; 0x149a <__fp_splitA+0x10>
    1484:	5f 3f       	cpi	r21, 0xFF	; 255
    1486:	71 f0       	breq	.+28     	; 0x14a4 <__fp_splitA+0x1a>
    1488:	47 95       	ror	r20

0000148a <__fp_splitA>:
    148a:	88 0f       	add	r24, r24
    148c:	97 fb       	bst	r25, 7
    148e:	99 1f       	adc	r25, r25
    1490:	61 f0       	breq	.+24     	; 0x14aa <__fp_splitA+0x20>
    1492:	9f 3f       	cpi	r25, 0xFF	; 255
    1494:	79 f0       	breq	.+30     	; 0x14b4 <__fp_splitA+0x2a>
    1496:	87 95       	ror	r24
    1498:	08 95       	ret
    149a:	12 16       	cp	r1, r18
    149c:	13 06       	cpc	r1, r19
    149e:	14 06       	cpc	r1, r20
    14a0:	55 1f       	adc	r21, r21
    14a2:	f2 cf       	rjmp	.-28     	; 0x1488 <__fp_split3+0xe>
    14a4:	46 95       	lsr	r20
    14a6:	f1 df       	rcall	.-30     	; 0x148a <__fp_splitA>
    14a8:	08 c0       	rjmp	.+16     	; 0x14ba <__fp_splitA+0x30>
    14aa:	16 16       	cp	r1, r22
    14ac:	17 06       	cpc	r1, r23
    14ae:	18 06       	cpc	r1, r24
    14b0:	99 1f       	adc	r25, r25
    14b2:	f1 cf       	rjmp	.-30     	; 0x1496 <__fp_splitA+0xc>
    14b4:	86 95       	lsr	r24
    14b6:	71 05       	cpc	r23, r1
    14b8:	61 05       	cpc	r22, r1
    14ba:	08 94       	sec
    14bc:	08 95       	ret

000014be <__fp_zero>:
    14be:	e8 94       	clt

000014c0 <__fp_szero>:
    14c0:	bb 27       	eor	r27, r27
    14c2:	66 27       	eor	r22, r22
    14c4:	77 27       	eor	r23, r23
    14c6:	cb 01       	movw	r24, r22
    14c8:	97 f9       	bld	r25, 7
    14ca:	08 95       	ret

000014cc <__gesf2>:
    14cc:	8a df       	rcall	.-236    	; 0x13e2 <__fp_cmp>
    14ce:	08 f4       	brcc	.+2      	; 0x14d2 <__gesf2+0x6>
    14d0:	8f ef       	ldi	r24, 0xFF	; 255
    14d2:	08 95       	ret

000014d4 <__mulsf3>:
    14d4:	0b d0       	rcall	.+22     	; 0x14ec <__mulsf3x>
    14d6:	c0 cf       	rjmp	.-128    	; 0x1458 <__fp_round>
    14d8:	b1 df       	rcall	.-158    	; 0x143c <__fp_pscA>
    14da:	28 f0       	brcs	.+10     	; 0x14e6 <__mulsf3+0x12>
    14dc:	b6 df       	rcall	.-148    	; 0x144a <__fp_pscB>
    14de:	18 f0       	brcs	.+6      	; 0x14e6 <__mulsf3+0x12>
    14e0:	95 23       	and	r25, r21
    14e2:	09 f0       	breq	.+2      	; 0x14e6 <__mulsf3+0x12>
    14e4:	a2 cf       	rjmp	.-188    	; 0x142a <__fp_inf>
    14e6:	a7 cf       	rjmp	.-178    	; 0x1436 <__fp_nan>
    14e8:	11 24       	eor	r1, r1
    14ea:	ea cf       	rjmp	.-44     	; 0x14c0 <__fp_szero>

000014ec <__mulsf3x>:
    14ec:	c6 df       	rcall	.-116    	; 0x147a <__fp_split3>
    14ee:	a0 f3       	brcs	.-24     	; 0x14d8 <__mulsf3+0x4>

000014f0 <__mulsf3_pse>:
    14f0:	95 9f       	mul	r25, r21
    14f2:	d1 f3       	breq	.-12     	; 0x14e8 <__mulsf3+0x14>
    14f4:	95 0f       	add	r25, r21
    14f6:	50 e0       	ldi	r21, 0x00	; 0
    14f8:	55 1f       	adc	r21, r21
    14fa:	62 9f       	mul	r22, r18
    14fc:	f0 01       	movw	r30, r0
    14fe:	72 9f       	mul	r23, r18
    1500:	bb 27       	eor	r27, r27
    1502:	f0 0d       	add	r31, r0
    1504:	b1 1d       	adc	r27, r1
    1506:	63 9f       	mul	r22, r19
    1508:	aa 27       	eor	r26, r26
    150a:	f0 0d       	add	r31, r0
    150c:	b1 1d       	adc	r27, r1
    150e:	aa 1f       	adc	r26, r26
    1510:	64 9f       	mul	r22, r20
    1512:	66 27       	eor	r22, r22
    1514:	b0 0d       	add	r27, r0
    1516:	a1 1d       	adc	r26, r1
    1518:	66 1f       	adc	r22, r22
    151a:	82 9f       	mul	r24, r18
    151c:	22 27       	eor	r18, r18
    151e:	b0 0d       	add	r27, r0
    1520:	a1 1d       	adc	r26, r1
    1522:	62 1f       	adc	r22, r18
    1524:	73 9f       	mul	r23, r19
    1526:	b0 0d       	add	r27, r0
    1528:	a1 1d       	adc	r26, r1
    152a:	62 1f       	adc	r22, r18
    152c:	83 9f       	mul	r24, r19
    152e:	a0 0d       	add	r26, r0
    1530:	61 1d       	adc	r22, r1
    1532:	22 1f       	adc	r18, r18
    1534:	74 9f       	mul	r23, r20
    1536:	33 27       	eor	r19, r19
    1538:	a0 0d       	add	r26, r0
    153a:	61 1d       	adc	r22, r1
    153c:	23 1f       	adc	r18, r19
    153e:	84 9f       	mul	r24, r20
    1540:	60 0d       	add	r22, r0
    1542:	21 1d       	adc	r18, r1
    1544:	82 2f       	mov	r24, r18
    1546:	76 2f       	mov	r23, r22
    1548:	6a 2f       	mov	r22, r26
    154a:	11 24       	eor	r1, r1
    154c:	9f 57       	subi	r25, 0x7F	; 127
    154e:	50 40       	sbci	r21, 0x00	; 0
    1550:	8a f0       	brmi	.+34     	; 0x1574 <__mulsf3_pse+0x84>
    1552:	e1 f0       	breq	.+56     	; 0x158c <__mulsf3_pse+0x9c>
    1554:	88 23       	and	r24, r24
    1556:	4a f0       	brmi	.+18     	; 0x156a <__mulsf3_pse+0x7a>
    1558:	ee 0f       	add	r30, r30
    155a:	ff 1f       	adc	r31, r31
    155c:	bb 1f       	adc	r27, r27
    155e:	66 1f       	adc	r22, r22
    1560:	77 1f       	adc	r23, r23
    1562:	88 1f       	adc	r24, r24
    1564:	91 50       	subi	r25, 0x01	; 1
    1566:	50 40       	sbci	r21, 0x00	; 0
    1568:	a9 f7       	brne	.-22     	; 0x1554 <__mulsf3_pse+0x64>
    156a:	9e 3f       	cpi	r25, 0xFE	; 254
    156c:	51 05       	cpc	r21, r1
    156e:	70 f0       	brcs	.+28     	; 0x158c <__mulsf3_pse+0x9c>
    1570:	5c cf       	rjmp	.-328    	; 0x142a <__fp_inf>
    1572:	a6 cf       	rjmp	.-180    	; 0x14c0 <__fp_szero>
    1574:	5f 3f       	cpi	r21, 0xFF	; 255
    1576:	ec f3       	brlt	.-6      	; 0x1572 <__mulsf3_pse+0x82>
    1578:	98 3e       	cpi	r25, 0xE8	; 232
    157a:	dc f3       	brlt	.-10     	; 0x1572 <__mulsf3_pse+0x82>
    157c:	86 95       	lsr	r24
    157e:	77 95       	ror	r23
    1580:	67 95       	ror	r22
    1582:	b7 95       	ror	r27
    1584:	f7 95       	ror	r31
    1586:	e7 95       	ror	r30
    1588:	9f 5f       	subi	r25, 0xFF	; 255
    158a:	c1 f7       	brne	.-16     	; 0x157c <__mulsf3_pse+0x8c>
    158c:	fe 2b       	or	r31, r30
    158e:	88 0f       	add	r24, r24
    1590:	91 1d       	adc	r25, r1
    1592:	96 95       	lsr	r25
    1594:	87 95       	ror	r24
    1596:	97 f9       	bld	r25, 7
    1598:	08 95       	ret
    159a:	11 f4       	brne	.+4      	; 0x15a0 <__mulsf3_pse+0xb0>
    159c:	0e f4       	brtc	.+2      	; 0x15a0 <__mulsf3_pse+0xb0>
    159e:	4b cf       	rjmp	.-362    	; 0x1436 <__fp_nan>
    15a0:	3e c0       	rjmp	.+124    	; 0x161e <__fp_mpack>

000015a2 <sqrt>:
    15a2:	73 df       	rcall	.-282    	; 0x148a <__fp_splitA>
    15a4:	d0 f3       	brcs	.-12     	; 0x159a <__mulsf3_pse+0xaa>
    15a6:	99 23       	and	r25, r25
    15a8:	d9 f3       	breq	.-10     	; 0x15a0 <__mulsf3_pse+0xb0>
    15aa:	ce f3       	brts	.-14     	; 0x159e <__mulsf3_pse+0xae>
    15ac:	9f 57       	subi	r25, 0x7F	; 127
    15ae:	55 0b       	sbc	r21, r21
    15b0:	87 ff       	sbrs	r24, 7
    15b2:	43 d0       	rcall	.+134    	; 0x163a <__fp_norm2>
    15b4:	00 24       	eor	r0, r0
    15b6:	a0 e6       	ldi	r26, 0x60	; 96
    15b8:	40 ea       	ldi	r20, 0xA0	; 160
    15ba:	90 01       	movw	r18, r0
    15bc:	80 58       	subi	r24, 0x80	; 128
    15be:	56 95       	lsr	r21
    15c0:	97 95       	ror	r25
    15c2:	28 f4       	brcc	.+10     	; 0x15ce <sqrt+0x2c>
    15c4:	80 5c       	subi	r24, 0xC0	; 192
    15c6:	66 0f       	add	r22, r22
    15c8:	77 1f       	adc	r23, r23
    15ca:	88 1f       	adc	r24, r24
    15cc:	20 f0       	brcs	.+8      	; 0x15d6 <sqrt+0x34>
    15ce:	26 17       	cp	r18, r22
    15d0:	37 07       	cpc	r19, r23
    15d2:	48 07       	cpc	r20, r24
    15d4:	30 f4       	brcc	.+12     	; 0x15e2 <sqrt+0x40>
    15d6:	62 1b       	sub	r22, r18
    15d8:	73 0b       	sbc	r23, r19
    15da:	84 0b       	sbc	r24, r20
    15dc:	20 29       	or	r18, r0
    15de:	31 29       	or	r19, r1
    15e0:	4a 2b       	or	r20, r26
    15e2:	a6 95       	lsr	r26
    15e4:	17 94       	ror	r1
    15e6:	07 94       	ror	r0
    15e8:	20 25       	eor	r18, r0
    15ea:	31 25       	eor	r19, r1
    15ec:	4a 27       	eor	r20, r26
    15ee:	58 f7       	brcc	.-42     	; 0x15c6 <sqrt+0x24>
    15f0:	66 0f       	add	r22, r22
    15f2:	77 1f       	adc	r23, r23
    15f4:	88 1f       	adc	r24, r24
    15f6:	20 f0       	brcs	.+8      	; 0x1600 <sqrt+0x5e>
    15f8:	26 17       	cp	r18, r22
    15fa:	37 07       	cpc	r19, r23
    15fc:	48 07       	cpc	r20, r24
    15fe:	30 f4       	brcc	.+12     	; 0x160c <sqrt+0x6a>
    1600:	62 0b       	sbc	r22, r18
    1602:	73 0b       	sbc	r23, r19
    1604:	84 0b       	sbc	r24, r20
    1606:	20 0d       	add	r18, r0
    1608:	31 1d       	adc	r19, r1
    160a:	41 1d       	adc	r20, r1
    160c:	a0 95       	com	r26
    160e:	81 f7       	brne	.-32     	; 0x15f0 <sqrt+0x4e>
    1610:	b9 01       	movw	r22, r18
    1612:	84 2f       	mov	r24, r20
    1614:	91 58       	subi	r25, 0x81	; 129
    1616:	88 0f       	add	r24, r24
    1618:	96 95       	lsr	r25
    161a:	87 95       	ror	r24
    161c:	08 95       	ret

0000161e <__fp_mpack>:
    161e:	9f 3f       	cpi	r25, 0xFF	; 255
    1620:	31 f0       	breq	.+12     	; 0x162e <__fp_mpack_finite+0xc>

00001622 <__fp_mpack_finite>:
    1622:	91 50       	subi	r25, 0x01	; 1
    1624:	20 f4       	brcc	.+8      	; 0x162e <__fp_mpack_finite+0xc>
    1626:	87 95       	ror	r24
    1628:	77 95       	ror	r23
    162a:	67 95       	ror	r22
    162c:	b7 95       	ror	r27
    162e:	88 0f       	add	r24, r24
    1630:	91 1d       	adc	r25, r1
    1632:	96 95       	lsr	r25
    1634:	87 95       	ror	r24
    1636:	97 f9       	bld	r25, 7
    1638:	08 95       	ret

0000163a <__fp_norm2>:
    163a:	91 50       	subi	r25, 0x01	; 1
    163c:	50 40       	sbci	r21, 0x00	; 0
    163e:	66 0f       	add	r22, r22
    1640:	77 1f       	adc	r23, r23
    1642:	88 1f       	adc	r24, r24
    1644:	d2 f7       	brpl	.-12     	; 0x163a <__fp_norm2>
    1646:	08 95       	ret

00001648 <__divmodsi4>:
    1648:	97 fb       	bst	r25, 7
    164a:	09 2e       	mov	r0, r25
    164c:	05 26       	eor	r0, r21
    164e:	0e d0       	rcall	.+28     	; 0x166c <__divmodsi4_neg1>
    1650:	57 fd       	sbrc	r21, 7
    1652:	04 d0       	rcall	.+8      	; 0x165c <__divmodsi4_neg2>
    1654:	4b d0       	rcall	.+150    	; 0x16ec <__udivmodsi4>
    1656:	0a d0       	rcall	.+20     	; 0x166c <__divmodsi4_neg1>
    1658:	00 1c       	adc	r0, r0
    165a:	38 f4       	brcc	.+14     	; 0x166a <__divmodsi4_exit>

0000165c <__divmodsi4_neg2>:
    165c:	50 95       	com	r21
    165e:	40 95       	com	r20
    1660:	30 95       	com	r19
    1662:	21 95       	neg	r18
    1664:	3f 4f       	sbci	r19, 0xFF	; 255
    1666:	4f 4f       	sbci	r20, 0xFF	; 255
    1668:	5f 4f       	sbci	r21, 0xFF	; 255

0000166a <__divmodsi4_exit>:
    166a:	08 95       	ret

0000166c <__divmodsi4_neg1>:
    166c:	f6 f7       	brtc	.-4      	; 0x166a <__divmodsi4_exit>
    166e:	90 95       	com	r25
    1670:	80 95       	com	r24
    1672:	70 95       	com	r23
    1674:	61 95       	neg	r22
    1676:	7f 4f       	sbci	r23, 0xFF	; 255
    1678:	8f 4f       	sbci	r24, 0xFF	; 255
    167a:	9f 4f       	sbci	r25, 0xFF	; 255
    167c:	08 95       	ret

0000167e <__prologue_saves__>:
    167e:	2f 92       	push	r2
    1680:	3f 92       	push	r3
    1682:	4f 92       	push	r4
    1684:	5f 92       	push	r5
    1686:	6f 92       	push	r6
    1688:	7f 92       	push	r7
    168a:	8f 92       	push	r8
    168c:	9f 92       	push	r9
    168e:	af 92       	push	r10
    1690:	bf 92       	push	r11
    1692:	cf 92       	push	r12
    1694:	df 92       	push	r13
    1696:	ef 92       	push	r14
    1698:	ff 92       	push	r15
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	cd b7       	in	r28, 0x3d	; 61
    16a4:	de b7       	in	r29, 0x3e	; 62
    16a6:	ca 1b       	sub	r28, r26
    16a8:	db 0b       	sbc	r29, r27
    16aa:	0f b6       	in	r0, 0x3f	; 63
    16ac:	f8 94       	cli
    16ae:	de bf       	out	0x3e, r29	; 62
    16b0:	0f be       	out	0x3f, r0	; 63
    16b2:	cd bf       	out	0x3d, r28	; 61
    16b4:	09 94       	ijmp

000016b6 <__epilogue_restores__>:
    16b6:	2a 88       	ldd	r2, Y+18	; 0x12
    16b8:	39 88       	ldd	r3, Y+17	; 0x11
    16ba:	48 88       	ldd	r4, Y+16	; 0x10
    16bc:	5f 84       	ldd	r5, Y+15	; 0x0f
    16be:	6e 84       	ldd	r6, Y+14	; 0x0e
    16c0:	7d 84       	ldd	r7, Y+13	; 0x0d
    16c2:	8c 84       	ldd	r8, Y+12	; 0x0c
    16c4:	9b 84       	ldd	r9, Y+11	; 0x0b
    16c6:	aa 84       	ldd	r10, Y+10	; 0x0a
    16c8:	b9 84       	ldd	r11, Y+9	; 0x09
    16ca:	c8 84       	ldd	r12, Y+8	; 0x08
    16cc:	df 80       	ldd	r13, Y+7	; 0x07
    16ce:	ee 80       	ldd	r14, Y+6	; 0x06
    16d0:	fd 80       	ldd	r15, Y+5	; 0x05
    16d2:	0c 81       	ldd	r16, Y+4	; 0x04
    16d4:	1b 81       	ldd	r17, Y+3	; 0x03
    16d6:	aa 81       	ldd	r26, Y+2	; 0x02
    16d8:	b9 81       	ldd	r27, Y+1	; 0x01
    16da:	ce 0f       	add	r28, r30
    16dc:	d1 1d       	adc	r29, r1
    16de:	0f b6       	in	r0, 0x3f	; 63
    16e0:	f8 94       	cli
    16e2:	de bf       	out	0x3e, r29	; 62
    16e4:	0f be       	out	0x3f, r0	; 63
    16e6:	cd bf       	out	0x3d, r28	; 61
    16e8:	ed 01       	movw	r28, r26
    16ea:	08 95       	ret

000016ec <__udivmodsi4>:
    16ec:	a1 e2       	ldi	r26, 0x21	; 33
    16ee:	1a 2e       	mov	r1, r26
    16f0:	aa 1b       	sub	r26, r26
    16f2:	bb 1b       	sub	r27, r27
    16f4:	fd 01       	movw	r30, r26
    16f6:	0d c0       	rjmp	.+26     	; 0x1712 <__udivmodsi4_ep>

000016f8 <__udivmodsi4_loop>:
    16f8:	aa 1f       	adc	r26, r26
    16fa:	bb 1f       	adc	r27, r27
    16fc:	ee 1f       	adc	r30, r30
    16fe:	ff 1f       	adc	r31, r31
    1700:	a2 17       	cp	r26, r18
    1702:	b3 07       	cpc	r27, r19
    1704:	e4 07       	cpc	r30, r20
    1706:	f5 07       	cpc	r31, r21
    1708:	20 f0       	brcs	.+8      	; 0x1712 <__udivmodsi4_ep>
    170a:	a2 1b       	sub	r26, r18
    170c:	b3 0b       	sbc	r27, r19
    170e:	e4 0b       	sbc	r30, r20
    1710:	f5 0b       	sbc	r31, r21

00001712 <__udivmodsi4_ep>:
    1712:	66 1f       	adc	r22, r22
    1714:	77 1f       	adc	r23, r23
    1716:	88 1f       	adc	r24, r24
    1718:	99 1f       	adc	r25, r25
    171a:	1a 94       	dec	r1
    171c:	69 f7       	brne	.-38     	; 0x16f8 <__udivmodsi4_loop>
    171e:	60 95       	com	r22
    1720:	70 95       	com	r23
    1722:	80 95       	com	r24
    1724:	90 95       	com	r25
    1726:	9b 01       	movw	r18, r22
    1728:	ac 01       	movw	r20, r24
    172a:	bd 01       	movw	r22, r26
    172c:	cf 01       	movw	r24, r30
    172e:	08 95       	ret

00001730 <__ftoa_engine>:
    1730:	28 30       	cpi	r18, 0x08	; 8
    1732:	08 f0       	brcs	.+2      	; 0x1736 <__ftoa_engine+0x6>
    1734:	27 e0       	ldi	r18, 0x07	; 7
    1736:	33 27       	eor	r19, r19
    1738:	da 01       	movw	r26, r20
    173a:	99 0f       	add	r25, r25
    173c:	31 1d       	adc	r19, r1
    173e:	87 fd       	sbrc	r24, 7
    1740:	91 60       	ori	r25, 0x01	; 1
    1742:	00 96       	adiw	r24, 0x00	; 0
    1744:	61 05       	cpc	r22, r1
    1746:	71 05       	cpc	r23, r1
    1748:	39 f4       	brne	.+14     	; 0x1758 <__ftoa_engine+0x28>
    174a:	32 60       	ori	r19, 0x02	; 2
    174c:	2e 5f       	subi	r18, 0xFE	; 254
    174e:	3d 93       	st	X+, r19
    1750:	30 e3       	ldi	r19, 0x30	; 48
    1752:	2a 95       	dec	r18
    1754:	e1 f7       	brne	.-8      	; 0x174e <__ftoa_engine+0x1e>
    1756:	08 95       	ret
    1758:	9f 3f       	cpi	r25, 0xFF	; 255
    175a:	30 f0       	brcs	.+12     	; 0x1768 <__ftoa_engine+0x38>
    175c:	80 38       	cpi	r24, 0x80	; 128
    175e:	71 05       	cpc	r23, r1
    1760:	61 05       	cpc	r22, r1
    1762:	09 f0       	breq	.+2      	; 0x1766 <__ftoa_engine+0x36>
    1764:	3c 5f       	subi	r19, 0xFC	; 252
    1766:	3c 5f       	subi	r19, 0xFC	; 252
    1768:	3d 93       	st	X+, r19
    176a:	91 30       	cpi	r25, 0x01	; 1
    176c:	08 f0       	brcs	.+2      	; 0x1770 <__ftoa_engine+0x40>
    176e:	80 68       	ori	r24, 0x80	; 128
    1770:	91 1d       	adc	r25, r1
    1772:	df 93       	push	r29
    1774:	cf 93       	push	r28
    1776:	1f 93       	push	r17
    1778:	0f 93       	push	r16
    177a:	ff 92       	push	r15
    177c:	ef 92       	push	r14
    177e:	19 2f       	mov	r17, r25
    1780:	98 7f       	andi	r25, 0xF8	; 248
    1782:	96 95       	lsr	r25
    1784:	e9 2f       	mov	r30, r25
    1786:	96 95       	lsr	r25
    1788:	96 95       	lsr	r25
    178a:	e9 0f       	add	r30, r25
    178c:	ff 27       	eor	r31, r31
    178e:	e6 53       	subi	r30, 0x36	; 54
    1790:	ff 4f       	sbci	r31, 0xFF	; 255
    1792:	99 27       	eor	r25, r25
    1794:	33 27       	eor	r19, r19
    1796:	ee 24       	eor	r14, r14
    1798:	ff 24       	eor	r15, r15
    179a:	a7 01       	movw	r20, r14
    179c:	e7 01       	movw	r28, r14
    179e:	05 90       	lpm	r0, Z+
    17a0:	08 94       	sec
    17a2:	07 94       	ror	r0
    17a4:	28 f4       	brcc	.+10     	; 0x17b0 <__ftoa_engine+0x80>
    17a6:	36 0f       	add	r19, r22
    17a8:	e7 1e       	adc	r14, r23
    17aa:	f8 1e       	adc	r15, r24
    17ac:	49 1f       	adc	r20, r25
    17ae:	51 1d       	adc	r21, r1
    17b0:	66 0f       	add	r22, r22
    17b2:	77 1f       	adc	r23, r23
    17b4:	88 1f       	adc	r24, r24
    17b6:	99 1f       	adc	r25, r25
    17b8:	06 94       	lsr	r0
    17ba:	a1 f7       	brne	.-24     	; 0x17a4 <__ftoa_engine+0x74>
    17bc:	05 90       	lpm	r0, Z+
    17be:	07 94       	ror	r0
    17c0:	28 f4       	brcc	.+10     	; 0x17cc <__ftoa_engine+0x9c>
    17c2:	e7 0e       	add	r14, r23
    17c4:	f8 1e       	adc	r15, r24
    17c6:	49 1f       	adc	r20, r25
    17c8:	56 1f       	adc	r21, r22
    17ca:	c1 1d       	adc	r28, r1
    17cc:	77 0f       	add	r23, r23
    17ce:	88 1f       	adc	r24, r24
    17d0:	99 1f       	adc	r25, r25
    17d2:	66 1f       	adc	r22, r22
    17d4:	06 94       	lsr	r0
    17d6:	a1 f7       	brne	.-24     	; 0x17c0 <__ftoa_engine+0x90>
    17d8:	05 90       	lpm	r0, Z+
    17da:	07 94       	ror	r0
    17dc:	28 f4       	brcc	.+10     	; 0x17e8 <__ftoa_engine+0xb8>
    17de:	f8 0e       	add	r15, r24
    17e0:	49 1f       	adc	r20, r25
    17e2:	56 1f       	adc	r21, r22
    17e4:	c7 1f       	adc	r28, r23
    17e6:	d1 1d       	adc	r29, r1
    17e8:	88 0f       	add	r24, r24
    17ea:	99 1f       	adc	r25, r25
    17ec:	66 1f       	adc	r22, r22
    17ee:	77 1f       	adc	r23, r23
    17f0:	06 94       	lsr	r0
    17f2:	a1 f7       	brne	.-24     	; 0x17dc <__ftoa_engine+0xac>
    17f4:	05 90       	lpm	r0, Z+
    17f6:	07 94       	ror	r0
    17f8:	20 f4       	brcc	.+8      	; 0x1802 <__ftoa_engine+0xd2>
    17fa:	49 0f       	add	r20, r25
    17fc:	56 1f       	adc	r21, r22
    17fe:	c7 1f       	adc	r28, r23
    1800:	d8 1f       	adc	r29, r24
    1802:	99 0f       	add	r25, r25
    1804:	66 1f       	adc	r22, r22
    1806:	77 1f       	adc	r23, r23
    1808:	88 1f       	adc	r24, r24
    180a:	06 94       	lsr	r0
    180c:	a9 f7       	brne	.-22     	; 0x17f8 <__ftoa_engine+0xc8>
    180e:	84 91       	lpm	r24, Z+
    1810:	10 95       	com	r17
    1812:	17 70       	andi	r17, 0x07	; 7
    1814:	41 f0       	breq	.+16     	; 0x1826 <__ftoa_engine+0xf6>
    1816:	d6 95       	lsr	r29
    1818:	c7 95       	ror	r28
    181a:	57 95       	ror	r21
    181c:	47 95       	ror	r20
    181e:	f7 94       	ror	r15
    1820:	e7 94       	ror	r14
    1822:	1a 95       	dec	r17
    1824:	c1 f7       	brne	.-16     	; 0x1816 <__ftoa_engine+0xe6>
    1826:	e0 e7       	ldi	r30, 0x70	; 112
    1828:	f0 e0       	ldi	r31, 0x00	; 0
    182a:	68 94       	set
    182c:	15 90       	lpm	r1, Z+
    182e:	15 91       	lpm	r17, Z+
    1830:	35 91       	lpm	r19, Z+
    1832:	65 91       	lpm	r22, Z+
    1834:	95 91       	lpm	r25, Z+
    1836:	05 90       	lpm	r0, Z+
    1838:	7f e2       	ldi	r23, 0x2F	; 47
    183a:	73 95       	inc	r23
    183c:	e1 18       	sub	r14, r1
    183e:	f1 0a       	sbc	r15, r17
    1840:	43 0b       	sbc	r20, r19
    1842:	56 0b       	sbc	r21, r22
    1844:	c9 0b       	sbc	r28, r25
    1846:	d0 09       	sbc	r29, r0
    1848:	c0 f7       	brcc	.-16     	; 0x183a <__ftoa_engine+0x10a>
    184a:	e1 0c       	add	r14, r1
    184c:	f1 1e       	adc	r15, r17
    184e:	43 1f       	adc	r20, r19
    1850:	56 1f       	adc	r21, r22
    1852:	c9 1f       	adc	r28, r25
    1854:	d0 1d       	adc	r29, r0
    1856:	7e f4       	brtc	.+30     	; 0x1876 <__ftoa_engine+0x146>
    1858:	70 33       	cpi	r23, 0x30	; 48
    185a:	11 f4       	brne	.+4      	; 0x1860 <__ftoa_engine+0x130>
    185c:	8a 95       	dec	r24
    185e:	e6 cf       	rjmp	.-52     	; 0x182c <__ftoa_engine+0xfc>
    1860:	e8 94       	clt
    1862:	01 50       	subi	r16, 0x01	; 1
    1864:	30 f0       	brcs	.+12     	; 0x1872 <__ftoa_engine+0x142>
    1866:	08 0f       	add	r16, r24
    1868:	0a f4       	brpl	.+2      	; 0x186c <__ftoa_engine+0x13c>
    186a:	00 27       	eor	r16, r16
    186c:	02 17       	cp	r16, r18
    186e:	08 f4       	brcc	.+2      	; 0x1872 <__ftoa_engine+0x142>
    1870:	20 2f       	mov	r18, r16
    1872:	23 95       	inc	r18
    1874:	02 2f       	mov	r16, r18
    1876:	7a 33       	cpi	r23, 0x3A	; 58
    1878:	28 f0       	brcs	.+10     	; 0x1884 <__ftoa_engine+0x154>
    187a:	79 e3       	ldi	r23, 0x39	; 57
    187c:	7d 93       	st	X+, r23
    187e:	2a 95       	dec	r18
    1880:	e9 f7       	brne	.-6      	; 0x187c <__ftoa_engine+0x14c>
    1882:	10 c0       	rjmp	.+32     	; 0x18a4 <__ftoa_engine+0x174>
    1884:	7d 93       	st	X+, r23
    1886:	2a 95       	dec	r18
    1888:	89 f6       	brne	.-94     	; 0x182c <__ftoa_engine+0xfc>
    188a:	06 94       	lsr	r0
    188c:	97 95       	ror	r25
    188e:	67 95       	ror	r22
    1890:	37 95       	ror	r19
    1892:	17 95       	ror	r17
    1894:	17 94       	ror	r1
    1896:	e1 18       	sub	r14, r1
    1898:	f1 0a       	sbc	r15, r17
    189a:	43 0b       	sbc	r20, r19
    189c:	56 0b       	sbc	r21, r22
    189e:	c9 0b       	sbc	r28, r25
    18a0:	d0 09       	sbc	r29, r0
    18a2:	98 f0       	brcs	.+38     	; 0x18ca <__ftoa_engine+0x19a>
    18a4:	23 95       	inc	r18
    18a6:	7e 91       	ld	r23, -X
    18a8:	73 95       	inc	r23
    18aa:	7a 33       	cpi	r23, 0x3A	; 58
    18ac:	08 f0       	brcs	.+2      	; 0x18b0 <__ftoa_engine+0x180>
    18ae:	70 e3       	ldi	r23, 0x30	; 48
    18b0:	7c 93       	st	X, r23
    18b2:	20 13       	cpse	r18, r16
    18b4:	b8 f7       	brcc	.-18     	; 0x18a4 <__ftoa_engine+0x174>
    18b6:	7e 91       	ld	r23, -X
    18b8:	70 61       	ori	r23, 0x10	; 16
    18ba:	7d 93       	st	X+, r23
    18bc:	30 f0       	brcs	.+12     	; 0x18ca <__ftoa_engine+0x19a>
    18be:	83 95       	inc	r24
    18c0:	71 e3       	ldi	r23, 0x31	; 49
    18c2:	7d 93       	st	X+, r23
    18c4:	70 e3       	ldi	r23, 0x30	; 48
    18c6:	2a 95       	dec	r18
    18c8:	e1 f7       	brne	.-8      	; 0x18c2 <__ftoa_engine+0x192>
    18ca:	11 24       	eor	r1, r1
    18cc:	ef 90       	pop	r14
    18ce:	ff 90       	pop	r15
    18d0:	0f 91       	pop	r16
    18d2:	1f 91       	pop	r17
    18d4:	cf 91       	pop	r28
    18d6:	df 91       	pop	r29
    18d8:	99 27       	eor	r25, r25
    18da:	87 fd       	sbrc	r24, 7
    18dc:	90 95       	com	r25
    18de:	08 95       	ret

000018e0 <strnlen_P>:
    18e0:	fc 01       	movw	r30, r24
    18e2:	05 90       	lpm	r0, Z+
    18e4:	61 50       	subi	r22, 0x01	; 1
    18e6:	70 40       	sbci	r23, 0x00	; 0
    18e8:	01 10       	cpse	r0, r1
    18ea:	d8 f7       	brcc	.-10     	; 0x18e2 <strnlen_P+0x2>
    18ec:	80 95       	com	r24
    18ee:	90 95       	com	r25
    18f0:	8e 0f       	add	r24, r30
    18f2:	9f 1f       	adc	r25, r31
    18f4:	08 95       	ret

000018f6 <strnlen>:
    18f6:	fc 01       	movw	r30, r24
    18f8:	61 50       	subi	r22, 0x01	; 1
    18fa:	70 40       	sbci	r23, 0x00	; 0
    18fc:	01 90       	ld	r0, Z+
    18fe:	01 10       	cpse	r0, r1
    1900:	d8 f7       	brcc	.-10     	; 0x18f8 <strnlen+0x2>
    1902:	80 95       	com	r24
    1904:	90 95       	com	r25
    1906:	8e 0f       	add	r24, r30
    1908:	9f 1f       	adc	r25, r31
    190a:	08 95       	ret

0000190c <fputc>:
    190c:	0f 93       	push	r16
    190e:	1f 93       	push	r17
    1910:	cf 93       	push	r28
    1912:	df 93       	push	r29
    1914:	8c 01       	movw	r16, r24
    1916:	eb 01       	movw	r28, r22
    1918:	8b 81       	ldd	r24, Y+3	; 0x03
    191a:	81 ff       	sbrs	r24, 1
    191c:	1b c0       	rjmp	.+54     	; 0x1954 <fputc+0x48>
    191e:	82 ff       	sbrs	r24, 2
    1920:	0d c0       	rjmp	.+26     	; 0x193c <fputc+0x30>
    1922:	2e 81       	ldd	r18, Y+6	; 0x06
    1924:	3f 81       	ldd	r19, Y+7	; 0x07
    1926:	8c 81       	ldd	r24, Y+4	; 0x04
    1928:	9d 81       	ldd	r25, Y+5	; 0x05
    192a:	28 17       	cp	r18, r24
    192c:	39 07       	cpc	r19, r25
    192e:	64 f4       	brge	.+24     	; 0x1948 <fputc+0x3c>
    1930:	e8 81       	ld	r30, Y
    1932:	f9 81       	ldd	r31, Y+1	; 0x01
    1934:	01 93       	st	Z+, r16
    1936:	f9 83       	std	Y+1, r31	; 0x01
    1938:	e8 83       	st	Y, r30
    193a:	06 c0       	rjmp	.+12     	; 0x1948 <fputc+0x3c>
    193c:	e8 85       	ldd	r30, Y+8	; 0x08
    193e:	f9 85       	ldd	r31, Y+9	; 0x09
    1940:	80 2f       	mov	r24, r16
    1942:	09 95       	icall
    1944:	89 2b       	or	r24, r25
    1946:	31 f4       	brne	.+12     	; 0x1954 <fputc+0x48>
    1948:	8e 81       	ldd	r24, Y+6	; 0x06
    194a:	9f 81       	ldd	r25, Y+7	; 0x07
    194c:	01 96       	adiw	r24, 0x01	; 1
    194e:	9f 83       	std	Y+7, r25	; 0x07
    1950:	8e 83       	std	Y+6, r24	; 0x06
    1952:	02 c0       	rjmp	.+4      	; 0x1958 <fputc+0x4c>
    1954:	0f ef       	ldi	r16, 0xFF	; 255
    1956:	1f ef       	ldi	r17, 0xFF	; 255
    1958:	c8 01       	movw	r24, r16
    195a:	df 91       	pop	r29
    195c:	cf 91       	pop	r28
    195e:	1f 91       	pop	r17
    1960:	0f 91       	pop	r16
    1962:	08 95       	ret

00001964 <sprintf>:
    1964:	ae e0       	ldi	r26, 0x0E	; 14
    1966:	b0 e0       	ldi	r27, 0x00	; 0
    1968:	e8 eb       	ldi	r30, 0xB8	; 184
    196a:	fc e0       	ldi	r31, 0x0C	; 12
    196c:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__prologue_saves__+0x1c>
    1970:	0d 89       	ldd	r16, Y+21	; 0x15
    1972:	1e 89       	ldd	r17, Y+22	; 0x16
    1974:	86 e0       	ldi	r24, 0x06	; 6
    1976:	8c 83       	std	Y+4, r24	; 0x04
    1978:	1a 83       	std	Y+2, r17	; 0x02
    197a:	09 83       	std	Y+1, r16	; 0x01
    197c:	8f ef       	ldi	r24, 0xFF	; 255
    197e:	9f e7       	ldi	r25, 0x7F	; 127
    1980:	9e 83       	std	Y+6, r25	; 0x06
    1982:	8d 83       	std	Y+5, r24	; 0x05
    1984:	9e 01       	movw	r18, r28
    1986:	27 5e       	subi	r18, 0xE7	; 231
    1988:	3f 4f       	sbci	r19, 0xFF	; 255
    198a:	ce 01       	movw	r24, r28
    198c:	01 96       	adiw	r24, 0x01	; 1
    198e:	6f 89       	ldd	r22, Y+23	; 0x17
    1990:	78 8d       	ldd	r23, Y+24	; 0x18
    1992:	a9 01       	movw	r20, r18
    1994:	0e 94 2b 05 	call	0xa56	; 0xa56 <vfprintf>
    1998:	2f 81       	ldd	r18, Y+7	; 0x07
    199a:	38 85       	ldd	r19, Y+8	; 0x08
    199c:	02 0f       	add	r16, r18
    199e:	13 1f       	adc	r17, r19
    19a0:	f8 01       	movw	r30, r16
    19a2:	10 82       	st	Z, r1
    19a4:	2e 96       	adiw	r28, 0x0e	; 14
    19a6:	e4 e0       	ldi	r30, 0x04	; 4
    19a8:	0c 94 69 0b 	jmp	0x16d2	; 0x16d2 <__epilogue_restores__+0x1c>

000019ac <__ultoa_invert>:
    19ac:	fa 01       	movw	r30, r20
    19ae:	aa 27       	eor	r26, r26
    19b0:	28 30       	cpi	r18, 0x08	; 8
    19b2:	51 f1       	breq	.+84     	; 0x1a08 <__ultoa_invert+0x5c>
    19b4:	20 31       	cpi	r18, 0x10	; 16
    19b6:	81 f1       	breq	.+96     	; 0x1a18 <__ultoa_invert+0x6c>
    19b8:	e8 94       	clt
    19ba:	6f 93       	push	r22
    19bc:	6e 7f       	andi	r22, 0xFE	; 254
    19be:	6e 5f       	subi	r22, 0xFE	; 254
    19c0:	7f 4f       	sbci	r23, 0xFF	; 255
    19c2:	8f 4f       	sbci	r24, 0xFF	; 255
    19c4:	9f 4f       	sbci	r25, 0xFF	; 255
    19c6:	af 4f       	sbci	r26, 0xFF	; 255
    19c8:	b1 e0       	ldi	r27, 0x01	; 1
    19ca:	3e d0       	rcall	.+124    	; 0x1a48 <__ultoa_invert+0x9c>
    19cc:	b4 e0       	ldi	r27, 0x04	; 4
    19ce:	3c d0       	rcall	.+120    	; 0x1a48 <__ultoa_invert+0x9c>
    19d0:	67 0f       	add	r22, r23
    19d2:	78 1f       	adc	r23, r24
    19d4:	89 1f       	adc	r24, r25
    19d6:	9a 1f       	adc	r25, r26
    19d8:	a1 1d       	adc	r26, r1
    19da:	68 0f       	add	r22, r24
    19dc:	79 1f       	adc	r23, r25
    19de:	8a 1f       	adc	r24, r26
    19e0:	91 1d       	adc	r25, r1
    19e2:	a1 1d       	adc	r26, r1
    19e4:	6a 0f       	add	r22, r26
    19e6:	71 1d       	adc	r23, r1
    19e8:	81 1d       	adc	r24, r1
    19ea:	91 1d       	adc	r25, r1
    19ec:	a1 1d       	adc	r26, r1
    19ee:	20 d0       	rcall	.+64     	; 0x1a30 <__ultoa_invert+0x84>
    19f0:	09 f4       	brne	.+2      	; 0x19f4 <__ultoa_invert+0x48>
    19f2:	68 94       	set
    19f4:	3f 91       	pop	r19
    19f6:	2a e0       	ldi	r18, 0x0A	; 10
    19f8:	26 9f       	mul	r18, r22
    19fa:	11 24       	eor	r1, r1
    19fc:	30 19       	sub	r19, r0
    19fe:	30 5d       	subi	r19, 0xD0	; 208
    1a00:	31 93       	st	Z+, r19
    1a02:	de f6       	brtc	.-74     	; 0x19ba <__ultoa_invert+0xe>
    1a04:	cf 01       	movw	r24, r30
    1a06:	08 95       	ret
    1a08:	46 2f       	mov	r20, r22
    1a0a:	47 70       	andi	r20, 0x07	; 7
    1a0c:	40 5d       	subi	r20, 0xD0	; 208
    1a0e:	41 93       	st	Z+, r20
    1a10:	b3 e0       	ldi	r27, 0x03	; 3
    1a12:	0f d0       	rcall	.+30     	; 0x1a32 <__ultoa_invert+0x86>
    1a14:	c9 f7       	brne	.-14     	; 0x1a08 <__ultoa_invert+0x5c>
    1a16:	f6 cf       	rjmp	.-20     	; 0x1a04 <__ultoa_invert+0x58>
    1a18:	46 2f       	mov	r20, r22
    1a1a:	4f 70       	andi	r20, 0x0F	; 15
    1a1c:	40 5d       	subi	r20, 0xD0	; 208
    1a1e:	4a 33       	cpi	r20, 0x3A	; 58
    1a20:	18 f0       	brcs	.+6      	; 0x1a28 <__ultoa_invert+0x7c>
    1a22:	49 5d       	subi	r20, 0xD9	; 217
    1a24:	31 fd       	sbrc	r19, 1
    1a26:	40 52       	subi	r20, 0x20	; 32
    1a28:	41 93       	st	Z+, r20
    1a2a:	02 d0       	rcall	.+4      	; 0x1a30 <__ultoa_invert+0x84>
    1a2c:	a9 f7       	brne	.-22     	; 0x1a18 <__ultoa_invert+0x6c>
    1a2e:	ea cf       	rjmp	.-44     	; 0x1a04 <__ultoa_invert+0x58>
    1a30:	b4 e0       	ldi	r27, 0x04	; 4
    1a32:	a6 95       	lsr	r26
    1a34:	97 95       	ror	r25
    1a36:	87 95       	ror	r24
    1a38:	77 95       	ror	r23
    1a3a:	67 95       	ror	r22
    1a3c:	ba 95       	dec	r27
    1a3e:	c9 f7       	brne	.-14     	; 0x1a32 <__ultoa_invert+0x86>
    1a40:	00 97       	sbiw	r24, 0x00	; 0
    1a42:	61 05       	cpc	r22, r1
    1a44:	71 05       	cpc	r23, r1
    1a46:	08 95       	ret
    1a48:	9b 01       	movw	r18, r22
    1a4a:	ac 01       	movw	r20, r24
    1a4c:	0a 2e       	mov	r0, r26
    1a4e:	06 94       	lsr	r0
    1a50:	57 95       	ror	r21
    1a52:	47 95       	ror	r20
    1a54:	37 95       	ror	r19
    1a56:	27 95       	ror	r18
    1a58:	ba 95       	dec	r27
    1a5a:	c9 f7       	brne	.-14     	; 0x1a4e <__ultoa_invert+0xa2>
    1a5c:	62 0f       	add	r22, r18
    1a5e:	73 1f       	adc	r23, r19
    1a60:	84 1f       	adc	r24, r20
    1a62:	95 1f       	adc	r25, r21
    1a64:	a0 1d       	adc	r26, r0
    1a66:	08 95       	ret

00001a68 <_exit>:
    1a68:	f8 94       	cli

00001a6a <__stop_program>:
    1a6a:	ff cf       	rjmp	.-2      	; 0x1a6a <__stop_program>
